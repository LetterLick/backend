{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1","program":"C:\\Users\\Thomas\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","imap","--edition=2018","C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"native-tls\"","--cfg","feature=\"tls\"","-C","metadata=db94e07f4a474215","-C","extra-filename=-db94e07f4a474215","--out-dir","c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps","--extern","base64=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libbase64-f7e0cd9bb25d056c.rmeta","--extern","bufstream=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libbufstream-b42737447b178e61.rmeta","--extern","chrono=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libchrono-84cbdebeb5ff3a7d.rmeta","--extern","imap_proto=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libimap_proto-fef55b88dd843872.rmeta","--extern","lazy_static=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\liblazy_static-b7f9e4a18426bf68.rmeta","--extern","native_tls=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libnative_tls-79b3e8208a8a2a66.rmeta","--extern","nom=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libnom-d137257cf2ac75bb.rmeta","--extern","regex=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libregex-ac250cc70b798275.rmeta","--cap-lints","allow","-L","native=C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\Thomas\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libimap-db94e07f4a474215.rmeta"},"prelude":{"crate_id":{"name":"imap","disambiguator":[10739339434248939833,0]},"crate_root":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src","external_crates":[{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3561128201319338316,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17201970810512768215,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8471725510333066277,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1408606271729991968,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2378155515347626656,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[15381069245071800192,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14657119252105582078,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5606621638900099391,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16084551100949841811,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11593403043630756628,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[5605722866180288093,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17967756895644667980,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11526805763323257120,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[8316923096797308930,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7495428626639288171,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":16,"id":{"name":"imap_proto","disambiguator":[2089992826444523178,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","num":17,"id":{"name":"nom","disambiguator":[173902814416316252,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":18,"id":{"name":"memchr","disambiguator":[15783122003467717092,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":19,"id":{"name":"lexical_core","disambiguator":[6075333069197064532,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":20,"id":{"name":"cfg_if","disambiguator":[6908286916051260542,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":21,"id":{"name":"arrayvec","disambiguator":[15232507500523502239,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":22,"id":{"name":"static_assertions","disambiguator":[9621623817770991670,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":23,"id":{"name":"ryu","disambiguator":[9435533226426498547,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":24,"id":{"name":"bitflags","disambiguator":[11569842963504915932,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":25,"id":{"name":"lazy_static","disambiguator":[11325378749296408666,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":26,"id":{"name":"regex","disambiguator":[4064920146780953076,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":27,"id":{"name":"regex_syntax","disambiguator":[9653007251572677876,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\parse.rs","num":28,"id":{"name":"aho_corasick","disambiguator":[985329102875456593,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","num":29,"id":{"name":"chrono","disambiguator":[812426079185124459,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","num":30,"id":{"name":"time","disambiguator":[7048013051275278761,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","num":31,"id":{"name":"winapi","disambiguator":[15907525941035647761,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","num":32,"id":{"name":"libc","disambiguator":[16651063452220608819,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","num":33,"id":{"name":"num_integer","disambiguator":[3660120642734710636,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","num":34,"id":{"name":"num_traits","disambiguator":[10394053250549569635,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","num":35,"id":{"name":"serde","disambiguator":[6004221348672012231,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","num":36,"id":{"name":"serde_derive","disambiguator":[7040760908641431391,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","num":37,"id":{"name":"base64","disambiguator":[3449353656310405096,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","num":38,"id":{"name":"bufstream","disambiguator":[6116514323700435927,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","num":39,"id":{"name":"native_tls","disambiguator":[9619573939642408759,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","num":40,"id":{"name":"schannel","disambiguator":[14207553032307897677,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","num":41,"id":{"name":"windows_sys","disambiguator":[1324754951993151084,0]}}],"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":0,"byte_end":3591,"line_start":1,"line_end":95,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":32991,"byte_end":32998,"line_start":208,"line_end":208,"column_start":24,"column_end":31},"alias_span":null,"name":"Mailbox","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33033,"byte_end":33038,"line_start":211,"line_end":211,"column_start":22,"column_end":27},"alias_span":null,"name":"Fetch","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33072,"byte_end":33076,"line_start":214,"line_end":214,"column_start":22,"column_end":26},"alias_span":null,"name":"Name","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33078,"byte_end":33091,"line_start":214,"line_end":214,"column_start":28,"column_end":41},"alias_span":null,"name":"NameAttribute","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33141,"byte_end":33153,"line_start":217,"line_end":217,"column_start":29,"column_end":41},"alias_span":null,"name":"Capabilities","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33141,"byte_end":33153,"line_start":217,"line_end":217,"column_start":29,"column_end":41},"alias_span":null,"name":"Capabilities","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":16,"index":1781},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33209,"byte_end":33224,"line_start":220,"line_end":220,"column_start":21,"column_end":36},"alias_span":null,"name":"StatusAttribute","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3438,"byte_end":3451,"line_start":84,"line_end":84,"column_start":31,"column_end":44},"alias_span":null,"name":"Authenticator","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3489,"byte_end":3490,"line_start":87,"line_end":87,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3524,"byte_end":3529,"line_start":90,"line_end":90,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3531,"byte_end":3537,"line_start":90,"line_end":90,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":0,"byte_end":3591,"line_start":1,"line_end":95,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":73},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620}],"decl_id":null,"docs":" This crate lets you connect to and interact with servers that implement the IMAP protocol ([RFC\n 3501](https://tools.ietf.org/html/rfc3501) and various extensions). After authenticating with\n the server, IMAP lets you list, fetch, and search for e-mails, as well as monitor mailboxes for\n changes. It supports at least the latest three stable Rust releases (possibly even older ones;\n check the [CI results](https://travis-ci.com/jonhoo/rust-imap)).","sig":null,"attributes":[{"value":"/ This crate lets you connect to and interact with servers that implement the IMAP protocol ([RFC","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":0,"byte_end":99,"line_start":1,"line_end":1,"column_start":1,"column_end":100}},{"value":"/ 3501](https://tools.ietf.org/html/rfc3501) and various extensions). After authenticating with","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":100,"byte_end":197,"line_start":2,"line_end":2,"column_start":1,"column_end":98}},{"value":"/ the server, IMAP lets you list, fetch, and search for e-mails, as well as monitor mailboxes for","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":198,"byte_end":297,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ changes. It supports at least the latest three stable Rust releases (possibly even older ones;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":298,"byte_end":396,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ check the [CI results](https://travis-ci.com/jonhoo/rust-imap)).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":397,"byte_end":465,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":466,"byte_end":469,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To connect, use the [`connect`] function. This gives you an unauthenticated [`Client`]. You can","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":470,"byte_end":569,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ then use [`Client::login`] or [`Client::authenticate`] to perform username/password or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":570,"byte_end":660,"line_start":8,"line_end":8,"column_start":1,"column_end":91}},{"value":"/ challenge/response authentication respectively. This in turn gives you an authenticated","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":661,"byte_end":752,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/ [`Session`], which lets you access the mailboxes at the server.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":753,"byte_end":820,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":821,"byte_end":824,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The documentation within this crate borrows heavily from the various RFCs, but should not be","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":825,"byte_end":921,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ considered a complete reference. If anything is unclear, follow the links to the RFCs embedded","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":922,"byte_end":1020,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ in the documentation for the various types and methods and read the raw text there!","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1021,"byte_end":1108,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1109,"byte_end":1112,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Below is a basic client example. See the `examples/` directory for more.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1113,"byte_end":1189,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1190,"byte_end":1193,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1194,"byte_end":1207,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ extern crate imap;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1208,"byte_end":1230,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ extern crate native_tls;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1231,"byte_end":1259,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1260,"byte_end":1263,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn fetch_inbox_top() -> imap::error::Result<Option<String>> {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1264,"byte_end":1329,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/     let domain = \"imap.example.com\";","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1330,"byte_end":1370,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/     let tls = native_tls::TlsConnector::builder().build().unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1371,"byte_end":1442,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1443,"byte_end":1446,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // we pass in the domain twice to check that the server's TLS","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1447,"byte_end":1516,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/     // certificate is valid for the domain we're connecting to.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1517,"byte_end":1584,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/     let client = imap::connect((domain, 993), domain, &tls).unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1585,"byte_end":1658,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1659,"byte_end":1662,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     // the client we have here is unauthenticated.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1663,"byte_end":1717,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/     // to do anything useful with the e-mails, we need to log in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1718,"byte_end":1786,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/     let mut imap_session = client","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1787,"byte_end":1824,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/         .login(\"me@example.com\", \"password\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1825,"byte_end":1873,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/         .map_err(|e| e.0)?;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1874,"byte_end":1905,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1906,"byte_end":1909,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     // we want to fetch the first email in the INBOX mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1910,"byte_end":1974,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/     imap_session.select(\"INBOX\")?;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":1975,"byte_end":2013,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2014,"byte_end":2017,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/     // fetch message number 1 in this mailbox, along with its RFC822 field.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2018,"byte_end":2097,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/     // RFC 822 dictates the format of the body of e-mails","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2098,"byte_end":2159,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/     let messages = imap_session.fetch(\"1\", \"RFC822\")?;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2160,"byte_end":2218,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/     let message = if let Some(m) = messages.iter().next() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2219,"byte_end":2282,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/         m","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2283,"byte_end":2296,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2297,"byte_end":2313,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2314,"byte_end":2342,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/     };","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2343,"byte_end":2353,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2354,"byte_end":2357,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     // extract the message's body","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2358,"byte_end":2395,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/     let body = message.body().expect(\"message did not have a body!\");","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2396,"byte_end":2469,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/     let body = std::str::from_utf8(body)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2470,"byte_end":2514,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/         .expect(\"message was not valid utf-8\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2515,"byte_end":2565,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/         .to_string();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2566,"byte_end":2591,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2592,"byte_end":2595,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // be nice to the server and log out","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2596,"byte_end":2640,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/     imap_session.logout()?;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2641,"byte_end":2672,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2673,"byte_end":2676,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     Ok(Some(body))","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2677,"byte_end":2699,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2700,"byte_end":2705,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2706,"byte_end":2713,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2714,"byte_end":2717,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Opting out of `native_tls`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2718,"byte_end":2751,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2752,"byte_end":2755,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ For situations where using openssl becomes problematic, you can disable the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2756,"byte_end":2835,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ default feature which provides integration with the `native_tls` crate. One major","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2836,"byte_end":2921,"line_start":64,"line_end":64,"column_start":1,"column_end":86}},{"value":"/ reason you might want to do this is cross-compiling. To opt out of native_tls, add","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":2922,"byte_end":3008,"line_start":65,"line_end":65,"column_start":1,"column_end":87}},{"value":"/ this to your Cargo.toml file:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3009,"byte_end":3042,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3043,"byte_end":3046,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3047,"byte_end":3058,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ [dependencies.imap]","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3059,"byte_end":3082,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ version = \"<some version>\"","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3083,"byte_end":3113,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3114,"byte_end":3142,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3143,"byte_end":3150,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3151,"byte_end":3154,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Even without `native_tls`, you can still use TLS by leveraging the pure Rust `rustls`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3155,"byte_end":3244,"line_start":74,"line_end":74,"column_start":1,"column_end":90}},{"value":"/ crate. See the example/rustls.rs file for a working example.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3245,"byte_end":3309,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3310,"byte_end":3332,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3333,"byte_end":3359,"line_start":77,"line_end":77,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":695},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":819},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279}],"decl_id":null,"docs":" This module contains types used throughout the IMAP protocol.\n","sig":null,"attributes":[{"value":"/ This module contains types used throughout the IMAP protocol.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":22754,"byte_end":22819,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27836,"byte_end":27839,"line_start":80,"line_end":80,"column_start":10,"column_end":13},"name":"Uid","qualname":"::types::Uid","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" From section [2.3.1.1 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-2.3.1.1).","sig":null,"attributes":[{"value":"/ From section [2.3.1.1 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-2.3.1.1).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":22844,"byte_end":22936,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":22937,"byte_end":22940,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A 32-bit value assigned to each message, which when used with the unique identifier validity","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":22941,"byte_end":23037,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ value (see below) forms a 64-bit value that will not refer to any other message in the mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23038,"byte_end":23136,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ or any subsequent mailbox with the same name forever.  Unique identifiers are assigned in a","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23137,"byte_end":23232,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ strictly ascending fashion in the mailbox; as each message is added to the mailbox it is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23233,"byte_end":23325,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ assigned a higher UID than the message(s) which were added previously.  Unlike message sequence","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23326,"byte_end":23425,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ numbers, unique identifiers are not necessarily contiguous.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23426,"byte_end":23489,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23490,"byte_end":23493,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The unique identifier of a message will not change during the session, and will generally not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23494,"byte_end":23591,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ change between sessions.  Any change of unique identifiers between sessions will be detectable","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23592,"byte_end":23690,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"/ using the `UIDVALIDITY` mechanism discussed below.  Persistent unique identifiers are required","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23691,"byte_end":23789,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/ for a client to resynchronize its state from a previous session with the server (e.g.,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23790,"byte_end":23880,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ disconnected or offline access clients); this is discussed further in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23881,"byte_end":23954,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ [`IMAP-DISC`](https://tools.ietf.org/html/rfc3501#ref-IMAP-DISC).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":23955,"byte_end":24024,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24025,"byte_end":24028,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Associated with every mailbox are two values which aid in unique identifier handling: the next","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24029,"byte_end":24127,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ unique identifier value and the unique identifier validity value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24128,"byte_end":24197,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24198,"byte_end":24201,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The next unique identifier value is the predicted value that will be assigned to a new message","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24202,"byte_end":24300,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ in the mailbox.  Unless the unique identifier validity also changes (see below), the next","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24301,"byte_end":24394,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ unique identifier value will have the following two characteristics.  First, the next unique","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24395,"byte_end":24491,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ identifier value will not change unless new messages are added to the mailbox; and second, the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24492,"byte_end":24590,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ next unique identifier value will change whenever new messages are added to the mailbox, even","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24591,"byte_end":24688,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ if those new messages are subsequently expunged.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24689,"byte_end":24741,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24742,"byte_end":24745,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ > Note: The next unique identifier value is intended to provide a means for a client to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24746,"byte_end":24837,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ > determine whether any messages have been delivered to the mailbox since the previous time it","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24838,"byte_end":24936,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ > checked this value.  It is not intended to provide any guarantee that any message will have","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":24937,"byte_end":25034,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ > this unique identifier.  A client can only assume, at the time that it obtains the next","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25035,"byte_end":25128,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/ > unique identifier value, that messages arriving after that time will have a UID greater than","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25129,"byte_end":25227,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ > or equal to that value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25228,"byte_end":25257,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25258,"byte_end":25261,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The unique identifier validity value is sent in a `UIDVALIDITY` response code in an `OK`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25262,"byte_end":25354,"line_start":38,"line_end":38,"column_start":1,"column_end":93}},{"value":"/ untagged response at mailbox selection time. If unique identifiers from an earlier session fail","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25355,"byte_end":25454,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ to persist in this session, the unique identifier validity value will be greater than the one","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25455,"byte_end":25552,"line_start":40,"line_end":40,"column_start":1,"column_end":98}},{"value":"/ used in the earlier session.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25553,"byte_end":25585,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25586,"byte_end":25589,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ > Note: Ideally, unique identifiers will persist at all","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25590,"byte_end":25649,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/ > times.  Although this specification recognizes that failure","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25650,"byte_end":25715,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/ > to persist can be unavoidable in certain server","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25716,"byte_end":25769,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ > environments, it STRONGLY ENCOURAGES message store","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25770,"byte_end":25826,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"/ > implementation techniques that avoid this problem.  For","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25827,"byte_end":25888,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/ > example:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25889,"byte_end":25903,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ >","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25904,"byte_end":25909,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ >   1. Unique identifiers are strictly ascending in the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25910,"byte_end":25969,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"/ >      mailbox at all times.  If the physical message store is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":25970,"byte_end":26036,"line_start":51,"line_end":51,"column_start":1,"column_end":67}},{"value":"/ >      re-ordered by a non-IMAP agent, this requires that the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26037,"byte_end":26102,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ >      unique identifiers in the mailbox be regenerated, since","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26103,"byte_end":26169,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ >      the former unique identifiers are no longer strictly","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26170,"byte_end":26233,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/ >      ascending as a result of the re-ordering.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26234,"byte_end":26286,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/ >   2. If the message store has no mechanism to store unique","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26287,"byte_end":26351,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ >      identifiers, it must regenerate unique identifiers at","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26352,"byte_end":26416,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/ >      each session, and each session must have a unique","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26417,"byte_end":26477,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/ >      `UIDVALIDITY` value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26478,"byte_end":26509,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ >   3. If the mailbox is deleted and a new mailbox with the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26510,"byte_end":26573,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/ >      same name is created at a later date, the server must","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26574,"byte_end":26638,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ >      either keep track of unique identifiers from the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26639,"byte_end":26698,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ >      previous instance of the mailbox, or it must assign a","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26699,"byte_end":26763,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ >      new `UIDVALIDITY` value to the new instance of the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26764,"byte_end":26825,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/ >      mailbox.  A good `UIDVALIDITY` value to use in this case","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26826,"byte_end":26893,"line_start":65,"line_end":65,"column_start":1,"column_end":68}},{"value":"/ >      is a 32-bit representation of the creation date/time of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26894,"byte_end":26960,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ >      the mailbox.  It is alright to use a constant such as","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":26961,"byte_end":27025,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"/ >      1, but only if it guaranteed that unique identifiers","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27026,"byte_end":27089,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ >      will never be reused, even in the case of a mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27090,"byte_end":27152,"line_start":69,"line_end":69,"column_start":1,"column_end":63}},{"value":"/ >      being deleted (or renamed) and a new mailbox by the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27153,"byte_end":27215,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/ >      same name created at some future time.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27216,"byte_end":27265,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/ >   4. The combination of mailbox name, `UIDVALIDITY`, and `UID`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27266,"byte_end":27334,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/ >      must refer to a single immutable message on that server","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27335,"byte_end":27401,"line_start":73,"line_end":73,"column_start":1,"column_end":67}},{"value":"/ >      forever.  In particular, the internal date, [RFC 2822](https://tools.ietf.org/html/rfc2822)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27402,"byte_end":27504,"line_start":74,"line_end":74,"column_start":1,"column_end":103}},{"value":"/ >      size, envelope, body structure, and message texts","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27505,"byte_end":27565,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/ >      (RFC822, RFC822.HEADER, RFC822.TEXT, and all BODY[...]","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27566,"byte_end":27631,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/ >      fetch data items) must never change.  This does not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27632,"byte_end":27694,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/ >      include message numbers, nor does it include attributes","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27695,"byte_end":27761,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/ >      that can be set by a `STORE` command (e.g., `FLAGS`).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27762,"byte_end":27826,"line_start":79,"line_end":79,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29233,"byte_end":29236,"line_start":106,"line_end":106,"column_start":10,"column_end":13},"name":"Seq","qualname":"::types::Seq","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" From section [2.3.1.2 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-2.3.1.2).","sig":null,"attributes":[{"value":"/ From section [2.3.1.2 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-2.3.1.2).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27848,"byte_end":27940,"line_start":82,"line_end":82,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27941,"byte_end":27944,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ A relative position from 1 to the number of messages in the mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":27945,"byte_end":28017,"line_start":84,"line_end":84,"column_start":1,"column_end":73}},{"value":"/ This position is ordered by ascending unique identifier.  As","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28018,"byte_end":28082,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"/ each new message is added, it is assigned a message sequence number","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28083,"byte_end":28154,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"/ that is 1 higher than the number of messages in the mailbox before","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28155,"byte_end":28225,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/ that new message was added.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28226,"byte_end":28257,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28258,"byte_end":28261,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Message sequence numbers can be reassigned during the session.  For","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28262,"byte_end":28333,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ example, when a message is permanently removed (expunged) from the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28334,"byte_end":28404,"line_start":91,"line_end":91,"column_start":1,"column_end":71}},{"value":"/ mailbox, the message sequence number for all subsequent messages is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28405,"byte_end":28476,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ decremented.  The number of messages in the mailbox is also","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28477,"byte_end":28540,"line_start":93,"line_end":93,"column_start":1,"column_end":64}},{"value":"/ decremented.  Similarly, a new message can be assigned a message","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28541,"byte_end":28609,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/ sequence number that was once held by some other message prior to an","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28610,"byte_end":28682,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/ expunge.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28683,"byte_end":28695,"line_start":96,"line_end":96,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28696,"byte_end":28699,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ In addition to accessing messages by relative position in the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28700,"byte_end":28765,"line_start":98,"line_end":98,"column_start":1,"column_end":66}},{"value":"/ mailbox, message sequence numbers can be used in mathematical","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28766,"byte_end":28831,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ calculations.  For example, if an untagged \"11 EXISTS\" is received,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28832,"byte_end":28903,"line_start":100,"line_end":100,"column_start":1,"column_end":72}},{"value":"/ and previously an untagged \"8 EXISTS\" was received, three new","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28904,"byte_end":28969,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ messages have arrived with message sequence numbers of 9, 10, and 11.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":28970,"byte_end":29043,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/ Another example, if message 287 in a 523 message mailbox has UID","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29044,"byte_end":29112,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/ 12345, there are exactly 286 messages which have lesser UIDs and 236","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29113,"byte_end":29185,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ messages which have greater UIDs.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29186,"byte_end":29223,"line_start":105,"line_end":105,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30192,"byte_end":30196,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Seen","qualname":"::types::Flag::Seen","value":"Flag::Seen","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":" Message has been read\n","sig":null,"attributes":[{"value":"/ Message has been read","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30162,"byte_end":30187,"line_start":122,"line_end":122,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30237,"byte_end":30245,"line_start":126,"line_end":126,"column_start":5,"column_end":13},"name":"Answered","qualname":"::types::Flag::Answered","value":"Flag::Answered","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":" Message has been answered\n","sig":null,"attributes":[{"value":"/ Message has been answered","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30203,"byte_end":30232,"line_start":125,"line_end":125,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30310,"byte_end":30317,"line_start":129,"line_end":129,"column_start":5,"column_end":12},"name":"Flagged","qualname":"::types::Flag::Flagged","value":"Flag::Flagged","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":" Message is \"flagged\" for urgent/special attention\n","sig":null,"attributes":[{"value":"/ Message is \"flagged\" for urgent/special attention","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30252,"byte_end":30305,"line_start":128,"line_end":128,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30382,"byte_end":30389,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"Deleted","qualname":"::types::Flag::Deleted","value":"Flag::Deleted","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":" Message is \"deleted\" for removal by later EXPUNGE\n","sig":null,"attributes":[{"value":"/ Message is \"deleted\" for removal by later EXPUNGE","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30324,"byte_end":30377,"line_start":131,"line_end":131,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30463,"byte_end":30468,"line_start":135,"line_end":135,"column_start":5,"column_end":10},"name":"Draft","qualname":"::types::Flag::Draft","value":"Flag::Draft","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":" Message has not completed composition (marked as a draft).\n","sig":null,"attributes":[{"value":"/ Message has not completed composition (marked as a draft).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30396,"byte_end":30458,"line_start":134,"line_end":134,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31200,"byte_end":31206,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Recent","qualname":"::types::Flag::Recent","value":"Flag::Recent","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":" Message is \"recently\" arrived in this mailbox.  This session is the first session to have\n been notified about this message; if the session is read-write, subsequent sessions will\n not see `\\Recent` set for this message.  This flag can not be altered by the client.","sig":null,"attributes":[{"value":"/ Message is \"recently\" arrived in this mailbox.  This session is the first session to have","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30475,"byte_end":30568,"line_start":137,"line_end":137,"column_start":5,"column_end":98}},{"value":"/ been notified about this message; if the session is read-write, subsequent sessions will","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30573,"byte_end":30665,"line_start":138,"line_end":138,"column_start":5,"column_end":97}},{"value":"/ not see `\\Recent` set for this message.  This flag can not be altered by the client.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30670,"byte_end":30758,"line_start":139,"line_end":139,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30763,"byte_end":30766,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ If it is not possible to determine whether or not this session is the first session to be","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30771,"byte_end":30864,"line_start":141,"line_end":141,"column_start":5,"column_end":98}},{"value":"/ notified about a message, then that message will generally be considered recent.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30869,"byte_end":30953,"line_start":142,"line_end":142,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30958,"byte_end":30961,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If multiple connections have the same mailbox selected simultaneously, it is undefined","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30966,"byte_end":31056,"line_start":144,"line_end":144,"column_start":5,"column_end":95}},{"value":"/ which of these connections will see newly-arrived messages with `\\Recent` set and which","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31061,"byte_end":31152,"line_start":145,"line_end":145,"column_start":5,"column_end":96}},{"value":"/ will see it without `\\Recent` set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31157,"byte_end":31195,"line_start":146,"line_end":146,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31410,"byte_end":31419,"line_start":151,"line_end":151,"column_start":5,"column_end":14},"name":"MayCreate","qualname":"::types::Flag::MayCreate","value":"Flag::MayCreate","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":" The [`Mailbox::permanent_flags`] can include this special flag (`\\*`), which indicates that\n it is possible to create new keywords by attempting to store those flags in the mailbox.\n","sig":null,"attributes":[{"value":"/ The [`Mailbox::permanent_flags`] can include this special flag (`\\*`), which indicates that","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31213,"byte_end":31308,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ it is possible to create new keywords by attempting to store those flags in the mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31313,"byte_end":31405,"line_start":150,"line_end":150,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31479,"byte_end":31485,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Custom","qualname":"::types::Flag::Custom","value":"Flag::Custom(Cow)","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":" A non-standard user- or server-defined flag.\n","sig":null,"attributes":[{"value":"/ A non-standard user- or server-defined flag.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31426,"byte_end":31474,"line_start":153,"line_end":153,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31486,"byte_end":31498,"line_start":154,"line_end":154,"column_start":12,"column_end":24},"name":"0","qualname":"::types::Flag::Custom::0","value":"std::borrow::Cow<'a, str>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":30147,"byte_end":30151,"line_start":121,"line_end":121,"column_start":10,"column_end":14},"name":"Flag","qualname":"::types::Flag","value":"enum Flag<'a> {\n    Seen,\n    Answered,\n    Flagged,\n    Deleted,\n    Draft,\n    Recent,\n    MayCreate,\n    Custom(Cow),\n}","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711}],"decl_id":null,"docs":" With the exception of [`Flag::Custom`], these flags are system flags that are pre-defined in\n [RFC 3501 section 2.3.2](https://tools.ietf.org/html/rfc3501#section-2.3.2). All system flags\n begin with `\\` in the IMAP protocol.  Certain system flags (`\\Deleted` and `\\Seen`) have\n special semantics described elsewhere.","sig":null,"attributes":[{"value":"/ With the exception of [`Flag::Custom`], these flags are system flags that are pre-defined in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29245,"byte_end":29341,"line_start":108,"line_end":108,"column_start":1,"column_end":97}},{"value":"/ [RFC 3501 section 2.3.2](https://tools.ietf.org/html/rfc3501#section-2.3.2). All system flags","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29342,"byte_end":29439,"line_start":109,"line_end":109,"column_start":1,"column_end":98}},{"value":"/ begin with `\\` in the IMAP protocol.  Certain system flags (`\\Deleted` and `\\Seen`) have","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29440,"byte_end":29532,"line_start":110,"line_end":110,"column_start":1,"column_end":93}},{"value":"/ special semantics described elsewhere.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29533,"byte_end":29575,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29576,"byte_end":29579,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ A flag can be permanent or session-only on a per-flag basis. Permanent flags are those which","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29580,"byte_end":29676,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/ the client can add or remove from the message flags permanently; that is, concurrent and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29677,"byte_end":29769,"line_start":114,"line_end":114,"column_start":1,"column_end":93}},{"value":"/ subsequent sessions will see any change in permanent flags.  Changes to session flags are valid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29770,"byte_end":29869,"line_start":115,"line_end":115,"column_start":1,"column_end":100}},{"value":"/ only in that session.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29870,"byte_end":29895,"line_start":116,"line_end":116,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29896,"byte_end":29899,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ > Note: The `\\Recent` system flag is a special case of a session flag.  `\\Recent` can not be","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29900,"byte_end":29996,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ > used as an argument in a `STORE` or `APPEND` command, and thus can not be changed at all.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":29997,"byte_end":30092,"line_start":119,"line_end":119,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31992,"byte_end":31995,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Flag as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":32587,"byte_end":32591,"line_start":188,"line_end":188,"column_start":8,"column_end":12},"name":"from","qualname":"<Flag as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":32792,"byte_end":32796,"line_start":198,"line_end":198,"column_start":8,"column_end":12},"name":"from","qualname":"<Flag as std::convert::From>::from","value":"fn from(&'a str) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":40796,"byte_end":40803,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"Mailbox","qualname":"::types::mailbox::Mailbox","value":"Mailbox { flags, exists, recent, unseen, permanent_flags, uid_next, uid_validity }","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" Meta-information about an IMAP mailbox, as returned by\n [`SELECT`](https://tools.ietf.org/html/rfc3501#section-6.3.1) and friends.\n","sig":null,"attributes":[{"value":"/ Meta-information about an IMAP mailbox, as returned by","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":40602,"byte_end":40660,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ [`SELECT`](https://tools.ietf.org/html/rfc3501#section-6.3.1) and friends.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":40661,"byte_end":40739,"line_start":5,"line_end":5,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":40973,"byte_end":40978,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"flags","qualname":"::types::mailbox::Mailbox::flags","value":"std::vec::Vec<types::Flag<'static>>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Defined flags in the mailbox.  See the description of the [FLAGS\n response](https://tools.ietf.org/html/rfc3501#section-7.2.6) for more detail.\n","sig":null,"attributes":[{"value":"/ Defined flags in the mailbox.  See the description of the [FLAGS","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":40810,"byte_end":40878,"line_start":8,"line_end":8,"column_start":5,"column_end":73}},{"value":"/ response](https://tools.ietf.org/html/rfc3501#section-7.2.6) for more detail.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":40883,"byte_end":40964,"line_start":9,"line_end":9,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41178,"byte_end":41184,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"exists","qualname":"::types::mailbox::Mailbox::exists","value":"u32","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" The number of messages in the mailbox.  See the description of the [EXISTS\n response](https://tools.ietf.org/html/rfc3501#section-7.3.1) for more detail.\n","sig":null,"attributes":[{"value":"/ The number of messages in the mailbox.  See the description of the [EXISTS","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41005,"byte_end":41083,"line_start":12,"line_end":12,"column_start":5,"column_end":83}},{"value":"/ response](https://tools.ietf.org/html/rfc3501#section-7.3.1) for more detail.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41088,"byte_end":41169,"line_start":13,"line_end":13,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41379,"byte_end":41385,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"recent","qualname":"::types::mailbox::Mailbox::recent","value":"u32","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" The number of messages with the \\Recent flag set. See the description of the [RECENT\n response](https://tools.ietf.org/html/rfc3501#section-7.3.2) for more detail.\n","sig":null,"attributes":[{"value":"/ The number of messages with the \\Recent flag set. See the description of the [RECENT","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41196,"byte_end":41284,"line_start":16,"line_end":16,"column_start":5,"column_end":93}},{"value":"/ response](https://tools.ietf.org/html/rfc3501#section-7.3.2) for more detail.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41289,"byte_end":41370,"line_start":17,"line_end":17,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41667,"byte_end":41673,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"unseen","qualname":"::types::mailbox::Mailbox::unseen","value":"std::option::Option<u32>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" The message sequence number of the first unseen message in the mailbox.  If this is\n missing, the client can not make any assumptions about the first unseen message in the\n mailbox, and needs to issue a `SEARCH` command if it wants to find it.\n","sig":null,"attributes":[{"value":"/ The message sequence number of the first unseen message in the mailbox.  If this is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41397,"byte_end":41484,"line_start":20,"line_end":20,"column_start":5,"column_end":92}},{"value":"/ missing, the client can not make any assumptions about the first unseen message in the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41489,"byte_end":41579,"line_start":21,"line_end":21,"column_start":5,"column_end":95}},{"value":"/ mailbox, and needs to issue a `SEARCH` command if it wants to find it.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41584,"byte_end":41658,"line_start":22,"line_end":22,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42066,"byte_end":42081,"line_start":29,"line_end":29,"column_start":9,"column_end":24},"name":"permanent_flags","qualname":"::types::mailbox::Mailbox::permanent_flags","value":"std::vec::Vec<types::Flag<'static>>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" A list of message flags that the client can change permanently.  If this is missing, the\n client should assume that all flags can be changed permanently. If the client attempts to\n STORE a flag that is not in this list list, the server will either ignore the change or\n store the state change for the remainder of the current session only.\n","sig":null,"attributes":[{"value":"/ A list of message flags that the client can change permanently.  If this is missing, the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41693,"byte_end":41785,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ client should assume that all flags can be changed permanently. If the client attempts to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41790,"byte_end":41883,"line_start":26,"line_end":26,"column_start":5,"column_end":98}},{"value":"/ STORE a flag that is not in this list list, the server will either ignore the change or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41888,"byte_end":41979,"line_start":27,"line_end":27,"column_start":5,"column_end":96}},{"value":"/ store the state change for the remainder of the current session only.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":41984,"byte_end":42057,"line_start":28,"line_end":28,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42263,"byte_end":42271,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"name":"uid_next","qualname":"::types::mailbox::Mailbox::uid_next","value":"std::option::Option<u32>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" The next unique identifier value.  If this is missing, the client can not make any\n assumptions about the next unique identifier value.\n","sig":null,"attributes":[{"value":"/ The next unique identifier value.  If this is missing, the client can not make any","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42108,"byte_end":42194,"line_start":31,"line_end":31,"column_start":5,"column_end":91}},{"value":"/ assumptions about the next unique identifier value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42199,"byte_end":42254,"line_start":32,"line_end":32,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42449,"byte_end":42461,"line_start":37,"line_end":37,"column_start":9,"column_end":21},"name":"uid_validity","qualname":"::types::mailbox::Mailbox::uid_validity","value":"std::option::Option<u32>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" The unique identifier validity value.  See [`Uid`] for more details.  If this is missing,\n the server does not support unique identifiers.\n","sig":null,"attributes":[{"value":"/ The unique identifier validity value.  See [`Uid`] for more details.  If this is missing,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42291,"byte_end":42384,"line_start":35,"line_end":35,"column_start":5,"column_end":98}},{"value":"/ the server does not support unique identifiers.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42389,"byte_end":42440,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42513,"byte_end":42520,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"default","qualname":"<Mailbox as std::default::Default>::default","value":"fn default() -> Mailbox","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42816,"byte_end":42819,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Mailbox as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":43946,"byte_end":43951,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Fetch","qualname":"::types::fetch::Fetch","value":"Fetch { message, uid, size }","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"decl_id":null,"docs":" An IMAP [`FETCH` response](https://tools.ietf.org/html/rfc3501#section-7.4.2) that contains\n data about a particular message. This response occurs as the result of a `FETCH` or `STORE`\n command, as well as by unilateral server decision (e.g., flag updates).\n","sig":null,"attributes":[{"value":"/ An IMAP [`FETCH` response](https://tools.ietf.org/html/rfc3501#section-7.4.2) that contains","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":43635,"byte_end":43730,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ data about a particular message. This response occurs as the result of a `FETCH` or `STORE`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":43731,"byte_end":43826,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ command, as well as by unilateral server decision (e.g., flag updates).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":43827,"byte_end":43902,"line_start":12,"line_end":12,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44032,"byte_end":44039,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"message","qualname":"::types::fetch::Fetch::message","value":"u32","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":" The ordinal number of this message in its containing mailbox.\n","sig":null,"attributes":[{"value":"/ The ordinal number of this message in its containing mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":43958,"byte_end":44023,"line_start":15,"line_end":15,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44236,"byte_end":44239,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"uid","qualname":"::types::fetch::Fetch::uid","value":"std::option::Option<u32>","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":" A number expressing the unique identifier of the message.\n Only present if `UID` was specified in the query argument to `FETCH` and the server\n supports UIDs.\n","sig":null,"attributes":[{"value":"/ A number expressing the unique identifier of the message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44051,"byte_end":44112,"line_start":18,"line_end":18,"column_start":5,"column_end":66}},{"value":"/ Only present if `UID` was specified in the query argument to `FETCH` and the server","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44117,"byte_end":44204,"line_start":19,"line_end":19,"column_start":5,"column_end":92}},{"value":"/ supports UIDs.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44209,"byte_end":44227,"line_start":20,"line_end":20,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44450,"byte_end":44454,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"size","qualname":"::types::fetch::Fetch::size","value":"std::option::Option<u32>","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":" A number expressing the [RFC-2822](https://tools.ietf.org/html/rfc2822) size of the message.\n Only present if `RFC822.SIZE` was specified in the query argument to `FETCH`.\n","sig":null,"attributes":[{"value":"/ A number expressing the [RFC-2822](https://tools.ietf.org/html/rfc2822) size of the message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44259,"byte_end":44355,"line_start":23,"line_end":23,"column_start":5,"column_end":101}},{"value":"/ Only present if `RFC822.SIZE` was specified in the query argument to `FETCH`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44360,"byte_end":44441,"line_start":24,"line_end":24,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44899,"byte_end":44904,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"flags","qualname":"<Fetch>::flags","value":"fn flags(&Self) -> &[Flag]","parent":null,"children":[],"decl_id":null,"docs":" A list of flags that are set for this message.\n","sig":null,"attributes":[{"value":"/ A list of flags that are set for this message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44837,"byte_end":44887,"line_start":35,"line_end":35,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":45146,"byte_end":45152,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"header","qualname":"<Fetch>::header","value":"fn header(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The bytes that make up the header of this message, if `BODY[HEADER]`, `BODY.PEEK[HEADER]`,\n or `RFC822.HEADER` was included in the `query` argument to `FETCH`.\n","sig":null,"attributes":[{"value":"/ The bytes that make up the header of this message, if `BODY[HEADER]`, `BODY.PEEK[HEADER]`,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44964,"byte_end":45058,"line_start":40,"line_end":40,"column_start":5,"column_end":99}},{"value":"/ or `RFC822.HEADER` was included in the `query` argument to `FETCH`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":45063,"byte_end":45134,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":45870,"byte_end":45874,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"body","qualname":"<Fetch>::body","value":"fn body(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The bytes that make up this message, included if `BODY[]` or `RFC822` was included in the\n `query` argument to `FETCH`. The bytes SHOULD be interpreted by the client according to the\n content transfer encoding, body type, and subtype.\n","sig":null,"attributes":[{"value":"/ The bytes that make up this message, included if `BODY[]` or `RFC822` was included in the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":45606,"byte_end":45699,"line_start":57,"line_end":57,"column_start":5,"column_end":98}},{"value":"/ `query` argument to `FETCH`. The bytes SHOULD be interpreted by the client according to the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":45704,"byte_end":45799,"line_start":58,"line_end":58,"column_start":5,"column_end":100}},{"value":"/ content transfer encoding, body type, and subtype.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":45804,"byte_end":45858,"line_start":59,"line_end":59,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":46595,"byte_end":46599,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"text","qualname":"<Fetch>::text","value":"fn text(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The bytes that make up the text of this message, included if `BODY[TEXT]`, `RFC822.TEXT`,\n or `BODY.PEEK[TEXT]` was included in the `query` argument to `FETCH`. The bytes SHOULD be\n interpreted by the client according to the content transfer encoding, body type, and\n subtype.\n","sig":null,"attributes":[{"value":"/ The bytes that make up the text of this message, included if `BODY[TEXT]`, `RFC822.TEXT`,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":46282,"byte_end":46375,"line_start":75,"line_end":75,"column_start":5,"column_end":98}},{"value":"/ or `BODY.PEEK[TEXT]` was included in the `query` argument to `FETCH`. The bytes SHOULD be","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":46380,"byte_end":46473,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ interpreted by the client according to the content transfer encoding, body type, and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":46478,"byte_end":46566,"line_start":77,"line_end":77,"column_start":5,"column_end":93}},{"value":"/ subtype.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":46571,"byte_end":46583,"line_start":78,"line_end":78,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47515,"byte_end":47523,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"envelope","qualname":"<Fetch>::envelope","value":"fn envelope(&Self) -> Option<&Envelope>","parent":null,"children":[],"decl_id":null,"docs":" The envelope of this message, if `ENVELOPE` was included in the `query` argument to\n `FETCH`. This is computed by the server by parsing the\n [RFC-2822](https://tools.ietf.org/html/rfc2822) header into the component parts, defaulting\n various fields as necessary.","sig":null,"attributes":[{"value":"/ The envelope of this message, if `ENVELOPE` was included in the `query` argument to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47052,"byte_end":47139,"line_start":94,"line_end":94,"column_start":5,"column_end":92}},{"value":"/ `FETCH`. This is computed by the server by parsing the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47144,"byte_end":47202,"line_start":95,"line_end":95,"column_start":5,"column_end":63}},{"value":"/ [RFC-2822](https://tools.ietf.org/html/rfc2822) header into the component parts, defaulting","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47207,"byte_end":47302,"line_start":96,"line_end":96,"column_start":5,"column_end":100}},{"value":"/ various fields as necessary.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47307,"byte_end":47339,"line_start":97,"line_end":97,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47344,"byte_end":47347,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The full description of the format of the envelope is given in [RFC 3501 section","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47352,"byte_end":47436,"line_start":99,"line_end":99,"column_start":5,"column_end":89}},{"value":"/ 7.4.2](https://tools.ietf.org/html/rfc3501#section-7.4.2).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47441,"byte_end":47503,"line_start":100,"line_end":100,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47990,"byte_end":47997,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"section","qualname":"<Fetch>::section","value":"fn section(&Self, &SectionPath) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Extract the bytes that makes up the given `BOD[<section>]` of a `FETCH` response.","sig":null,"attributes":[{"value":"/ Extract the bytes that makes up the given `BOD[<section>]` of a `FETCH` response.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47773,"byte_end":47858,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47863,"byte_end":47866,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ See [section 7.4.2 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-7.4.2) for","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47871,"byte_end":47961,"line_start":113,"line_end":113,"column_start":5,"column_end":95}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":47966,"byte_end":47978,"line_start":114,"line_end":114,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":48574,"byte_end":48587,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"internal_date","qualname":"<Fetch>::internal_date","value":"fn internal_date(&Self) -> Option<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Extract the `INTERNALDATE` of a `FETCH` response","sig":null,"attributes":[{"value":"/ Extract the `INTERNALDATE` of a `FETCH` response","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":48390,"byte_end":48442,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":48447,"byte_end":48450,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ See [section 2.3.3 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-2.3.3) for","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":48455,"byte_end":48545,"line_start":131,"line_end":131,"column_start":5,"column_end":95}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":48550,"byte_end":48562,"line_start":132,"line_end":132,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":49280,"byte_end":49293,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"bodystructure","qualname":"<Fetch>::bodystructure","value":"fn bodystructure<'a>(&Self) -> Option<&BodyStructure>","parent":null,"children":[],"decl_id":null,"docs":" Extract the `BODYSTRUCTURE` of a `FETCH` response","sig":null,"attributes":[{"value":"/ Extract the `BODYSTRUCTURE` of a `FETCH` response","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":49095,"byte_end":49148,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":49153,"byte_end":49156,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ See [section 2.3.6 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-2.3.6) for","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":49161,"byte_end":49251,"line_start":151,"line_end":151,"column_start":5,"column_end":95}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":49256,"byte_end":49268,"line_start":152,"line_end":152,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":49668,"byte_end":49672,"line_start":5,"line_end":5,"column_start":12,"column_end":16},"name":"Name","qualname":"::types::name::Name","value":"Name {  }","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":" A name that matches a `LIST` or `LSUB` command.\n","sig":null,"attributes":[{"value":"/ A name that matches a `LIST` or `LSUB` command.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":49573,"byte_end":49624,"line_start":3,"line_end":3,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50254,"byte_end":50265,"line_start":19,"line_end":19,"column_start":5,"column_end":16},"name":"NoInferiors","qualname":"::types::name::NameAttribute::NoInferiors","value":"NameAttribute::NoInferiors","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" It is not possible for any child levels of hierarchy to exist\n under this name; no child levels exist now and none can be\n created in the future.\n","sig":null,"attributes":[{"value":"/ It is not possible for any child levels of hierarchy to exist","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50086,"byte_end":50151,"line_start":16,"line_end":16,"column_start":5,"column_end":70}},{"value":"/ under this name; no child levels exist now and none can be","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50156,"byte_end":50218,"line_start":17,"line_end":17,"column_start":5,"column_end":67}},{"value":"/ created in the future.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50223,"byte_end":50249,"line_start":18,"line_end":18,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50341,"byte_end":50349,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"NoSelect","qualname":"::types::name::NameAttribute::NoSelect","value":"NameAttribute::NoSelect","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" It is not possible to use this name as a selectable mailbox.\n","sig":null,"attributes":[{"value":"/ It is not possible to use this name as a selectable mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50272,"byte_end":50336,"line_start":21,"line_end":21,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50543,"byte_end":50549,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Marked","qualname":"::types::name::NameAttribute::Marked","value":"NameAttribute::Marked","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" The mailbox has been marked \"interesting\" by the server; the\n mailbox probably contains messages that have been added since\n the last time the mailbox was selected.\n","sig":null,"attributes":[{"value":"/ The mailbox has been marked \"interesting\" by the server; the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50356,"byte_end":50420,"line_start":24,"line_end":24,"column_start":5,"column_end":69}},{"value":"/ mailbox probably contains messages that have been added since","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50425,"byte_end":50490,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/ the last time the mailbox was selected.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50495,"byte_end":50538,"line_start":26,"line_end":26,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50671,"byte_end":50679,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Unmarked","qualname":"::types::name::NameAttribute::Unmarked","value":"NameAttribute::Unmarked","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" The mailbox does not contain any additional messages since the\n last time the mailbox was selected.\n","sig":null,"attributes":[{"value":"/ The mailbox does not contain any additional messages since the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50556,"byte_end":50622,"line_start":29,"line_end":29,"column_start":5,"column_end":71}},{"value":"/ last time the mailbox was selected.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50627,"byte_end":50666,"line_start":30,"line_end":30,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50749,"byte_end":50755,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Custom","qualname":"::types::name::NameAttribute::Custom","value":"NameAttribute::Custom(Cow)","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" A non-standard user- or server-defined name attribute.\n","sig":null,"attributes":[{"value":"/ A non-standard user- or server-defined name attribute.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50686,"byte_end":50744,"line_start":33,"line_end":33,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50756,"byte_end":50768,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"0","qualname":"::types::name::NameAttribute::Custom::0","value":"std::borrow::Cow<'a, str>","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50062,"byte_end":50075,"line_start":15,"line_end":15,"column_start":10,"column_end":23},"name":"NameAttribute","qualname":"::types::name::NameAttribute","value":"enum NameAttribute<'a> {\n    NoInferiors,\n    NoSelect,\n    Marked,\n    Unmarked,\n    Custom(Cow),\n}","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795}],"decl_id":null,"docs":" An attribute set for an IMAP name.\n","sig":null,"attributes":[{"value":"/ An attribute set for an IMAP name.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":49969,"byte_end":50007,"line_start":13,"line_end":13,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51196,"byte_end":51200,"line_start":50,"line_end":50,"column_start":8,"column_end":12},"name":"from","qualname":"<NameAttribute as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51428,"byte_end":51432,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"from","qualname":"<NameAttribute as std::convert::From>::from","value":"fn from(&'a str) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51665,"byte_end":51675,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"attributes","qualname":"<Name>::attributes","value":"fn attributes(&Self) -> &[NameAttribute]","parent":null,"children":[],"decl_id":null,"docs":" Attributes of this name.\n","sig":null,"attributes":[{"value":"/ Attributes of this name.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51625,"byte_end":51653,"line_start":70,"line_end":70,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":52133,"byte_end":52142,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<Name>::delimiter","value":"fn delimiter(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" The hierarchy delimiter is a character used to delimit levels of hierarchy in a mailbox\n name.  A client can use it to create child mailboxes, and to search higher or lower levels\n of naming hierarchy.  All children of a top-level hierarchy node use the same\n separator character.  `None` means that no hierarchy exists; the name is a \"flat\" name.\n","sig":null,"attributes":[{"value":"/ The hierarchy delimiter is a character used to delimit levels of hierarchy in a mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51749,"byte_end":51840,"line_start":75,"line_end":75,"column_start":5,"column_end":96}},{"value":"/ name.  A client can use it to create child mailboxes, and to search higher or lower levels","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51845,"byte_end":51939,"line_start":76,"line_end":76,"column_start":5,"column_end":99}},{"value":"/ of naming hierarchy.  All children of a top-level hierarchy node use the same","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51944,"byte_end":52025,"line_start":77,"line_end":77,"column_start":5,"column_end":86}},{"value":"/ separator character.  `None` means that no hierarchy exists; the name is a \"flat\" name.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":52030,"byte_end":52121,"line_start":78,"line_end":78,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":52515,"byte_end":52519,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"name","qualname":"<Name>::name","value":"fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The name represents an unambiguous left-to-right hierarchy, and are valid for use as a\n reference in `LIST` and `LSUB` commands. Unless [`NameAttribute::NoSelect`] is indicated,\n the name is also valid as an argument for commands, such as `SELECT`, that accept mailbox\n names.\n","sig":null,"attributes":[{"value":"/ The name represents an unambiguous left-to-right hierarchy, and are valid for use as a","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":52202,"byte_end":52292,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ reference in `LIST` and `LSUB` commands. Unless [`NameAttribute::NoSelect`] is indicated,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":52297,"byte_end":52390,"line_start":84,"line_end":84,"column_start":5,"column_end":98}},{"value":"/ the name is also valid as an argument for commands, such as `SELECT`, that accept mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":52395,"byte_end":52488,"line_start":85,"line_end":85,"column_start":5,"column_end":98}},{"value":"/ names.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":52493,"byte_end":52503,"line_start":86,"line_end":86,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54259,"byte_end":54271,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"Capabilities","qualname":"::types::capabilities::Capabilities","value":"","parent":null,"children":[],"decl_id":null,"docs":" From [section 7.2.1 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-7.2.1).","sig":null,"attributes":[{"value":"/ From [section 7.2.1 of RFC 3501](https://tools.ietf.org/html/rfc3501#section-7.2.1).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":52764,"byte_end":52852,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":52853,"byte_end":52856,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ A list of capabilities that the server supports.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":52857,"byte_end":52909,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/ The capability list will include the atom \"IMAP4rev1\".","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":52910,"byte_end":52968,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":52969,"byte_end":52972,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ In addition, all servers implement the `STARTTLS`, `LOGINDISABLED`, and `AUTH=PLAIN` (described","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":52973,"byte_end":53072,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ in [IMAP-TLS](https://tools.ietf.org/html/rfc2595)) capabilities. See the [Security","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53073,"byte_end":53160,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/ Considerations section of the RFC](https://tools.ietf.org/html/rfc3501#section-11) for","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53161,"byte_end":53251,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ important information.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53252,"byte_end":53278,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53279,"byte_end":53282,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ A capability name which begins with `AUTH=` indicates that the server supports that particular","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53283,"byte_end":53381,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ authentication mechanism.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53382,"byte_end":53411,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53412,"byte_end":53415,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The `LOGINDISABLED` capability indicates that the `LOGIN` command is disabled, and that the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53416,"byte_end":53511,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ server will respond with a [`super::Error::No`] response to any attempt to use the `LOGIN`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53512,"byte_end":53606,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/ command even if the user name and password are valid.  An IMAP client MUST NOT issue the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53607,"byte_end":53699,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ `LOGIN` command if the server advertises the `LOGINDISABLED` capability.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53700,"byte_end":53776,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53777,"byte_end":53780,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Other capability names indicate that the server supports an extension, revision, or amendment","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53781,"byte_end":53878,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ to the IMAP4rev1 protocol. Capability names either begin with `X` or they are standard or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53879,"byte_end":53972,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"/ standards-track [RFC 3501](https://tools.ietf.org/html/rfc3501) extensions, revisions, or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":53973,"byte_end":54066,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/ amendments registered with IANA.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54067,"byte_end":54103,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54104,"byte_end":54107,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Client implementations SHOULD NOT require any capability name other than `IMAP4rev1`, and MUST","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54108,"byte_end":54206,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ ignore any unknown capability names.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54207,"byte_end":54247,"line_start":32,"line_end":32,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54548,"byte_end":54551,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"has","qualname":"<Capabilities>::has","value":"fn has<'a>(&Self, &Capability) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the server has the given capability.\n","sig":null,"attributes":[{"value":"/ Check if the server has the given capability.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54487,"byte_end":54536,"line_start":40,"line_end":40,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54704,"byte_end":54711,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"has_str","qualname":"<Capabilities>::has_str","value":"fn has_str<S>(&Self, S) -> bool where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Check if the server has the given capability via str.\n","sig":null,"attributes":[{"value":"/ Check if the server has the given capability via str.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54635,"byte_end":54692,"line_start":45,"line_end":45,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":55281,"byte_end":55285,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"iter","qualname":"<Capabilities>::iter","value":"fn iter(&Self) -> Iter<, Capability>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all the server's capabilities\n","sig":null,"attributes":[{"value":"/ Iterate over all the server's capabilities","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":55223,"byte_end":55269,"line_start":60,"line_end":60,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":55417,"byte_end":55420,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"len","qualname":"<Capabilities>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many capabilities the server has.\n","sig":null,"attributes":[{"value":"/ Returns how many capabilities the server has.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":55356,"byte_end":55405,"line_start":65,"line_end":65,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":55547,"byte_end":55555,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Capabilities>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the server purports to have no capabilities.\n","sig":null,"attributes":[{"value":"/ Returns true if the server purports to have no capabilities.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":55471,"byte_end":55535,"line_start":70,"line_end":70,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33817,"byte_end":33823,"line_start":231,"line_end":231,"column_start":5,"column_end":11},"name":"Status","qualname":"::types::UnsolicitedResponse::Status","value":"UnsolicitedResponse::Status { mailbox, attributes }","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" An unsolicited [`STATUS response`](https://tools.ietf.org/html/rfc3501#section-7.2.4).\n","sig":null,"attributes":[{"value":"/ An unsolicited [`STATUS response`](https://tools.ietf.org/html/rfc3501#section-7.2.4).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33722,"byte_end":33812,"line_start":230,"line_end":230,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33892,"byte_end":33899,"line_start":233,"line_end":233,"column_start":9,"column_end":16},"name":"mailbox","qualname":"::types::UnsolicitedResponse::Status::mailbox","value":"std::string::String","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" The mailbox that this status response is for.\n","sig":null,"attributes":[{"value":"/ The mailbox that this status response is for.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33834,"byte_end":33883,"line_start":232,"line_end":232,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33961,"byte_end":33971,"line_start":235,"line_end":235,"column_start":9,"column_end":19},"name":"attributes","qualname":"::types::UnsolicitedResponse::Status::attributes","value":"std::vec::Vec<imap_proto::StatusAttribute>","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" The attributes of this mailbox.\n","sig":null,"attributes":[{"value":"/ The attributes of this mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33917,"byte_end":33952,"line_start":234,"line_end":234,"column_start":9,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35020,"byte_end":35026,"line_start":255,"line_end":255,"column_start":5,"column_end":11},"name":"Recent","qualname":"::types::UnsolicitedResponse::Recent","value":"UnsolicitedResponse::Recent(u32)","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" An unsolicited [`RECENT` response](https://tools.ietf.org/html/rfc3501#section-7.3.2)\n indicating the number of messages with the `\\Recent` flag set.  This response occurs if the\n size of the mailbox changes (e.g., new messages arrive).","sig":null,"attributes":[{"value":"/ An unsolicited [`RECENT` response](https://tools.ietf.org/html/rfc3501#section-7.3.2)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34007,"byte_end":34096,"line_start":238,"line_end":238,"column_start":5,"column_end":94}},{"value":"/ indicating the number of messages with the `\\Recent` flag set.  This response occurs if the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34101,"byte_end":34196,"line_start":239,"line_end":239,"column_start":5,"column_end":100}},{"value":"/ size of the mailbox changes (e.g., new messages arrive).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34201,"byte_end":34261,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34266,"byte_end":34269,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ > Note: It is not guaranteed that the message sequence","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34274,"byte_end":34332,"line_start":242,"line_end":242,"column_start":5,"column_end":63}},{"value":"/ > numbers of recent messages will be a contiguous range of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34337,"byte_end":34399,"line_start":243,"line_end":243,"column_start":5,"column_end":67}},{"value":"/ > the highest n messages in the mailbox (where n is the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34404,"byte_end":34463,"line_start":244,"line_end":244,"column_start":5,"column_end":64}},{"value":"/ > value reported by the `RECENT` response).  Examples of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34468,"byte_end":34528,"line_start":245,"line_end":245,"column_start":5,"column_end":65}},{"value":"/ > situations in which this is not the case are: multiple","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34533,"byte_end":34593,"line_start":246,"line_end":246,"column_start":5,"column_end":65}},{"value":"/ > clients having the same mailbox open (the first session","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34598,"byte_end":34659,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ > to be notified will see it as recent, others will","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34664,"byte_end":34719,"line_start":248,"line_end":248,"column_start":5,"column_end":60}},{"value":"/ > probably see it as non-recent), and when the mailbox is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34724,"byte_end":34785,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ > re-ordered by a non-IMAP agent.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34790,"byte_end":34827,"line_start":250,"line_end":250,"column_start":5,"column_end":42}},{"value":"/ >","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34832,"byte_end":34837,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ > The only reliable way to identify recent messages is to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34842,"byte_end":34903,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ > look at message flags to see which have the `\\Recent` flag","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34908,"byte_end":34972,"line_start":253,"line_end":253,"column_start":5,"column_end":69}},{"value":"/ > set, or to do a `SEARCH RECENT`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":34977,"byte_end":35015,"line_start":254,"line_end":254,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35027,"byte_end":35030,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"0","qualname":"::types::UnsolicitedResponse::Recent::0","value":"u32","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35285,"byte_end":35291,"line_start":260,"line_end":260,"column_start":5,"column_end":11},"name":"Exists","qualname":"::types::UnsolicitedResponse::Exists","value":"UnsolicitedResponse::Exists(u32)","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" An unsolicited [`EXISTS` response](https://tools.ietf.org/html/rfc3501#section-7.3.1) that\n reports the number of messages in the mailbox. This response occurs if the size of the\n mailbox changes (e.g., new messages arrive).\n","sig":null,"attributes":[{"value":"/ An unsolicited [`EXISTS` response](https://tools.ietf.org/html/rfc3501#section-7.3.1) that","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35038,"byte_end":35132,"line_start":257,"line_end":257,"column_start":5,"column_end":99}},{"value":"/ reports the number of messages in the mailbox. This response occurs if the size of the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35137,"byte_end":35227,"line_start":258,"line_end":258,"column_start":5,"column_end":95}},{"value":"/ mailbox changes (e.g., new messages arrive).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35232,"byte_end":35280,"line_start":259,"line_end":259,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35292,"byte_end":35295,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"0","qualname":"::types::UnsolicitedResponse::Exists::0","value":"u32","parent":{"krate":0,"index":826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36670,"byte_end":36677,"line_start":279,"line_end":279,"column_start":5,"column_end":12},"name":"Expunge","qualname":"::types::UnsolicitedResponse::Expunge","value":"UnsolicitedResponse::Expunge(Seq)","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" An unsolicited [`EXPUNGE` response](https://tools.ietf.org/html/rfc3501#section-7.4.1) that\n reports that the specified message sequence number has been permanently removed from the\n mailbox.  The message sequence number for each successive message in the mailbox is\n immediately decremented by 1, and this decrement is reflected in message sequence numbers\n in subsequent responses (including other untagged `EXPUNGE` responses).","sig":null,"attributes":[{"value":"/ An unsolicited [`EXPUNGE` response](https://tools.ietf.org/html/rfc3501#section-7.4.1) that","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35303,"byte_end":35398,"line_start":262,"line_end":262,"column_start":5,"column_end":100}},{"value":"/ reports that the specified message sequence number has been permanently removed from the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35403,"byte_end":35495,"line_start":263,"line_end":263,"column_start":5,"column_end":97}},{"value":"/ mailbox.  The message sequence number for each successive message in the mailbox is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35500,"byte_end":35587,"line_start":264,"line_end":264,"column_start":5,"column_end":92}},{"value":"/ immediately decremented by 1, and this decrement is reflected in message sequence numbers","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35592,"byte_end":35685,"line_start":265,"line_end":265,"column_start":5,"column_end":98}},{"value":"/ in subsequent responses (including other untagged `EXPUNGE` responses).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35690,"byte_end":35765,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35770,"byte_end":35773,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ The EXPUNGE response also decrements the number of messages in the mailbox; it is not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35778,"byte_end":35867,"line_start":268,"line_end":268,"column_start":5,"column_end":94}},{"value":"/ necessary to send an `EXISTS` response with the new value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35872,"byte_end":35934,"line_start":269,"line_end":269,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35939,"byte_end":35942,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ As a result of the immediate decrement rule, message sequence numbers that appear in a set","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":35947,"byte_end":36041,"line_start":271,"line_end":271,"column_start":5,"column_end":99}},{"value":"/ of successive `EXPUNGE` responses depend upon whether the messages are removed starting","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36046,"byte_end":36137,"line_start":272,"line_end":272,"column_start":5,"column_end":96}},{"value":"/ from lower numbers to higher numbers, or from higher numbers to lower numbers.  For","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36142,"byte_end":36229,"line_start":273,"line_end":273,"column_start":5,"column_end":92}},{"value":"/ example, if the last 5 messages in a 9-message mailbox are expunged, a \"lower to higher\"","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36234,"byte_end":36326,"line_start":274,"line_end":274,"column_start":5,"column_end":97}},{"value":"/ server will send five untagged `EXPUNGE` responses for message sequence number 5, whereas a","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36331,"byte_end":36426,"line_start":275,"line_end":275,"column_start":5,"column_end":100}},{"value":"/ \"higher to lower server\" will send successive untagged `EXPUNGE` responses for message","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36431,"byte_end":36521,"line_start":276,"line_end":276,"column_start":5,"column_end":95}},{"value":"/ sequence numbers 9, 8, 7, 6, and 5.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36526,"byte_end":36565,"line_start":277,"line_end":277,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36678,"byte_end":36681,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"0","qualname":"::types::UnsolicitedResponse::Expunge::0","value":"u32","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33696,"byte_end":33715,"line_start":229,"line_end":229,"column_start":10,"column_end":29},"name":"UnsolicitedResponse","qualname":"::types::UnsolicitedResponse","value":"enum UnsolicitedResponse {\n    Status {\n            mailbox: String,\n            attributes: Vec<StatusAttribute>,\n        },\n    Recent(u32),\n    Exists(u32),\n    Expunge(Seq),\n}","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829}],"decl_id":null,"docs":" Responses that the server sends that are not related to the current command.\n [RFC 3501](https://tools.ietf.org/html/rfc3501#section-7) states that clients need to be able\n to accept any response at any time. These are the ones we've encountered in the wild.","sig":null,"attributes":[{"value":"/ Responses that the server sends that are not related to the current command.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33227,"byte_end":33307,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ [RFC 3501](https://tools.ietf.org/html/rfc3501#section-7) states that clients need to be able","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33308,"byte_end":33405,"line_start":223,"line_end":223,"column_start":1,"column_end":98}},{"value":"/ to accept any response at any time. These are the ones we've encountered in the wild.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33406,"byte_end":33495,"line_start":224,"line_end":224,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33496,"byte_end":33499,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Note that `Recent`, `Exists` and `Expunge` responses refer to the currently `SELECT`ed folder,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33500,"byte_end":33598,"line_start":226,"line_end":226,"column_start":1,"column_end":99}},{"value":"/ so the user must take care when interpreting these.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":33599,"byte_end":33654,"line_start":227,"line_end":227,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36997,"byte_end":37005,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"ZeroCopy","qualname":"::types::ZeroCopy","value":"ZeroCopy {  }","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" This type wraps an input stream and a type that was constructed by parsing that input stream,\n which allows the parsed type to refer to data in the underlying stream instead of copying it.","sig":null,"attributes":[{"value":"/ This type wraps an input stream and a type that was constructed by parsing that input stream,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36687,"byte_end":36784,"line_start":282,"line_end":282,"column_start":1,"column_end":98}},{"value":"/ which allows the parsed type to refer to data in the underlying stream instead of copying it.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36785,"byte_end":36882,"line_start":283,"line_end":283,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36883,"byte_end":36886,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ Any references given out by a `ZeroCopy` should never be used after the `ZeroCopy` is dropped.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":36887,"byte_end":36985,"line_start":285,"line_end":285,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":38892,"byte_end":38897,"line_start":338,"line_end":338,"column_start":8,"column_end":13},"name":"deref","qualname":"<ZeroCopy<D> as lazy_static::__Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39070,"byte_end":39072,"line_start":347,"line_end":347,"column_start":8,"column_end":10},"name":"eq","qualname":"<ZeroCopy<D> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &ZeroCopy<D>) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39260,"byte_end":39271,"line_start":355,"line_end":355,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<ZeroCopy<D> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &ZeroCopy<D>) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39374,"byte_end":39376,"line_start":358,"line_end":358,"column_start":8,"column_end":10},"name":"lt","qualname":"<ZeroCopy<D> as std::cmp::PartialOrd>::lt","value":"fn lt(&Self, &ZeroCopy<D>) -> bool","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2851},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39453,"byte_end":39455,"line_start":361,"line_end":361,"column_start":8,"column_end":10},"name":"le","qualname":"<ZeroCopy<D> as std::cmp::PartialOrd>::le","value":"fn le(&Self, &ZeroCopy<D>) -> bool","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2852},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39533,"byte_end":39535,"line_start":364,"line_end":364,"column_start":8,"column_end":10},"name":"gt","qualname":"<ZeroCopy<D> as std::cmp::PartialOrd>::gt","value":"fn gt(&Self, &ZeroCopy<D>) -> bool","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2853},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39612,"byte_end":39614,"line_start":367,"line_end":367,"column_start":8,"column_end":10},"name":"ge","qualname":"<ZeroCopy<D> as std::cmp::PartialOrd>::ge","value":"fn ge(&Self, &ZeroCopy<D>) -> bool","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2854},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39729,"byte_end":39732,"line_start":372,"line_end":372,"column_start":8,"column_end":11},"name":"cmp","qualname":"<ZeroCopy<D> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &ZeroCopy<D>) -> Ordering","parent":{"krate":2,"index":2838},"children":[],"decl_id":{"krate":2,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39890,"byte_end":39894,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"hash","qualname":"<ZeroCopy<D> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10120},"children":[],"decl_id":{"krate":2,"index":10121},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":40043,"byte_end":40046,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ZeroCopy<D> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":40201,"byte_end":40204,"line_start":391,"line_end":391,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ZeroCopy<D> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":40489,"byte_end":40498,"line_start":402,"line_end":402,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a ZeroCopy<D> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":7998},"children":[],"decl_id":{"krate":2,"index":8001},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\authenticator.rs","byte_start":55800,"byte_end":55813,"line_start":3,"line_end":3,"column_start":11,"column_end":24},"name":"Authenticator","qualname":"::authenticator::Authenticator","value":"Authenticator","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" This trait allows for pluggable authentication schemes. It is used by `Client::authenticate` to\n [authenticate using SASL](https://tools.ietf.org/html/rfc3501#section-6.2.2).\n","sig":null,"attributes":[{"value":"/ This trait allows for pluggable authentication schemes. It is used by `Client::authenticate` to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\authenticator.rs","byte_start":55608,"byte_end":55707,"line_start":1,"line_end":1,"column_start":1,"column_end":100}},{"value":"/ [authenticate using SASL](https://tools.ietf.org/html/rfc3501#section-6.2.2).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\authenticator.rs","byte_start":55708,"byte_end":55789,"line_start":2,"line_end":2,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\authenticator.rs","byte_start":55922,"byte_end":55930,"line_start":5,"line_end":5,"column_start":10,"column_end":18},"name":"Response","qualname":"::authenticator::Authenticator::Response","value":"type Response: AsRef<[u8]>;","parent":{"krate":0,"index":286},"children":[],"decl_id":null,"docs":" The type of the response to the challenge. This will usually be a `Vec<u8>` or `String`.\n","sig":null,"attributes":[{"value":"/ The type of the response to the challenge. This will usually be a `Vec<u8>` or `String`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\authenticator.rs","byte_start":55820,"byte_end":55912,"line_start":4,"line_end":4,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\authenticator.rs","byte_start":56107,"byte_end":56114,"line_start":9,"line_end":9,"column_start":8,"column_end":15},"name":"process","qualname":"::authenticator::Authenticator::process","value":"fn process(&Self, &[u8]) -> Self::Response","parent":{"krate":0,"index":286},"children":[],"decl_id":null,"docs":" Each base64-decoded server challenge is passed to `process`.\n The returned byte-string is base64-encoded and then sent back to the server.\n","sig":null,"attributes":[{"value":"/ Each base64-decoded server challenge is passed to `process`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\authenticator.rs","byte_start":55950,"byte_end":56014,"line_start":7,"line_end":7,"column_start":5,"column_end":69}},{"value":"/ The returned byte-string is base64-encoded and then sent back to the server.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\authenticator.rs","byte_start":56019,"byte_end":56099,"line_start":8,"line_end":8,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60139,"byte_end":60146,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"Session","qualname":"::client::Session","value":"Session { unsolicited_responses }","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" An authenticated IMAP session providing the usual IMAP commands. This type is what you get from\n a succesful login attempt.","sig":null,"attributes":[{"value":"/ An authenticated IMAP session providing the usual IMAP commands. This type is what you get from","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":59523,"byte_end":59622,"line_start":101,"line_end":101,"column_start":1,"column_end":100}},{"value":"/ a succesful login attempt.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":59623,"byte_end":59653,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":59654,"byte_end":59657,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Note that the server *is* allowed to unilaterally send things to the client for messages in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":59658,"byte_end":59753,"line_start":104,"line_end":104,"column_start":1,"column_end":96}},{"value":"/ a selected mailbox whose status has changed. See the note on [unilateral server responses","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":59754,"byte_end":59847,"line_start":105,"line_end":105,"column_start":1,"column_end":94}},{"value":"/ in RFC 3501](https://tools.ietf.org/html/rfc3501#section-7). Any such messages are parsed out","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":59848,"byte_end":59945,"line_start":106,"line_end":106,"column_start":1,"column_end":98}},{"value":"/ and sent on `Session::unsolicited_responses`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":59946,"byte_end":59995,"line_start":107,"line_end":107,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60454,"byte_end":60475,"line_start":117,"line_end":117,"column_start":9,"column_end":30},"name":"unsolicited_responses","qualname":"::client::Session::unsolicited_responses","value":"std::sync::mpsc::Receiver<types::UnsolicitedResponse>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Server responses that are not related to the current command. See also the note on\n [unilateral server responses in RFC 3501](https://tools.ietf.org/html/rfc3501#section-7).\n","sig":null,"attributes":[{"value":"/ Server responses that are not related to the current command. See also the note on","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60261,"byte_end":60347,"line_start":115,"line_end":115,"column_start":5,"column_end":91}},{"value":"/ [unilateral server responses in RFC 3501](https://tools.ietf.org/html/rfc3501#section-7).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60352,"byte_end":60445,"line_start":116,"line_end":116,"column_start":5,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60911,"byte_end":60917,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":851}],"decl_id":null,"docs":" An (unauthenticated) handle to talk to an IMAP server. This is what you get when first\n connecting. A succesfull call to [`Client::login`] or [`Client::authenticate`] will return a\n [`Session`] instance that provides the usual IMAP methods.\n","sig":null,"attributes":[{"value":"/ An (unauthenticated) handle to talk to an IMAP server. This is what you get when first","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60517,"byte_end":60607,"line_start":120,"line_end":120,"column_start":1,"column_end":91}},{"value":"/ connecting. A succesfull call to [`Client::login`] or [`Client::authenticate`] will return a","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60608,"byte_end":60704,"line_start":121,"line_end":121,"column_start":1,"column_end":97}},{"value":"/ [`Session`] instance that provides the usual IMAP methods.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60705,"byte_end":60767,"line_start":122,"line_end":122,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61177,"byte_end":61187,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"Connection","qualname":"::client::Connection","value":"Connection { debug, greeting_read }","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"decl_id":null,"docs":" The underlying primitives type. Both `Client`(unauthenticated) and `Session`(after succesful\n login) use a `Connection` internally for the TCP stream primitives.\n","sig":null,"attributes":[{"value":"/ The underlying primitives type. Both `Client`(unauthenticated) and `Session`(after succesful","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":60965,"byte_end":61061,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ login) use a `Connection` internally for the TCP stream primitives.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61062,"byte_end":61133,"line_start":131,"line_end":131,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61385,"byte_end":61390,"line_start":140,"line_end":140,"column_start":9,"column_end":14},"name":"debug","qualname":"::client::Connection::debug","value":"bool","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Enable debug mode for this connection so that all client-server interactions are printed to\n `STDERR`.\n","sig":null,"attributes":[{"value":"/ Enable debug mode for this connection so that all client-server interactions are printed to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61263,"byte_end":61358,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `STDERR`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61363,"byte_end":61376,"line_start":139,"line_end":139,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61450,"byte_end":61463,"line_start":143,"line_end":143,"column_start":9,"column_end":22},"name":"greeting_read","qualname":"::client::Connection::greeting_read","value":"bool","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Tracks if we have read a greeting.\n","sig":null,"attributes":[{"value":"/ Tracks if we have read a greeting.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61403,"byte_end":61441,"line_start":142,"line_end":142,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61666,"byte_end":61671,"line_start":151,"line_end":151,"column_start":8,"column_end":13},"name":"deref","qualname":"<Client<T> as lazy_static::__Deref>::deref","value":"fn deref(&Self) -> &Connection<T>","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61781,"byte_end":61790,"line_start":157,"line_end":157,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Client<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut Connection<T>","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61944,"byte_end":61949,"line_start":165,"line_end":165,"column_start":8,"column_end":13},"name":"deref","qualname":"<Session<T> as lazy_static::__Deref>::deref","value":"fn deref(&Self) -> &Connection<T>","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62060,"byte_end":62069,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Session<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut Connection<T>","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62859,"byte_end":62866,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"connect","qualname":"::client::connect","value":"fn connect<A, S>(A, S, &TlsConnector) -> Result<Client<TlsStream<TcpStream>>>\nwhere A: ToSocketAddrs, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Connect to a server using a TLS-encrypted connection.","sig":null,"attributes":[{"value":"/ Connect to a server using a TLS-encrypted connection.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62137,"byte_end":62194,"line_start":176,"line_end":176,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62195,"byte_end":62198,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The returned [`Client`] is unauthenticated; to access session-related methods (through","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62199,"byte_end":62289,"line_start":178,"line_end":178,"column_start":1,"column_end":91}},{"value":"/ [`Session`]), use [`Client::login`] or [`Client::authenticate`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62290,"byte_end":62358,"line_start":179,"line_end":179,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62359,"byte_end":62362,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ The domain must be passed in separately from the `TlsConnector` so that the certificate of the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62363,"byte_end":62461,"line_start":181,"line_end":181,"column_start":1,"column_end":99}},{"value":"/ IMAP server can be validated.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62462,"byte_end":62495,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62496,"byte_end":62499,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62500,"byte_end":62514,"line_start":184,"line_end":184,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62515,"byte_end":62518,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62519,"byte_end":62532,"line_start":186,"line_end":186,"column_start":1,"column_end":14}},{"value":"/ # extern crate native_tls;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62533,"byte_end":62563,"line_start":187,"line_end":187,"column_start":1,"column_end":31}},{"value":"/ # extern crate imap;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62564,"byte_end":62588,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62589,"byte_end":62607,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/ # use native_tls::TlsConnector;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62608,"byte_end":62643,"line_start":190,"line_end":190,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62644,"byte_end":62661,"line_start":191,"line_end":191,"column_start":1,"column_end":18}},{"value":"/ let tls = TlsConnector::builder().build().unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62662,"byte_end":62717,"line_start":192,"line_end":192,"column_start":1,"column_end":56}},{"value":"/ let client = imap::connect((\"imap.example.org\", 993), \"imap.example.org\", &tls).unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62718,"byte_end":62811,"line_start":193,"line_end":193,"column_start":1,"column_end":94}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62812,"byte_end":62819,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62820,"byte_end":62827,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62828,"byte_end":62851,"line_start":196,"line_end":196,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":64014,"byte_end":64030,"line_start":235,"line_end":235,"column_start":8,"column_end":24},"name":"connect_starttls","qualname":"::client::connect_starttls","value":"fn connect_starttls<A, S>(A, S, &TlsConnector)\n-> Result<Client<TlsStream<TcpStream>>> where A: ToSocketAddrs, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Connect to a server and upgrade to a TLS-encrypted connection.","sig":null,"attributes":[{"value":"/ Connect to a server and upgrade to a TLS-encrypted connection.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63443,"byte_end":63509,"line_start":217,"line_end":217,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63510,"byte_end":63513,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ This is the [STARTTLS](https://tools.ietf.org/html/rfc2595) equivalent to [`connect`]. All","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63514,"byte_end":63608,"line_start":219,"line_end":219,"column_start":1,"column_end":95}},{"value":"/ notes there also apply here.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63609,"byte_end":63641,"line_start":220,"line_end":220,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63642,"byte_end":63645,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63646,"byte_end":63660,"line_start":222,"line_end":222,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63661,"byte_end":63664,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63665,"byte_end":63678,"line_start":224,"line_end":224,"column_start":1,"column_end":14}},{"value":"/ # extern crate native_tls;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63679,"byte_end":63709,"line_start":225,"line_end":225,"column_start":1,"column_end":31}},{"value":"/ # extern crate imap;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63710,"byte_end":63734,"line_start":226,"line_end":226,"column_start":1,"column_end":25}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63735,"byte_end":63753,"line_start":227,"line_end":227,"column_start":1,"column_end":19}},{"value":"/ # use native_tls::TlsConnector;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63754,"byte_end":63789,"line_start":228,"line_end":228,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63790,"byte_end":63807,"line_start":229,"line_end":229,"column_start":1,"column_end":18}},{"value":"/ let tls = TlsConnector::builder().build().unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63808,"byte_end":63863,"line_start":230,"line_end":230,"column_start":1,"column_end":56}},{"value":"/ let client = imap::connect_starttls((\"imap.example.org\", 143), \"imap.example.org\", &tls).unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63864,"byte_end":63966,"line_start":231,"line_end":231,"column_start":1,"column_end":103}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63967,"byte_end":63974,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63975,"byte_end":63982,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":63983,"byte_end":64006,"line_start":234,"line_end":234,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":64904,"byte_end":64910,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"secure","qualname":"<Client<TcpStream>>::secure","value":"fn secure<S>(Self, S, &TlsConnector) -> Result<Client<TlsStream<TcpStream>>>\nwhere S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" This will upgrade an IMAP client from using a regular TCP connection to use TLS.","sig":null,"attributes":[{"value":"/ This will upgrade an IMAP client from using a regular TCP connection to use TLS.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":64697,"byte_end":64781,"line_start":258,"line_end":258,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":64786,"byte_end":64789,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The domain parameter is required to perform hostname verification.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":64794,"byte_end":64864,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":64869,"byte_end":64892,"line_start":261,"line_end":261,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67351,"byte_end":67354,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"new","qualname":"<Client<T>>::new","value":"fn new(T) -> Client<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new client over the given stream.","sig":null,"attributes":[{"value":"/ Creates a new client over the given stream.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66051,"byte_end":66098,"line_start":296,"line_end":296,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66103,"byte_end":66106,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ For an example of how to use this method to provide a pure-Rust TLS integration, see the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66111,"byte_end":66203,"line_start":298,"line_end":298,"column_start":5,"column_end":97}},{"value":"/ rustls.rs in the examples/ directory.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66208,"byte_end":66249,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66254,"byte_end":66257,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This method primarily exists for writing tests that mock the underlying transport, but can","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66262,"byte_end":66356,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ also be used to support IMAP over custom tunnels.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66361,"byte_end":66414,"line_start":302,"line_end":302,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66419,"byte_end":66422,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ **Note:** In case you do need to use `Client::new` over `imap::connect`, you will need to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66427,"byte_end":66520,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/ listen for the IMAP protocol server greeting before authenticating:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66525,"byte_end":66596,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66601,"byte_end":66604,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66609,"byte_end":66627,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/ # extern crate imap;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66632,"byte_end":66656,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/ # extern crate native_tls;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66661,"byte_end":66691,"line_start":309,"line_end":309,"column_start":5,"column_end":35}},{"value":"/ # use imap::Client;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66696,"byte_end":66719,"line_start":310,"line_end":310,"column_start":5,"column_end":28}},{"value":"/ # use native_tls::TlsConnector;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66724,"byte_end":66759,"line_start":311,"line_end":311,"column_start":5,"column_end":40}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66764,"byte_end":66782,"line_start":312,"line_end":312,"column_start":5,"column_end":23}},{"value":"/ # use std::net::TcpStream;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66787,"byte_end":66817,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66822,"byte_end":66839,"line_start":314,"line_end":314,"column_start":5,"column_end":22}},{"value":"/ # let server = \"imap.example.com\";","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66844,"byte_end":66882,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/ # let username = \"\";","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66887,"byte_end":66911,"line_start":316,"line_end":316,"column_start":5,"column_end":29}},{"value":"/ # let password = \"\";","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66916,"byte_end":66940,"line_start":317,"line_end":317,"column_start":5,"column_end":29}},{"value":"/ # let tcp = TcpStream::connect((server, 993)).unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66945,"byte_end":67004,"line_start":318,"line_end":318,"column_start":5,"column_end":64}},{"value":"/ # let ssl_connector = TlsConnector::builder().build().unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67009,"byte_end":67076,"line_start":319,"line_end":319,"column_start":5,"column_end":72}},{"value":"/ # let tls = TlsConnector::connect(&ssl_connector, server.as_ref(), tcp).unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67081,"byte_end":67166,"line_start":320,"line_end":320,"column_start":5,"column_end":90}},{"value":"/ let mut client = Client::new(tls);","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67171,"byte_end":67209,"line_start":321,"line_end":321,"column_start":5,"column_end":43}},{"value":"/ client.read_greeting().unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67214,"byte_end":67250,"line_start":322,"line_end":322,"column_start":5,"column_end":41}},{"value":"/ let session = client.login(username, password).unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67255,"byte_end":67315,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67320,"byte_end":67327,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67332,"byte_end":67339,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68815,"byte_end":68820,"line_start":367,"line_end":367,"column_start":12,"column_end":17},"name":"login","qualname":"<Client<T>>::login","value":"fn login<U, P>(Self, U, P)\n-> ::std::result::Result<Session<T>, (Error, Client<T>)> where U: AsRef<str>,\nP: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Log in to the IMAP server. Upon success a [`Session`](struct.Session.html) instance is\n returned; on error the original `Client` instance is returned in addition to the error.\n This is because `login` takes ownership of `self`, so in order to try again (e.g. after\n prompting the user for credetials), ownership of the original `Client` needs to be\n transferred back to the caller.","sig":null,"attributes":[{"value":"/ Log in to the IMAP server. Upon success a [`Session`](struct.Session.html) instance is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67615,"byte_end":67705,"line_start":337,"line_end":337,"column_start":5,"column_end":95}},{"value":"/ returned; on error the original `Client` instance is returned in addition to the error.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67710,"byte_end":67801,"line_start":338,"line_end":338,"column_start":5,"column_end":96}},{"value":"/ This is because `login` takes ownership of `self`, so in order to try again (e.g. after","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67806,"byte_end":67897,"line_start":339,"line_end":339,"column_start":5,"column_end":96}},{"value":"/ prompting the user for credetials), ownership of the original `Client` needs to be","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67902,"byte_end":67988,"line_start":340,"line_end":340,"column_start":5,"column_end":91}},{"value":"/ transferred back to the caller.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":67993,"byte_end":68028,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68033,"byte_end":68036,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68041,"byte_end":68059,"line_start":343,"line_end":343,"column_start":5,"column_end":23}},{"value":"/ # extern crate imap;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68064,"byte_end":68088,"line_start":344,"line_end":344,"column_start":5,"column_end":29}},{"value":"/ # extern crate native_tls;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68093,"byte_end":68123,"line_start":345,"line_end":345,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68128,"byte_end":68146,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ # use native_tls::TlsConnector;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68151,"byte_end":68186,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68191,"byte_end":68208,"line_start":348,"line_end":348,"column_start":5,"column_end":22}},{"value":"/ # let tls_connector = TlsConnector::builder().build().unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68213,"byte_end":68280,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/ let client = imap::connect(","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68285,"byte_end":68316,"line_start":350,"line_end":350,"column_start":5,"column_end":36}},{"value":"/     (\"imap.example.org\", 993),","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68321,"byte_end":68355,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/     \"imap.example.org\",","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68360,"byte_end":68387,"line_start":352,"line_end":352,"column_start":5,"column_end":32}},{"value":"/     &tls_connector).unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68392,"byte_end":68425,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68430,"byte_end":68433,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ match client.login(\"user\", \"pass\") {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68438,"byte_end":68478,"line_start":355,"line_end":355,"column_start":5,"column_end":45}},{"value":"/     Ok(s) => {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68483,"byte_end":68501,"line_start":356,"line_end":356,"column_start":5,"column_end":23}},{"value":"/         // you are successfully authenticated!","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68506,"byte_end":68556,"line_start":357,"line_end":357,"column_start":5,"column_end":55}},{"value":"/     },","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68561,"byte_end":68571,"line_start":358,"line_end":358,"column_start":5,"column_end":15}},{"value":"/     Err((e, orig_client)) => {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68576,"byte_end":68610,"line_start":359,"line_end":359,"column_start":5,"column_end":39}},{"value":"/         eprintln!(\"error logging in: {}\", e);","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68615,"byte_end":68664,"line_start":360,"line_end":360,"column_start":5,"column_end":54}},{"value":"/         // prompt user and try again with orig_client here","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68669,"byte_end":68731,"line_start":361,"line_end":361,"column_start":5,"column_end":67}},{"value":"/         return;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68736,"byte_end":68755,"line_start":362,"line_end":362,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68760,"byte_end":68769,"line_start":363,"line_end":363,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68774,"byte_end":68779,"line_start":364,"line_end":364,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68784,"byte_end":68791,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":68796,"byte_end":68803,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70803,"byte_end":70815,"line_start":425,"line_end":425,"column_start":12,"column_end":24},"name":"authenticate","qualname":"<Client<T>>::authenticate","value":"fn authenticate<A, S>(Self, S, &A)\n-> ::std::result::Result<Session<T>, (Error, Client<T>)> where\nA: Authenticator, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Authenticate with the server using the given custom `authenticator` to handle the server's\n challenge.","sig":null,"attributes":[{"value":"/ Authenticate with the server using the given custom `authenticator` to handle the server's","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69323,"byte_end":69417,"line_start":382,"line_end":382,"column_start":5,"column_end":99}},{"value":"/ challenge.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69422,"byte_end":69436,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69441,"byte_end":69444,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69449,"byte_end":69462,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/ extern crate imap;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69467,"byte_end":69489,"line_start":386,"line_end":386,"column_start":5,"column_end":27}},{"value":"/ extern crate native_tls;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69494,"byte_end":69522,"line_start":387,"line_end":387,"column_start":5,"column_end":33}},{"value":"/ use native_tls::TlsConnector;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69527,"byte_end":69560,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69565,"byte_end":69568,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ struct OAuth2 {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69573,"byte_end":69592,"line_start":390,"line_end":390,"column_start":5,"column_end":24}},{"value":"/     user: String,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69597,"byte_end":69618,"line_start":391,"line_end":391,"column_start":5,"column_end":26}},{"value":"/     access_token: String,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69623,"byte_end":69652,"line_start":392,"line_end":392,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69657,"byte_end":69662,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69667,"byte_end":69670,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ impl imap::Authenticator for OAuth2 {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69675,"byte_end":69716,"line_start":395,"line_end":395,"column_start":5,"column_end":46}},{"value":"/     type Response = String;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69721,"byte_end":69752,"line_start":396,"line_end":396,"column_start":5,"column_end":36}},{"value":"/     fn process(&self, _: &[u8]) -> Self::Response {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69757,"byte_end":69812,"line_start":397,"line_end":397,"column_start":5,"column_end":60}},{"value":"/         format!(","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69817,"byte_end":69837,"line_start":398,"line_end":398,"column_start":5,"column_end":25}},{"value":"/             \"user={}\\x01auth=Bearer {}\\x01\\x01\",","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69842,"byte_end":69894,"line_start":399,"line_end":399,"column_start":5,"column_end":57}},{"value":"/             self.user, self.access_token","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69899,"byte_end":69943,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"/         )","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69948,"byte_end":69961,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69966,"byte_end":69975,"line_start":402,"line_end":402,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69980,"byte_end":69985,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69990,"byte_end":69993,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":69998,"byte_end":70013,"line_start":405,"line_end":405,"column_start":5,"column_end":20}},{"value":"/     let auth = OAuth2 {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70018,"byte_end":70045,"line_start":406,"line_end":406,"column_start":5,"column_end":32}},{"value":"/         user: String::from(\"me@example.com\"),","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70050,"byte_end":70099,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"/         access_token: String::from(\"<access_token>\"),","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70104,"byte_end":70161,"line_start":408,"line_end":408,"column_start":5,"column_end":62}},{"value":"/     };","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70166,"byte_end":70176,"line_start":409,"line_end":409,"column_start":5,"column_end":15}},{"value":"/     let domain = \"imap.example.com\";","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70181,"byte_end":70221,"line_start":410,"line_end":410,"column_start":5,"column_end":45}},{"value":"/     let tls = TlsConnector::builder().build().unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70226,"byte_end":70285,"line_start":411,"line_end":411,"column_start":5,"column_end":64}},{"value":"/     let client = imap::connect((domain, 993), domain, &tls).unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70290,"byte_end":70363,"line_start":412,"line_end":412,"column_start":5,"column_end":78}},{"value":"/     match client.authenticate(\"XOAUTH2\", &auth) {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70368,"byte_end":70421,"line_start":413,"line_end":413,"column_start":5,"column_end":58}},{"value":"/         Ok(session) => {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70426,"byte_end":70454,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/             // you are successfully authenticated!","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70459,"byte_end":70513,"line_start":415,"line_end":415,"column_start":5,"column_end":59}},{"value":"/         },","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70518,"byte_end":70532,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/         Err((e, orig_client)) => {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70537,"byte_end":70575,"line_start":417,"line_end":417,"column_start":5,"column_end":43}},{"value":"/             eprintln!(\"error authenticating: {}\", e);","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70580,"byte_end":70637,"line_start":418,"line_end":418,"column_start":5,"column_end":62}},{"value":"/             // prompt user and try again with orig_client here","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70642,"byte_end":70708,"line_start":419,"line_end":419,"column_start":5,"column_end":71}},{"value":"/             return;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70713,"byte_end":70736,"line_start":420,"line_end":420,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70741,"byte_end":70754,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     };","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70759,"byte_end":70769,"line_start":422,"line_end":422,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70774,"byte_end":70779,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":70784,"byte_end":70791,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":75036,"byte_end":75042,"line_start":521,"line_end":521,"column_start":12,"column_end":18},"name":"select","qualname":"<Session<T>>::select","value":"fn select<S>(&mut Self, S) -> Result<Mailbox> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Selects a mailbox","sig":null,"attributes":[{"value":"/ Selects a mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":73687,"byte_end":73708,"line_start":503,"line_end":503,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":73713,"byte_end":73716,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ The `SELECT` command selects a mailbox so that messages in the mailbox can be accessed.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":73721,"byte_end":73812,"line_start":505,"line_end":505,"column_start":5,"column_end":96}},{"value":"/ Note that earlier versions of this protocol only required the FLAGS, EXISTS, and RECENT","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":73817,"byte_end":73908,"line_start":506,"line_end":506,"column_start":5,"column_end":96}},{"value":"/ untagged data; consequently, client implementations SHOULD implement default behavior for","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":73913,"byte_end":74006,"line_start":507,"line_end":507,"column_start":5,"column_end":98}},{"value":"/ missing data as discussed with the individual item.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74011,"byte_end":74066,"line_start":508,"line_end":508,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74071,"byte_end":74074,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Only one mailbox can be selected at a time in a connection; simultaneous access to multiple","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74079,"byte_end":74174,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/ mailboxes requires multiple connections.  The `SELECT` command automatically deselects any","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74179,"byte_end":74273,"line_start":511,"line_end":511,"column_start":5,"column_end":99}},{"value":"/ currently selected mailbox before attempting the new selection. Consequently, if a mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74278,"byte_end":74372,"line_start":512,"line_end":512,"column_start":5,"column_end":99}},{"value":"/ is selected and a `SELECT` command that fails is attempted, no mailbox is selected.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74377,"byte_end":74464,"line_start":513,"line_end":513,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74469,"byte_end":74472,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Note that the server *is* allowed to unilaterally send things to the client for messages in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74477,"byte_end":74572,"line_start":515,"line_end":515,"column_start":5,"column_end":100}},{"value":"/ a selected mailbox whose status has changed. See the note on [unilateral server responses","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74577,"byte_end":74670,"line_start":516,"line_end":516,"column_start":5,"column_end":98}},{"value":"/ in RFC 3501](https://tools.ietf.org/html/rfc3501#section-7). This means that if you use","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74675,"byte_end":74766,"line_start":517,"line_end":517,"column_start":5,"column_end":96}},{"value":"/ [`Connection::run_command_and_read_response`], you *may* see additional untagged `RECENT`,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74771,"byte_end":74865,"line_start":518,"line_end":518,"column_start":5,"column_end":99}},{"value":"/ `EXISTS`, `FETCH`, and `EXPUNGE` responses. You can get them from the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74870,"byte_end":74943,"line_start":519,"line_end":519,"column_start":5,"column_end":78}},{"value":"/ `unsolicited_responses` channel of the [`Session`](struct.Session.html).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":74948,"byte_end":75024,"line_start":520,"line_end":520,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":75788,"byte_end":75795,"line_start":534,"line_end":534,"column_start":12,"column_end":19},"name":"examine","qualname":"<Session<T>>::examine","value":"fn examine<S>(&mut Self, S) -> Result<Mailbox> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The `EXAMINE` command is identical to [`Session::select`] and returns the same output;\n however, the selected mailbox is identified as read-only. No changes to the permanent state\n of the mailbox, including per-user state, will happen in a mailbox opened with `examine`;\n in particular, messagess cannot lose [`Flag::Recent`] in an examined mailbox.\n","sig":null,"attributes":[{"value":"/ The `EXAMINE` command is identical to [`Session::select`] and returns the same output;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":75402,"byte_end":75492,"line_start":530,"line_end":530,"column_start":5,"column_end":95}},{"value":"/ however, the selected mailbox is identified as read-only. No changes to the permanent state","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":75497,"byte_end":75592,"line_start":531,"line_end":531,"column_start":5,"column_end":100}},{"value":"/ of the mailbox, including per-user state, will happen in a mailbox opened with `examine`;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":75597,"byte_end":75690,"line_start":532,"line_end":532,"column_start":5,"column_end":98}},{"value":"/ in particular, messagess cannot lose [`Flag::Recent`] in an examined mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":75695,"byte_end":75776,"line_start":533,"line_end":533,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":80114,"byte_end":80119,"line_start":600,"line_end":600,"column_start":12,"column_end":17},"name":"fetch","qualname":"<Session<T>>::fetch","value":"fn fetch<S1, S2>(&mut Self, S1, S2) -> ZeroCopyResult<Vec<Fetch>> where\nS1: AsRef<str>, S2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Fetch retrieves data associated with a set of messages in the mailbox.","sig":null,"attributes":[{"value":"/ Fetch retrieves data associated with a set of messages in the mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76099,"byte_end":76173,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76178,"byte_end":76181,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ Note that the server *is* allowed to unilaterally include `FETCH` responses for other","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76186,"byte_end":76275,"line_start":544,"line_end":544,"column_start":5,"column_end":94}},{"value":"/ messages in the selected mailbox whose status has changed. See the note on [unilateral","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76280,"byte_end":76370,"line_start":545,"line_end":545,"column_start":5,"column_end":95}},{"value":"/ server responses in RFC 3501](https://tools.ietf.org/html/rfc3501#section-7).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76375,"byte_end":76456,"line_start":546,"line_end":546,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76461,"byte_end":76464,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ `query` is a list of \"data items\" (space-separated in parentheses if `>1`). There are three","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76469,"byte_end":76564,"line_start":548,"line_end":548,"column_start":5,"column_end":100}},{"value":"/ \"macro items\" which specify commonly-used sets of data items, and can be used instead of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76569,"byte_end":76661,"line_start":549,"line_end":549,"column_start":5,"column_end":97}},{"value":"/ data items.  A macro must be used by itself, and not in conjunction with other macros or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76666,"byte_end":76758,"line_start":550,"line_end":550,"column_start":5,"column_end":97}},{"value":"/ data items. They are:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76763,"byte_end":76788,"line_start":551,"line_end":551,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76793,"byte_end":76796,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/  - `ALL`: equivalent to: `(FLAGS INTERNALDATE RFC822.SIZE ENVELOPE)`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76801,"byte_end":76873,"line_start":553,"line_end":553,"column_start":5,"column_end":77}},{"value":"/  - `FAST`: equivalent to: `(FLAGS INTERNALDATE RFC822.SIZE)`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76878,"byte_end":76942,"line_start":554,"line_end":554,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76947,"byte_end":76950,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ The currently defined data items that can be fetched are listen [in the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":76955,"byte_end":77030,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/ RFC](https://tools.ietf.org/html/rfc3501#section-6.4.5), but here are some common ones:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77035,"byte_end":77126,"line_start":557,"line_end":557,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77131,"byte_end":77134,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/  - `FLAGS`: The flags that are set for this message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77139,"byte_end":77195,"line_start":559,"line_end":559,"column_start":5,"column_end":61}},{"value":"/  - `INTERNALDATE`: The internal date of the message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77200,"byte_end":77256,"line_start":560,"line_end":560,"column_start":5,"column_end":61}},{"value":"/  - `BODY[<section>]`:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77261,"byte_end":77286,"line_start":561,"line_end":561,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77291,"byte_end":77294,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/     The text of a particular body section.  The section specification is a set of zero or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77299,"byte_end":77392,"line_start":563,"line_end":563,"column_start":5,"column_end":98}},{"value":"/     more part specifiers delimited by periods.  A part specifier is either a part number","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77397,"byte_end":77489,"line_start":564,"line_end":564,"column_start":5,"column_end":97}},{"value":"/     (see RFC) or one of the following: `HEADER`, `HEADER.FIELDS`, `HEADER.FIELDS.NOT`,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77494,"byte_end":77584,"line_start":565,"line_end":565,"column_start":5,"column_end":95}},{"value":"/     `MIME`, and `TEXT`.  An empty section specification (i.e., `BODY[]`) refers to the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77589,"byte_end":77679,"line_start":566,"line_end":566,"column_start":5,"column_end":95}},{"value":"/     entire message, including the header.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77684,"byte_end":77729,"line_start":567,"line_end":567,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77734,"byte_end":77737,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/     The `HEADER`, `HEADER.FIELDS`, and `HEADER.FIELDS.NOT` part specifiers refer to the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77742,"byte_end":77833,"line_start":569,"line_end":569,"column_start":5,"column_end":96}},{"value":"/     [RFC-2822](https://tools.ietf.org/html/rfc2822) header of the message or of an","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77838,"byte_end":77924,"line_start":570,"line_end":570,"column_start":5,"column_end":91}},{"value":"/     encapsulated [MIME-IMT](https://tools.ietf.org/html/rfc2046)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":77929,"byte_end":77997,"line_start":571,"line_end":571,"column_start":5,"column_end":73}},{"value":"/     MESSAGE/[RFC822](https://tools.ietf.org/html/rfc822) message. `HEADER.FIELDS` and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78002,"byte_end":78091,"line_start":572,"line_end":572,"column_start":5,"column_end":94}},{"value":"/     `HEADER.FIELDS.NOT` are followed by a list of field-name (as defined in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78096,"byte_end":78175,"line_start":573,"line_end":573,"column_start":5,"column_end":84}},{"value":"/     [RFC-2822](https://tools.ietf.org/html/rfc2822)) names, and return a subset of the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78180,"byte_end":78270,"line_start":574,"line_end":574,"column_start":5,"column_end":95}},{"value":"/     header.  The subset returned by `HEADER.FIELDS` contains only those header fields with","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78275,"byte_end":78369,"line_start":575,"line_end":575,"column_start":5,"column_end":99}},{"value":"/     a field-name that matches one of the names in the list; similarly, the subset returned","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78374,"byte_end":78468,"line_start":576,"line_end":576,"column_start":5,"column_end":99}},{"value":"/     by `HEADER.FIELDS.NOT` contains only the header fields with a non-matching field-name.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78473,"byte_end":78567,"line_start":577,"line_end":577,"column_start":5,"column_end":99}},{"value":"/     The field-matching is case-insensitive but otherwise exact.  Subsetting does not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78572,"byte_end":78660,"line_start":578,"line_end":578,"column_start":5,"column_end":93}},{"value":"/     exclude the [RFC-2822](https://tools.ietf.org/html/rfc2822) delimiting blank line","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78665,"byte_end":78754,"line_start":579,"line_end":579,"column_start":5,"column_end":94}},{"value":"/     between the header and the body; the blank line is included in all header fetches,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78759,"byte_end":78849,"line_start":580,"line_end":580,"column_start":5,"column_end":95}},{"value":"/     except in the case of a message which has no body and no blank line.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78854,"byte_end":78930,"line_start":581,"line_end":581,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78935,"byte_end":78938,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     The `MIME` part specifier refers to the [MIME-IMB](https://tools.ietf.org/html/rfc2045)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":78943,"byte_end":79038,"line_start":583,"line_end":583,"column_start":5,"column_end":100}},{"value":"/     header for this part.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79043,"byte_end":79072,"line_start":584,"line_end":584,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79077,"byte_end":79080,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/     The `TEXT` part specifier refers to the text body of the message,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79085,"byte_end":79158,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/     omitting the [RFC-2822](https://tools.ietf.org/html/rfc2822) header.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79163,"byte_end":79239,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79244,"byte_end":79247,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     [`Flag::Seen`] is implicitly set when `BODY` is fetched; if this causes the flags to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79252,"byte_end":79344,"line_start":589,"line_end":589,"column_start":5,"column_end":97}},{"value":"/     change, they will generally be included as part of the `FETCH` responses.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79349,"byte_end":79430,"line_start":590,"line_end":590,"column_start":5,"column_end":86}},{"value":"/  - `BODY.PEEK[<section>]`: An alternate form of `BODY[<section>]` that does not implicitly","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79435,"byte_end":79529,"line_start":591,"line_end":591,"column_start":5,"column_end":99}},{"value":"/    set [`Flag::Seen`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79534,"byte_end":79560,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/  - `ENVELOPE`: The envelope structure of the message.  This is computed by the server by","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79565,"byte_end":79657,"line_start":593,"line_end":593,"column_start":5,"column_end":97}},{"value":"/    parsing the [RFC-2822](https://tools.ietf.org/html/rfc2822) header into the component","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79662,"byte_end":79754,"line_start":594,"line_end":594,"column_start":5,"column_end":97}},{"value":"/    parts, defaulting various fields as necessary.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79759,"byte_end":79812,"line_start":595,"line_end":595,"column_start":5,"column_end":58}},{"value":"/  - `RFC822`: Functionally equivalent to `BODY[]`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79817,"byte_end":79870,"line_start":596,"line_end":596,"column_start":5,"column_end":58}},{"value":"/  - `RFC822.HEADER`: Functionally equivalent to `BODY.PEEK[HEADER]`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79875,"byte_end":79946,"line_start":597,"line_end":597,"column_start":5,"column_end":76}},{"value":"/  - `RFC822.SIZE`: The [RFC-2822](https://tools.ietf.org/html/rfc2822) size of the message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":79951,"byte_end":80045,"line_start":598,"line_end":598,"column_start":5,"column_end":99}},{"value":"/  - `UID`: The unique identifier for the message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":80050,"byte_end":80102,"line_start":599,"line_end":599,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":80917,"byte_end":80926,"line_start":619,"line_end":619,"column_start":12,"column_end":21},"name":"uid_fetch","qualname":"<Session<T>>::uid_fetch","value":"fn uid_fetch<S1, S2>(&mut Self, S1, S2) -> ZeroCopyResult<Vec<Fetch>> where\nS1: AsRef<str>, S2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`Session::fetch`], except that all identifiers in `uid_set` are\n [`Uid`]s. See also the [`UID` command](https://tools.ietf.org/html/rfc3501#section-6.4.8).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`Session::fetch`], except that all identifiers in `uid_set` are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":80724,"byte_end":80806,"line_start":617,"line_end":617,"column_start":5,"column_end":87}},{"value":"/ [`Uid`]s. See also the [`UID` command](https://tools.ietf.org/html/rfc3501#section-6.4.8).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":80811,"byte_end":80905,"line_start":618,"line_end":618,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":81578,"byte_end":81582,"line_start":637,"line_end":637,"column_start":12,"column_end":16},"name":"noop","qualname":"<Session<T>>::noop","value":"fn noop(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Noop always succeeds, and it does nothing.\n","sig":null,"attributes":[{"value":"/ Noop always succeeds, and it does nothing.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":81520,"byte_end":81566,"line_start":636,"line_end":636,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":81843,"byte_end":81849,"line_start":643,"line_end":643,"column_start":12,"column_end":18},"name":"logout","qualname":"<Session<T>>::logout","value":"fn logout(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logout informs the server that the client is done with the connection.\n","sig":null,"attributes":[{"value":"/ Logout informs the server that the client is done with the connection.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":81757,"byte_end":81831,"line_start":642,"line_end":642,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83627,"byte_end":83633,"line_start":669,"line_end":669,"column_start":12,"column_end":18},"name":"create","qualname":"<Session<T>>::create","value":"fn create<S>(&mut Self, S) -> Result<()> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`CREATE` command](https://tools.ietf.org/html/rfc3501#section-6.3.3) creates a mailbox\n with the given name.  `Ok` is returned only if a new mailbox with that name has been\n created.  It is an error to attempt to create `INBOX` or a mailbox with a name that\n refers to an extant mailbox.  Any error in creation will return [`Error::No`].","sig":null,"attributes":[{"value":"/ The [`CREATE` command](https://tools.ietf.org/html/rfc3501#section-6.3.3) creates a mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":81936,"byte_end":82031,"line_start":647,"line_end":647,"column_start":5,"column_end":100}},{"value":"/ with the given name.  `Ok` is returned only if a new mailbox with that name has been","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82036,"byte_end":82124,"line_start":648,"line_end":648,"column_start":5,"column_end":93}},{"value":"/ created.  It is an error to attempt to create `INBOX` or a mailbox with a name that","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82129,"byte_end":82216,"line_start":649,"line_end":649,"column_start":5,"column_end":92}},{"value":"/ refers to an extant mailbox.  Any error in creation will return [`Error::No`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82221,"byte_end":82303,"line_start":650,"line_end":650,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82308,"byte_end":82311,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ If the mailbox name is suffixed with the server's hierarchy separator character (as","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82316,"byte_end":82403,"line_start":652,"line_end":652,"column_start":5,"column_end":92}},{"value":"/ returned from the server by [`Session::list`]), this is a declaration that the client","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82408,"byte_end":82497,"line_start":653,"line_end":653,"column_start":5,"column_end":94}},{"value":"/ intends to create mailbox names under this name in the hierarchy.  Servers that do not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82502,"byte_end":82592,"line_start":654,"line_end":654,"column_start":5,"column_end":95}},{"value":"/ require this declaration will ignore the declaration.  In any case, the name created is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82597,"byte_end":82688,"line_start":655,"line_end":655,"column_start":5,"column_end":96}},{"value":"/ without the trailing hierarchy delimiter.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82693,"byte_end":82738,"line_start":656,"line_end":656,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82743,"byte_end":82746,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ If the server's hierarchy separator character appears elsewhere in the name, the server","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82751,"byte_end":82842,"line_start":658,"line_end":658,"column_start":5,"column_end":96}},{"value":"/ will generally create any superior hierarchical names that are needed for the `CREATE`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82847,"byte_end":82937,"line_start":659,"line_end":659,"column_start":5,"column_end":95}},{"value":"/ command to be successfully completed.  In other words, an attempt to create `foo/bar/zap`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":82942,"byte_end":83035,"line_start":660,"line_end":660,"column_start":5,"column_end":98}},{"value":"/ on a server in which `/` is the hierarchy separator character will usually create `foo/`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83040,"byte_end":83132,"line_start":661,"line_end":661,"column_start":5,"column_end":97}},{"value":"/ and `foo/bar/` if they do not already exist.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83137,"byte_end":83185,"line_start":662,"line_end":662,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83190,"byte_end":83193,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ If a new mailbox is created with the same name as a mailbox which was deleted, its unique","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83198,"byte_end":83291,"line_start":664,"line_end":664,"column_start":5,"column_end":98}},{"value":"/ identifiers will be greater than any unique identifiers used in the previous incarnation of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83296,"byte_end":83391,"line_start":665,"line_end":665,"column_start":5,"column_end":100}},{"value":"/ the mailbox UNLESS the new incarnation has a different unique identifier validity value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83396,"byte_end":83488,"line_start":666,"line_end":666,"column_start":5,"column_end":97}},{"value":"/ See the description of the [`UID`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83493,"byte_end":83530,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/ command](https://tools.ietf.org/html/rfc3501#section-6.4.8) for more detail.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83535,"byte_end":83615,"line_start":668,"line_end":668,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85184,"byte_end":85190,"line_start":692,"line_end":692,"column_start":12,"column_end":18},"name":"delete","qualname":"<Session<T>>::delete","value":"fn delete<S>(&mut Self, S) -> Result<()> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`DELETE` command](https://tools.ietf.org/html/rfc3501#section-6.3.4) permanently\n removes the mailbox with the given name.  `Ok` is returned only if the mailbox has been\n deleted.  It is an error to attempt to delete `INBOX` or a mailbox name that does not\n exist.","sig":null,"attributes":[{"value":"/ The [`DELETE` command](https://tools.ietf.org/html/rfc3501#section-6.3.4) permanently","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83803,"byte_end":83892,"line_start":673,"line_end":673,"column_start":5,"column_end":94}},{"value":"/ removes the mailbox with the given name.  `Ok` is returned only if the mailbox has been","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83897,"byte_end":83988,"line_start":674,"line_end":674,"column_start":5,"column_end":96}},{"value":"/ deleted.  It is an error to attempt to delete `INBOX` or a mailbox name that does not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":83993,"byte_end":84082,"line_start":675,"line_end":675,"column_start":5,"column_end":94}},{"value":"/ exist.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84087,"byte_end":84097,"line_start":676,"line_end":676,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84102,"byte_end":84105,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ The `DELETE` command will not remove inferior hierarchical names. For example, if a mailbox","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84110,"byte_end":84205,"line_start":678,"line_end":678,"column_start":5,"column_end":100}},{"value":"/ `foo` has an inferior `foo.bar` (assuming `.` is the hierarchy delimiter character),","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84210,"byte_end":84298,"line_start":679,"line_end":679,"column_start":5,"column_end":93}},{"value":"/ removing `foo` will not remove `foo.bar`.  It is an error to attempt to delete a name that","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84303,"byte_end":84397,"line_start":680,"line_end":680,"column_start":5,"column_end":99}},{"value":"/ has inferior hierarchical names and also has [`NameAttribute::NoSelect`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84402,"byte_end":84479,"line_start":681,"line_end":681,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84484,"byte_end":84487,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ It is permitted to delete a name that has inferior hierarchical names and does not have","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84492,"byte_end":84583,"line_start":683,"line_end":683,"column_start":5,"column_end":96}},{"value":"/ [`NameAttribute::NoSelect`].  In this case, all messages in that mailbox are removed, and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84588,"byte_end":84681,"line_start":684,"line_end":684,"column_start":5,"column_end":98}},{"value":"/ the name will acquire [`NameAttribute::NoSelect`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84686,"byte_end":84740,"line_start":685,"line_end":685,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84745,"byte_end":84748,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ The value of the highest-used unique identifier of the deleted mailbox will be preserved so","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84753,"byte_end":84848,"line_start":687,"line_end":687,"column_start":5,"column_end":100}},{"value":"/ that a new mailbox created with the same name will not reuse the identifiers of the former","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84853,"byte_end":84947,"line_start":688,"line_end":688,"column_start":5,"column_end":99}},{"value":"/ incarnation, UNLESS the new incarnation has a different unique identifier validity value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":84952,"byte_end":85045,"line_start":689,"line_end":689,"column_start":5,"column_end":98}},{"value":"/ See the description of the [`UID`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85050,"byte_end":85087,"line_start":690,"line_end":690,"column_start":5,"column_end":42}},{"value":"/ command](https://tools.ietf.org/html/rfc3501#section-6.4.8) for more detail.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85092,"byte_end":85172,"line_start":691,"line_end":691,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87197,"byte_end":87203,"line_start":721,"line_end":721,"column_start":12,"column_end":18},"name":"rename","qualname":"<Session<T>>::rename","value":"fn rename<S1, S2>(&mut Self, S1, S2) -> Result<()> where S1: AsRef<str>,\nS2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`RENAME` command](https://tools.ietf.org/html/rfc3501#section-6.3.5) changes the name\n of a mailbox.  `Ok` is returned only if the mailbox has been renamed.  It is an error to\n attempt to rename from a mailbox name that does not exist or to a mailbox name that already\n exists.  Any error in renaming will return [`Error::No`].","sig":null,"attributes":[{"value":"/ The [`RENAME` command](https://tools.ietf.org/html/rfc3501#section-6.3.5) changes the name","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85360,"byte_end":85454,"line_start":696,"line_end":696,"column_start":5,"column_end":99}},{"value":"/ of a mailbox.  `Ok` is returned only if the mailbox has been renamed.  It is an error to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85459,"byte_end":85551,"line_start":697,"line_end":697,"column_start":5,"column_end":97}},{"value":"/ attempt to rename from a mailbox name that does not exist or to a mailbox name that already","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85556,"byte_end":85651,"line_start":698,"line_end":698,"column_start":5,"column_end":100}},{"value":"/ exists.  Any error in renaming will return [`Error::No`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85656,"byte_end":85717,"line_start":699,"line_end":699,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85722,"byte_end":85725,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ If the name has inferior hierarchical names, then the inferior hierarchical names will also","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85730,"byte_end":85825,"line_start":701,"line_end":701,"column_start":5,"column_end":100}},{"value":"/ be renamed.  For example, a rename of `foo` to `zap` will rename `foo/bar` (assuming `/` is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85830,"byte_end":85925,"line_start":702,"line_end":702,"column_start":5,"column_end":100}},{"value":"/ the hierarchy delimiter character) to `zap/bar`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85930,"byte_end":85982,"line_start":703,"line_end":703,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85987,"byte_end":85990,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If the server's hierarchy separator character appears in the name, the server will","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":85995,"byte_end":86081,"line_start":705,"line_end":705,"column_start":5,"column_end":91}},{"value":"/ generally create any superior hierarchical names that are needed for the `RENAME` command","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86086,"byte_end":86179,"line_start":706,"line_end":706,"column_start":5,"column_end":98}},{"value":"/ to complete successfully.  In other words, an attempt to rename `foo/bar/zap` to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86184,"byte_end":86268,"line_start":707,"line_end":707,"column_start":5,"column_end":89}},{"value":"/ `baz/rag/zowie` on a server in which `/` is the hierarchy separator character will","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86273,"byte_end":86359,"line_start":708,"line_end":708,"column_start":5,"column_end":91}},{"value":"/ generally create `baz/` and `baz/rag/` if they do not already exist.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86364,"byte_end":86436,"line_start":709,"line_end":709,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86441,"byte_end":86444,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ The value of the highest-used unique identifier of the old mailbox name will be preserved","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86449,"byte_end":86542,"line_start":711,"line_end":711,"column_start":5,"column_end":98}},{"value":"/ so that a new mailbox created with the same name will not reuse the identifiers of the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86547,"byte_end":86637,"line_start":712,"line_end":712,"column_start":5,"column_end":95}},{"value":"/ former incarnation, UNLESS the new incarnation has a different unique identifier validity","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86642,"byte_end":86735,"line_start":713,"line_end":713,"column_start":5,"column_end":98}},{"value":"/ value. See the description of the [`UID`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86740,"byte_end":86784,"line_start":714,"line_end":714,"column_start":5,"column_end":49}},{"value":"/ command](https://tools.ietf.org/html/rfc3501#section-6.4.8) for more detail.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86789,"byte_end":86869,"line_start":715,"line_end":715,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86874,"byte_end":86877,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ Renaming `INBOX` is permitted, and has special behavior.  It moves all messages in `INBOX`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86882,"byte_end":86976,"line_start":717,"line_end":717,"column_start":5,"column_end":99}},{"value":"/ to a new mailbox with the given name, leaving `INBOX` empty.  If the server implementation","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":86981,"byte_end":87075,"line_start":718,"line_end":718,"column_start":5,"column_end":99}},{"value":"/ supports inferior hierarchical names of `INBOX`, these are unaffected by a rename of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87080,"byte_end":87168,"line_start":719,"line_end":719,"column_start":5,"column_end":93}},{"value":"/ `INBOX`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87173,"byte_end":87185,"line_start":720,"line_end":720,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88013,"byte_end":88022,"line_start":737,"line_end":737,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Session<T>>::subscribe","value":"fn subscribe<S>(&mut Self, S) -> Result<()> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`SUBSCRIBE` command](https://tools.ietf.org/html/rfc3501#section-6.3.6) adds the\n specified mailbox name to the server's set of \"active\" or \"subscribed\" mailboxes as\n returned by [`Session::lsub`].  This command returns `Ok` only if the subscription is\n successful.","sig":null,"attributes":[{"value":"/ The [`SUBSCRIBE` command](https://tools.ietf.org/html/rfc3501#section-6.3.6) adds the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87446,"byte_end":87535,"line_start":729,"line_end":729,"column_start":5,"column_end":94}},{"value":"/ specified mailbox name to the server's set of \"active\" or \"subscribed\" mailboxes as","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87540,"byte_end":87627,"line_start":730,"line_end":730,"column_start":5,"column_end":92}},{"value":"/ returned by [`Session::lsub`].  This command returns `Ok` only if the subscription is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87632,"byte_end":87721,"line_start":731,"line_end":731,"column_start":5,"column_end":94}},{"value":"/ successful.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87726,"byte_end":87741,"line_start":732,"line_end":732,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87746,"byte_end":87749,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ The server may validate the mailbox argument to `SUBSCRIBE` to verify that it exists.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87754,"byte_end":87843,"line_start":734,"line_end":734,"column_start":5,"column_end":94}},{"value":"/ However, it will not unilaterally remove an existing mailbox name from the subscription","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87848,"byte_end":87939,"line_start":735,"line_end":735,"column_start":5,"column_end":96}},{"value":"/ list even if a mailbox by that name no longer exists.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":87944,"byte_end":88001,"line_start":736,"line_end":736,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88494,"byte_end":88505,"line_start":745,"line_end":745,"column_start":12,"column_end":23},"name":"unsubscribe","qualname":"<Session<T>>::unsubscribe","value":"fn unsubscribe<S>(&mut Self, S) -> Result<()> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`UNSUBSCRIBE` command](https://tools.ietf.org/html/rfc3501#section-6.3.7) removes the\n specified mailbox name from the server's set of \"active\" or \"subscribed\" mailboxes as\n returned by [`Session::lsub`].  This command returns `Ok` only if the unsubscription is\n successful.\n","sig":null,"attributes":[{"value":"/ The [`UNSUBSCRIBE` command](https://tools.ietf.org/html/rfc3501#section-6.3.7) removes the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88178,"byte_end":88272,"line_start":741,"line_end":741,"column_start":5,"column_end":99}},{"value":"/ specified mailbox name from the server's set of \"active\" or \"subscribed\" mailboxes as","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88277,"byte_end":88366,"line_start":742,"line_end":742,"column_start":5,"column_end":94}},{"value":"/ returned by [`Session::lsub`].  This command returns `Ok` only if the unsubscription is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88371,"byte_end":88462,"line_start":743,"line_end":743,"column_start":5,"column_end":96}},{"value":"/ successful.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88467,"byte_end":88482,"line_start":744,"line_end":744,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88947,"byte_end":88959,"line_start":752,"line_end":752,"column_start":12,"column_end":24},"name":"capabilities","qualname":"<Session<T>>::capabilities","value":"fn capabilities(&mut Self) -> ZeroCopyResult<Capabilities>","parent":null,"children":[],"decl_id":null,"docs":" The [`CAPABILITY` command](https://tools.ietf.org/html/rfc3501#section-6.1.1) requests a\n listing of capabilities that the server supports.  The server will include \"IMAP4rev1\" as\n one of the listed capabilities. See [`Capabilities`] for further details.\n","sig":null,"attributes":[{"value":"/ The [`CAPABILITY` command](https://tools.ietf.org/html/rfc3501#section-6.1.1) requests a","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88663,"byte_end":88755,"line_start":749,"line_end":749,"column_start":5,"column_end":97}},{"value":"/ listing of capabilities that the server supports.  The server will include \"IMAP4rev1\" as","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88760,"byte_end":88853,"line_start":750,"line_end":750,"column_start":5,"column_end":98}},{"value":"/ one of the listed capabilities. See [`Capabilities`] for further details.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":88858,"byte_end":88935,"line_start":751,"line_end":751,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":89447,"byte_end":89454,"line_start":760,"line_end":760,"column_start":12,"column_end":19},"name":"expunge","qualname":"<Session<T>>::expunge","value":"fn expunge(&mut Self) -> Result<Vec<Seq>>","parent":null,"children":[],"decl_id":null,"docs":" The [`EXPUNGE` command](https://tools.ietf.org/html/rfc3501#section-6.4.3) permanently\n removes all messages that have [`Flag::Deleted`] set from the currently selected mailbox.\n The message sequence number of each message that is removed is returned.\n","sig":null,"attributes":[{"value":"/ The [`EXPUNGE` command](https://tools.ietf.org/html/rfc3501#section-6.4.3) permanently","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":89166,"byte_end":89256,"line_start":757,"line_end":757,"column_start":5,"column_end":95}},{"value":"/ removes all messages that have [`Flag::Deleted`] set from the currently selected mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":89261,"byte_end":89354,"line_start":758,"line_end":758,"column_start":5,"column_end":98}},{"value":"/ The message sequence number of each message that is removed is returned.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":89359,"byte_end":89435,"line_start":759,"line_end":759,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91255,"byte_end":91266,"line_start":787,"line_end":787,"column_start":12,"column_end":23},"name":"uid_expunge","qualname":"<Session<T>>::uid_expunge","value":"fn uid_expunge<S>(&mut Self, S) -> Result<Vec<Uid>> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`UID EXPUNGE` command](https://tools.ietf.org/html/rfc4315#section-2.1) permanently\n removes all messages that both have [`Flag::Deleted`] set and have a [`Uid`] that is\n included in the specified sequence set from the currently selected mailbox.  If a message\n either does not have [`Flag::Deleted`] set or has a [`Uid`] that is not included in the\n specified sequence set, it is not affected.","sig":null,"attributes":[{"value":"/ The [`UID EXPUNGE` command](https://tools.ietf.org/html/rfc4315#section-2.1) permanently","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":89641,"byte_end":89733,"line_start":765,"line_end":765,"column_start":5,"column_end":97}},{"value":"/ removes all messages that both have [`Flag::Deleted`] set and have a [`Uid`] that is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":89738,"byte_end":89826,"line_start":766,"line_end":766,"column_start":5,"column_end":93}},{"value":"/ included in the specified sequence set from the currently selected mailbox.  If a message","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":89831,"byte_end":89924,"line_start":767,"line_end":767,"column_start":5,"column_end":98}},{"value":"/ either does not have [`Flag::Deleted`] set or has a [`Uid`] that is not included in the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":89929,"byte_end":90020,"line_start":768,"line_end":768,"column_start":5,"column_end":96}},{"value":"/ specified sequence set, it is not affected.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90025,"byte_end":90072,"line_start":769,"line_end":769,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90077,"byte_end":90080,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ This command is particularly useful for disconnected use clients. By using [`uid_expunge`]","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90085,"byte_end":90179,"line_start":771,"line_end":771,"column_start":5,"column_end":99}},{"value":"/ instead of [`expunge`] when resynchronizing with the server, the client can ensure that it","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90184,"byte_end":90278,"line_start":772,"line_end":772,"column_start":5,"column_end":99}},{"value":"/ does not inadvertantly remove any messages that have been marked as [`Flag::Deleted`] by","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90283,"byte_end":90375,"line_start":773,"line_end":773,"column_start":5,"column_end":97}},{"value":"/ other clients between the time that the client was last connected and the time the client","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90380,"byte_end":90473,"line_start":774,"line_end":774,"column_start":5,"column_end":98}},{"value":"/ resynchronizes.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90478,"byte_end":90497,"line_start":775,"line_end":775,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90502,"byte_end":90505,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This command requires that the server supports [RFC","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90510,"byte_end":90565,"line_start":777,"line_end":777,"column_start":5,"column_end":60}},{"value":"/ 4315](https://tools.ietf.org/html/rfc4315) as indicated by the `UIDPLUS` capability (see","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90570,"byte_end":90662,"line_start":778,"line_end":778,"column_start":5,"column_end":97}},{"value":"/ [`Session::capabilities`]). If the server does not support the `UIDPLUS` capability, the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90667,"byte_end":90759,"line_start":779,"line_end":779,"column_start":5,"column_end":97}},{"value":"/ client should fall back to using [`Session::store`] to temporarily remove [`Flag::Deleted`]","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90764,"byte_end":90859,"line_start":780,"line_end":780,"column_start":5,"column_end":100}},{"value":"/ from messages it does not want to remove, then invoking [`Session::expunge`].  Finally, the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90864,"byte_end":90959,"line_start":781,"line_end":781,"column_start":5,"column_end":100}},{"value":"/ client should use [`Session::store`] to restore [`Flag::Deleted`] on the messages in which","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":90964,"byte_end":91058,"line_start":782,"line_end":782,"column_start":5,"column_end":99}},{"value":"/ it was temporarily removed.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91063,"byte_end":91094,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91099,"byte_end":91102,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ Alternatively, the client may fall back to using just [`Session::expunge`], risking the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91107,"byte_end":91198,"line_start":785,"line_end":785,"column_start":5,"column_end":96}},{"value":"/ unintended removal of some messages.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91203,"byte_end":91243,"line_start":786,"line_end":786,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92322,"byte_end":92327,"line_start":802,"line_end":802,"column_start":12,"column_end":17},"name":"check","qualname":"<Session<T>>::check","value":"fn check(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The [`CHECK` command](https://tools.ietf.org/html/rfc3501#section-6.4.1) requests a\n checkpoint of the currently selected mailbox.  A checkpoint refers to any\n implementation-dependent housekeeping associated with the mailbox (e.g., resolving the\n server's in-memory state of the mailbox with the state on its disk) that is not normally\n executed as part of each command.  A checkpoint MAY take a non-instantaneous amount of real\n time to complete.  If a server implementation has no such housekeeping considerations,\n [`Session::check`] is equivalent to [`Session::noop`].","sig":null,"attributes":[{"value":"/ The [`CHECK` command](https://tools.ietf.org/html/rfc3501#section-6.4.1) requests a","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91515,"byte_end":91602,"line_start":792,"line_end":792,"column_start":5,"column_end":92}},{"value":"/ checkpoint of the currently selected mailbox.  A checkpoint refers to any","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91607,"byte_end":91684,"line_start":793,"line_end":793,"column_start":5,"column_end":82}},{"value":"/ implementation-dependent housekeeping associated with the mailbox (e.g., resolving the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91689,"byte_end":91779,"line_start":794,"line_end":794,"column_start":5,"column_end":95}},{"value":"/ server's in-memory state of the mailbox with the state on its disk) that is not normally","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91784,"byte_end":91876,"line_start":795,"line_end":795,"column_start":5,"column_end":97}},{"value":"/ executed as part of each command.  A checkpoint MAY take a non-instantaneous amount of real","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91881,"byte_end":91976,"line_start":796,"line_end":796,"column_start":5,"column_end":100}},{"value":"/ time to complete.  If a server implementation has no such housekeeping considerations,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":91981,"byte_end":92071,"line_start":797,"line_end":797,"column_start":5,"column_end":95}},{"value":"/ [`Session::check`] is equivalent to [`Session::noop`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92076,"byte_end":92134,"line_start":798,"line_end":798,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92139,"byte_end":92142,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee that an `EXISTS` untagged response will happen as a result of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92147,"byte_end":92234,"line_start":800,"line_end":800,"column_start":5,"column_end":92}},{"value":"/ `CHECK`.  [`Session::noop`] SHOULD be used for new message polling.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92239,"byte_end":92310,"line_start":801,"line_end":801,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93492,"byte_end":93497,"line_start":821,"line_end":821,"column_start":12,"column_end":17},"name":"close","qualname":"<Session<T>>::close","value":"fn close(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The [`CLOSE` command](https://tools.ietf.org/html/rfc3501#section-6.4.2) permanently\n removes all messages that have [`Flag::Deleted`] set from the currently selected mailbox,\n and returns to the authenticated state from the selected state.  No `EXPUNGE` responses are\n sent.","sig":null,"attributes":[{"value":"/ The [`CLOSE` command](https://tools.ietf.org/html/rfc3501#section-6.4.2) permanently","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92413,"byte_end":92501,"line_start":806,"line_end":806,"column_start":5,"column_end":93}},{"value":"/ removes all messages that have [`Flag::Deleted`] set from the currently selected mailbox,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92506,"byte_end":92599,"line_start":807,"line_end":807,"column_start":5,"column_end":98}},{"value":"/ and returns to the authenticated state from the selected state.  No `EXPUNGE` responses are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92604,"byte_end":92699,"line_start":808,"line_end":808,"column_start":5,"column_end":100}},{"value":"/ sent.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92704,"byte_end":92713,"line_start":809,"line_end":809,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92718,"byte_end":92721,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ No messages are removed, and no error is given, if the mailbox is selected by","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92726,"byte_end":92807,"line_start":811,"line_end":811,"column_start":5,"column_end":86}},{"value":"/ [`Session::examine`] or is otherwise selected read-only.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92812,"byte_end":92872,"line_start":812,"line_end":812,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92877,"byte_end":92880,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Even if a mailbox is selected, [`Session::select`], [`Session::examine`], or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92885,"byte_end":92965,"line_start":814,"line_end":814,"column_start":5,"column_end":85}},{"value":"/ [`Session::logout`] command MAY be issued without previously invoking [`Session::close`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":92970,"byte_end":93063,"line_start":815,"line_end":815,"column_start":5,"column_end":98}},{"value":"/ [`Session::select`], [`Session::examine`], and [`Session::logout`] implicitly close the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93068,"byte_end":93159,"line_start":816,"line_end":816,"column_start":5,"column_end":96}},{"value":"/ currently selected mailbox without doing an expunge.  However, when many messages are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93164,"byte_end":93253,"line_start":817,"line_end":817,"column_start":5,"column_end":94}},{"value":"/ deleted, a `CLOSE-LOGOUT` or `CLOSE-SELECT` sequence is considerably faster than an","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93258,"byte_end":93345,"line_start":818,"line_end":818,"column_start":5,"column_end":92}},{"value":"/ `EXPUNGE-LOGOUT` or `EXPUNGE-SELECT` because no `EXPUNGE` responses (which the client would","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93350,"byte_end":93445,"line_start":819,"line_end":819,"column_start":5,"column_end":100}},{"value":"/ probably ignore) are sent.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93450,"byte_end":93480,"line_start":820,"line_end":820,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95573,"byte_end":95578,"line_start":869,"line_end":869,"column_start":12,"column_end":17},"name":"store","qualname":"<Session<T>>::store","value":"fn store<S1, S2>(&mut Self, S1, S2) -> ZeroCopyResult<Vec<Fetch>> where\nS1: AsRef<str>, S2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`STORE` command](https://tools.ietf.org/html/rfc3501#section-6.4.6) alters data\n associated with a message in the mailbox.  Normally, `STORE` will return the updated value\n of the data with an untagged FETCH response.  A suffix of `.SILENT` in `query` prevents the\n untagged `FETCH`, and the server assumes that the client has determined the updated value\n itself or does not care about the updated value.","sig":null,"attributes":[{"value":"/ The [`STORE` command](https://tools.ietf.org/html/rfc3501#section-6.4.6) alters data","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93583,"byte_end":93671,"line_start":825,"line_end":825,"column_start":5,"column_end":93}},{"value":"/ associated with a message in the mailbox.  Normally, `STORE` will return the updated value","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93676,"byte_end":93770,"line_start":826,"line_end":826,"column_start":5,"column_end":99}},{"value":"/ of the data with an untagged FETCH response.  A suffix of `.SILENT` in `query` prevents the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93775,"byte_end":93870,"line_start":827,"line_end":827,"column_start":5,"column_end":100}},{"value":"/ untagged `FETCH`, and the server assumes that the client has determined the updated value","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93875,"byte_end":93968,"line_start":828,"line_end":828,"column_start":5,"column_end":98}},{"value":"/ itself or does not care about the updated value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":93973,"byte_end":94025,"line_start":829,"line_end":829,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94030,"byte_end":94033,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ The currently defined data items that can be stored are:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94038,"byte_end":94098,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94103,"byte_end":94106,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/  - `FLAGS <flag list>`:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94111,"byte_end":94138,"line_start":833,"line_end":833,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94143,"byte_end":94146,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/    Replace the flags for the message (other than [`Flag::Recent`]) with the argument.  The","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94151,"byte_end":94245,"line_start":835,"line_end":835,"column_start":5,"column_end":99}},{"value":"/    new value of the flags is returned as if a `FETCH` of those flags was done.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94250,"byte_end":94332,"line_start":836,"line_end":836,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94337,"byte_end":94340,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/  - `FLAGS.SILENT <flag list>`: Equivalent to `FLAGS`, but without returning a new value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94345,"byte_end":94437,"line_start":838,"line_end":838,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94442,"byte_end":94445,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/  - `+FLAGS <flag list>`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94450,"byte_end":94477,"line_start":840,"line_end":840,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94482,"byte_end":94485,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/    Add the argument to the flags for the message.  The new value of the flags is returned","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94490,"byte_end":94583,"line_start":842,"line_end":842,"column_start":5,"column_end":98}},{"value":"/    as if a `FETCH` of those flags was done.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94588,"byte_end":94635,"line_start":843,"line_end":843,"column_start":5,"column_end":52}},{"value":"/  - `+FLAGS.SILENT <flag list>`: Equivalent to `+FLAGS`, but without returning a new value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94640,"byte_end":94734,"line_start":844,"line_end":844,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94739,"byte_end":94742,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/  - `-FLAGS <flag list>`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94747,"byte_end":94774,"line_start":846,"line_end":846,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94779,"byte_end":94782,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/    Remove the argument from the flags for the message.  The new value of the flags is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94787,"byte_end":94876,"line_start":848,"line_end":848,"column_start":5,"column_end":94}},{"value":"/    returned as if a `FETCH` of those flags was done.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94881,"byte_end":94937,"line_start":849,"line_end":849,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94942,"byte_end":94945,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/  - `-FLAGS.SILENT <flag list>`: Equivalent to `-FLAGS`, but without returning a new value.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":94950,"byte_end":95044,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95049,"byte_end":95052,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ In all cases, `<flag list>` is a space-separated list enclosed in parentheses.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95057,"byte_end":95139,"line_start":853,"line_end":853,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95144,"byte_end":95147,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95152,"byte_end":95166,"line_start":855,"line_end":855,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95171,"byte_end":95174,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Delete a message:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95179,"byte_end":95200,"line_start":857,"line_end":857,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95205,"byte_end":95208,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95213,"byte_end":95231,"line_start":859,"line_end":859,"column_start":5,"column_end":23}},{"value":"/ # extern crate imap;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95236,"byte_end":95260,"line_start":860,"line_end":860,"column_start":5,"column_end":29}},{"value":"/ # use imap::{self, Session};","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95265,"byte_end":95297,"line_start":861,"line_end":861,"column_start":5,"column_end":37}},{"value":"/ # use std::net::TcpStream;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95302,"byte_end":95332,"line_start":862,"line_end":862,"column_start":5,"column_end":35}},{"value":"/ fn delete(seq: imap::types::Seq, s: &mut Session<TcpStream>) -> imap::error::Result<()> {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95337,"byte_end":95430,"line_start":863,"line_end":863,"column_start":5,"column_end":98}},{"value":"/     s.store(format!(\"{}\", seq), \"+FLAGS (\\\\Deleted)\")?;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95435,"byte_end":95494,"line_start":864,"line_end":864,"column_start":5,"column_end":64}},{"value":"/     s.expunge()?;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95499,"byte_end":95520,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95525,"byte_end":95539,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95544,"byte_end":95549,"line_start":867,"line_end":867,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95554,"byte_end":95561,"line_start":868,"line_end":868,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96167,"byte_end":96176,"line_start":884,"line_end":884,"column_start":12,"column_end":21},"name":"uid_store","qualname":"<Session<T>>::uid_store","value":"fn uid_store<S1, S2>(&mut Self, S1, S2) -> ZeroCopyResult<Vec<Fetch>> where\nS1: AsRef<str>, S2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`Session::store`], except that all identifiers in `sequence_set` are\n [`Uid`]s. See also the [`UID` command](https://tools.ietf.org/html/rfc3501#section-6.4.8).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`Session::store`], except that all identifiers in `sequence_set` are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":95969,"byte_end":96056,"line_start":882,"line_end":882,"column_start":5,"column_end":92}},{"value":"/ [`Uid`]s. See also the [`UID` command](https://tools.ietf.org/html/rfc3501#section-6.4.8).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96061,"byte_end":96155,"line_start":883,"line_end":883,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":97048,"byte_end":97052,"line_start":904,"line_end":904,"column_start":12,"column_end":16},"name":"copy","qualname":"<Session<T>>::copy","value":"fn copy<S1, S2>(&mut Self, S1, S2) -> Result<()> where S1: AsRef<str>,\nS2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`COPY` command](https://tools.ietf.org/html/rfc3501#section-6.4.7) copies the\n specified message(s) to the end of the specified destination mailbox.  The flags and\n internal date of the message(s) will generally be preserved, and [`Flag::Recent`] will\n generally be set, in the copy.","sig":null,"attributes":[{"value":"/ The [`COPY` command](https://tools.ietf.org/html/rfc3501#section-6.4.7) copies the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96561,"byte_end":96647,"line_start":897,"line_end":897,"column_start":5,"column_end":91}},{"value":"/ specified message(s) to the end of the specified destination mailbox.  The flags and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96652,"byte_end":96740,"line_start":898,"line_end":898,"column_start":5,"column_end":93}},{"value":"/ internal date of the message(s) will generally be preserved, and [`Flag::Recent`] will","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96745,"byte_end":96835,"line_start":899,"line_end":899,"column_start":5,"column_end":95}},{"value":"/ generally be set, in the copy.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96840,"byte_end":96874,"line_start":900,"line_end":900,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96879,"byte_end":96882,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ If the `COPY` command is unsuccessful for any reason, the server restores the destination","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96887,"byte_end":96980,"line_start":902,"line_end":902,"column_start":5,"column_end":98}},{"value":"/ mailbox to its state before the `COPY` attempt.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":96985,"byte_end":97036,"line_start":903,"line_end":903,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":97541,"byte_end":97549,"line_start":918,"line_end":918,"column_start":12,"column_end":20},"name":"uid_copy","qualname":"<Session<T>>::uid_copy","value":"fn uid_copy<S1, S2>(&mut Self, S1, S2) -> Result<()> where S1: AsRef<str>,\nS2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`Session::copy`], except that all identifiers in `sequence_set` are\n [`Uid`]s. See also the [`UID` command](https://tools.ietf.org/html/rfc3501#section-6.4.8).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`Session::copy`], except that all identifiers in `sequence_set` are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":97344,"byte_end":97430,"line_start":916,"line_end":916,"column_start":5,"column_end":91}},{"value":"/ [`Uid`]s. See also the [`UID` command](https://tools.ietf.org/html/rfc3501#section-6.4.8).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":97435,"byte_end":97529,"line_start":917,"line_end":917,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99780,"byte_end":99782,"line_start":960,"line_end":960,"column_start":12,"column_end":14},"name":"mv","qualname":"<Session<T>>::mv","value":"fn mv<S1, S2>(&mut Self, S1, S2) -> Result<()> where S1: AsRef<str>,\nS2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`MOVE` command](https://tools.ietf.org/html/rfc6851#section-3.1) takes two\n arguments: a sequence set and a named mailbox. Each message included in the set is moved,\n rather than copied, from the selected (source) mailbox to the named (target) mailbox.","sig":null,"attributes":[{"value":"/ The [`MOVE` command](https://tools.ietf.org/html/rfc6851#section-3.1) takes two","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":97835,"byte_end":97918,"line_start":930,"line_end":930,"column_start":5,"column_end":88}},{"value":"/ arguments: a sequence set and a named mailbox. Each message included in the set is moved,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":97923,"byte_end":98016,"line_start":931,"line_end":931,"column_start":5,"column_end":98}},{"value":"/ rather than copied, from the selected (source) mailbox to the named (target) mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98021,"byte_end":98110,"line_start":932,"line_end":932,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98115,"byte_end":98118,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ This means that a new message is created in the target mailbox with a","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98123,"byte_end":98196,"line_start":934,"line_end":934,"column_start":5,"column_end":78}},{"value":"/ new [`Uid`], the original message is removed from the source mailbox, and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98201,"byte_end":98278,"line_start":935,"line_end":935,"column_start":5,"column_end":82}},{"value":"/ it appears to the client as a single action.  This has the same","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98283,"byte_end":98350,"line_start":936,"line_end":936,"column_start":5,"column_end":72}},{"value":"/ effect for each message as this sequence:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98355,"byte_end":98400,"line_start":937,"line_end":937,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98405,"byte_end":98408,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/   1. COPY","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98413,"byte_end":98426,"line_start":939,"line_end":939,"column_start":5,"column_end":18}},{"value":"/   2. STORE +FLAGS.SILENT \\DELETED","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98431,"byte_end":98468,"line_start":940,"line_end":940,"column_start":5,"column_end":42}},{"value":"/   3. EXPUNGE","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98473,"byte_end":98489,"line_start":941,"line_end":941,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98494,"byte_end":98497,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This command requires that the server supports [RFC","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98502,"byte_end":98557,"line_start":943,"line_end":943,"column_start":5,"column_end":60}},{"value":"/ 6851](https://tools.ietf.org/html/rfc6851) as indicated by the `MOVE` capability (see","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98562,"byte_end":98651,"line_start":944,"line_end":944,"column_start":5,"column_end":94}},{"value":"/ [`Session::capabilities`]).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98656,"byte_end":98687,"line_start":945,"line_end":945,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98692,"byte_end":98695,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Although the effect of the `MOVE` is the same as the preceding steps, the semantics are not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98700,"byte_end":98795,"line_start":947,"line_end":947,"column_start":5,"column_end":100}},{"value":"/ identical: The intermediate states produced by those steps do not occur, and the response","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98800,"byte_end":98893,"line_start":948,"line_end":948,"column_start":5,"column_end":98}},{"value":"/ codes are different.  In particular, though the `COPY` and `EXPUNGE` response codes will be","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98898,"byte_end":98993,"line_start":949,"line_end":949,"column_start":5,"column_end":100}},{"value":"/ returned, response codes for a `store` will not be generated and [`Flag::Deleted`] will not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":98998,"byte_end":99093,"line_start":950,"line_end":950,"column_start":5,"column_end":100}},{"value":"/ be set for any message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99098,"byte_end":99125,"line_start":951,"line_end":951,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99130,"byte_end":99133,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Because a `MOVE` applies to a set of messages, it might fail partway through the set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99138,"byte_end":99227,"line_start":953,"line_end":953,"column_start":5,"column_end":94}},{"value":"/ Regardless of whether the command is successful in moving the entire set, each individual","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99232,"byte_end":99325,"line_start":954,"line_end":954,"column_start":5,"column_end":98}},{"value":"/ message will either be moved or unaffected.  The server will leave each message in a state","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99330,"byte_end":99424,"line_start":955,"line_end":955,"column_start":5,"column_end":99}},{"value":"/ where it is in at least one of the source or target mailboxes (no message can be lost or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99429,"byte_end":99521,"line_start":956,"line_end":956,"column_start":5,"column_end":97}},{"value":"/ orphaned).  The server will generally not leave any message in both mailboxes (it would be","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99526,"byte_end":99620,"line_start":957,"line_end":957,"column_start":5,"column_end":99}},{"value":"/ bad for a partial failure to result in a bunch of duplicate messages).  This is true even","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99625,"byte_end":99718,"line_start":958,"line_end":958,"column_start":5,"column_end":98}},{"value":"/ if the server returns with [`Error::No`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":99723,"byte_end":99768,"line_start":959,"line_end":959,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100396,"byte_end":100402,"line_start":976,"line_end":976,"column_start":12,"column_end":18},"name":"uid_mv","qualname":"<Session<T>>::uid_mv","value":"fn uid_mv<S1, S2>(&mut Self, S1, S2) -> Result<()> where S1: AsRef<str>,\nS2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`Session::copy`], except that all identifiers in `sequence_set` are\n [`Uid`]s. See also the [`UID` command](https://tools.ietf.org/html/rfc3501#section-6.4.8)\n and the [semantics of `MOVE` and `UID\n MOVE`](https://tools.ietf.org/html/rfc6851#section-3.3).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`Session::copy`], except that all identifiers in `sequence_set` are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100089,"byte_end":100175,"line_start":972,"line_end":972,"column_start":5,"column_end":91}},{"value":"/ [`Uid`]s. See also the [`UID` command](https://tools.ietf.org/html/rfc3501#section-6.4.8)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100180,"byte_end":100273,"line_start":973,"line_end":973,"column_start":5,"column_end":98}},{"value":"/ and the [semantics of `MOVE` and `UID","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100278,"byte_end":100319,"line_start":974,"line_end":974,"column_start":5,"column_end":46}},{"value":"/ MOVE`](https://tools.ietf.org/html/rfc6851#section-3.3).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100324,"byte_end":100384,"line_start":975,"line_end":975,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103021,"byte_end":103025,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"name":"list","qualname":"<Session<T>>::list","value":"fn list(&mut Self, Option<&str>, Option<&str>) -> ZeroCopyResult<Vec<Name>>","parent":null,"children":[],"decl_id":null,"docs":" The [`LIST` command](https://tools.ietf.org/html/rfc3501#section-6.3.8) returns a subset of\n names from the complete set of all names available to the client.  It returns the name\n attributes, hierarchy delimiter, and name of each such name; see [`Name`] for more detail.","sig":null,"attributes":[{"value":"/ The [`LIST` command](https://tools.ietf.org/html/rfc3501#section-6.3.8) returns a subset of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100703,"byte_end":100798,"line_start":988,"line_end":988,"column_start":5,"column_end":100}},{"value":"/ names from the complete set of all names available to the client.  It returns the name","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100803,"byte_end":100893,"line_start":989,"line_end":989,"column_start":5,"column_end":95}},{"value":"/ attributes, hierarchy delimiter, and name of each such name; see [`Name`] for more detail.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100898,"byte_end":100992,"line_start":990,"line_end":990,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":100997,"byte_end":101000,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ If `reference_name` is `None` (or `\"\"`), the currently selected mailbox is used.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101005,"byte_end":101089,"line_start":992,"line_end":992,"column_start":5,"column_end":89}},{"value":"/ The returned mailbox names must match the supplied `mailbox_pattern`.  A non-empty","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101094,"byte_end":101180,"line_start":993,"line_end":993,"column_start":5,"column_end":91}},{"value":"/ reference name argument is the name of a mailbox or a level of mailbox hierarchy, and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101185,"byte_end":101274,"line_start":994,"line_end":994,"column_start":5,"column_end":94}},{"value":"/ indicates the context in which the mailbox name is interpreted.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101279,"byte_end":101346,"line_start":995,"line_end":995,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101351,"byte_end":101354,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ If `mailbox_pattern` is `None` (or `\"\"`), it is a special request to return the hierarchy","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101359,"byte_end":101452,"line_start":997,"line_end":997,"column_start":5,"column_end":98}},{"value":"/ delimiter and the root name of the name given in the reference.  The value returned as the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101457,"byte_end":101551,"line_start":998,"line_end":998,"column_start":5,"column_end":99}},{"value":"/ root MAY be the empty string if the reference is non-rooted or is an empty string.  In all","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101556,"byte_end":101650,"line_start":999,"line_end":999,"column_start":5,"column_end":99}},{"value":"/ cases, a hierarchy delimiter (or `NIL` if there is no hierarchy) is returned.  This permits","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101655,"byte_end":101750,"line_start":1000,"line_end":1000,"column_start":5,"column_end":100}},{"value":"/ a client to get the hierarchy delimiter (or find out that the mailbox names are flat) even","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101755,"byte_end":101849,"line_start":1001,"line_end":1001,"column_start":5,"column_end":99}},{"value":"/ when no mailboxes by that name currently exist.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101854,"byte_end":101905,"line_start":1002,"line_end":1002,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101910,"byte_end":101913,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ The reference and mailbox name arguments are interpreted into a canonical form that","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":101918,"byte_end":102005,"line_start":1004,"line_end":1004,"column_start":5,"column_end":92}},{"value":"/ represents an unambiguous left-to-right hierarchy.  The returned mailbox names will be in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102010,"byte_end":102103,"line_start":1005,"line_end":1005,"column_start":5,"column_end":98}},{"value":"/ the interpreted form.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102108,"byte_end":102133,"line_start":1006,"line_end":1006,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102138,"byte_end":102141,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ The character `*` is a wildcard, and matches zero or more characters at this position.  The","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102146,"byte_end":102241,"line_start":1008,"line_end":1008,"column_start":5,"column_end":100}},{"value":"/ character `%` is similar to `*`, but it does not match a hierarchy delimiter.  If the `%`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102246,"byte_end":102339,"line_start":1009,"line_end":1009,"column_start":5,"column_end":98}},{"value":"/ wildcard is the last character of a mailbox name argument, matching levels of hierarchy are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102344,"byte_end":102439,"line_start":1010,"line_end":1010,"column_start":5,"column_end":100}},{"value":"/ also returned.  If these levels of hierarchy are not also selectable mailboxes, they are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102444,"byte_end":102536,"line_start":1011,"line_end":1011,"column_start":5,"column_end":97}},{"value":"/ returned with [`NameAttribute::NoSelect`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102541,"byte_end":102587,"line_start":1012,"line_end":1012,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102592,"byte_end":102595,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ The special name `INBOX` is included if `INBOX` is supported by this server for this user","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102600,"byte_end":102693,"line_start":1014,"line_end":1014,"column_start":5,"column_end":98}},{"value":"/ and if the uppercase string `INBOX` matches the interpreted reference and mailbox name","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102698,"byte_end":102788,"line_start":1015,"line_end":1015,"column_start":5,"column_end":95}},{"value":"/ arguments with wildcards.  The criteria for omitting `INBOX` is whether `SELECT INBOX` will","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102793,"byte_end":102888,"line_start":1016,"line_end":1016,"column_start":5,"column_end":100}},{"value":"/ return failure; it is not relevant whether the user's real `INBOX` resides on this or some","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102893,"byte_end":102987,"line_start":1017,"line_end":1017,"column_start":5,"column_end":99}},{"value":"/ other server.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":102992,"byte_end":103009,"line_start":1018,"line_end":1018,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104438,"byte_end":104442,"line_start":1047,"line_end":1047,"column_start":12,"column_end":16},"name":"lsub","qualname":"<Session<T>>::lsub","value":"fn lsub(&mut Self, Option<&str>, Option<&str>) -> ZeroCopyResult<Vec<Name>>","parent":null,"children":[],"decl_id":null,"docs":" The [`LSUB` command](https://tools.ietf.org/html/rfc3501#section-6.3.9) returns a subset of\n names from the set of names that the user has declared as being \"active\" or \"subscribed\".\n The arguments to this method the same as for [`Session::list`].","sig":null,"attributes":[{"value":"/ The [`LSUB` command](https://tools.ietf.org/html/rfc3501#section-6.3.9) returns a subset of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103439,"byte_end":103534,"line_start":1032,"line_end":1032,"column_start":5,"column_end":100}},{"value":"/ names from the set of names that the user has declared as being \"active\" or \"subscribed\".","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103539,"byte_end":103632,"line_start":1033,"line_end":1033,"column_start":5,"column_end":98}},{"value":"/ The arguments to this method the same as for [`Session::list`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103637,"byte_end":103704,"line_start":1034,"line_end":1034,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103709,"byte_end":103712,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ The returned [`Name`]s MAY contain different mailbox flags from response to","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103717,"byte_end":103796,"line_start":1036,"line_end":1036,"column_start":5,"column_end":84}},{"value":"/ [`Session::list`].  If this should happen, the flags returned by [`Session::list`] are","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103801,"byte_end":103891,"line_start":1037,"line_end":1037,"column_start":5,"column_end":95}},{"value":"/ considered more authoritative.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103896,"byte_end":103930,"line_start":1038,"line_end":1038,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103935,"byte_end":103938,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ A special situation occurs when invoking `lsub` with the `%` wildcard. Consider what","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":103943,"byte_end":104031,"line_start":1040,"line_end":1040,"column_start":5,"column_end":93}},{"value":"/ happens if `foo/bar` (with a hierarchy delimiter of `/`) is subscribed but `foo` is not.  A","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104036,"byte_end":104131,"line_start":1041,"line_end":1041,"column_start":5,"column_end":100}},{"value":"/ `%` wildcard to `lsub` must return `foo`, not `foo/bar`, and it will be flagged with","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104136,"byte_end":104224,"line_start":1042,"line_end":1042,"column_start":5,"column_end":93}},{"value":"/ [`NameAttribute::NoSelect`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104229,"byte_end":104261,"line_start":1043,"line_end":1043,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104266,"byte_end":104269,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ The server will not unilaterally remove an existing mailbox name from the subscription list","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104274,"byte_end":104369,"line_start":1045,"line_end":1045,"column_start":5,"column_end":100}},{"value":"/ even if a mailbox by that name no longer exists.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104374,"byte_end":104426,"line_start":1046,"line_end":1046,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107120,"byte_end":107126,"line_start":1094,"line_end":1094,"column_start":12,"column_end":18},"name":"status","qualname":"<Session<T>>::status","value":"fn status<S1, S2>(&mut Self, S1, S2) -> Result<Mailbox> where S1: AsRef<str>,\nS2: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`STATUS` command](https://tools.ietf.org/html/rfc3501#section-6.3.10) requests the\n status of the indicated mailbox. It does not change the currently selected mailbox, nor\n does it affect the state of any messages in the queried mailbox (in particular, `status`\n will not cause messages to lose [`Flag::Recent`]).","sig":null,"attributes":[{"value":"/ The [`STATUS` command](https://tools.ietf.org/html/rfc3501#section-6.3.10) requests the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104852,"byte_end":104943,"line_start":1060,"line_end":1060,"column_start":5,"column_end":96}},{"value":"/ status of the indicated mailbox. It does not change the currently selected mailbox, nor","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":104948,"byte_end":105039,"line_start":1061,"line_end":1061,"column_start":5,"column_end":96}},{"value":"/ does it affect the state of any messages in the queried mailbox (in particular, `status`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105044,"byte_end":105136,"line_start":1062,"line_end":1062,"column_start":5,"column_end":97}},{"value":"/ will not cause messages to lose [`Flag::Recent`]).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105141,"byte_end":105195,"line_start":1063,"line_end":1063,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105200,"byte_end":105203,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ `status` provides an alternative to opening a second [`Session`] and using","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105208,"byte_end":105286,"line_start":1065,"line_end":1065,"column_start":5,"column_end":83}},{"value":"/ [`Session::examine`] on a mailbox to query that mailbox's status without deselecting the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105291,"byte_end":105383,"line_start":1066,"line_end":1066,"column_start":5,"column_end":97}},{"value":"/ current mailbox in the first `Session`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105388,"byte_end":105431,"line_start":1067,"line_end":1067,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105436,"byte_end":105439,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Session::list`], `status` is not guaranteed to be fast in its response.  Under","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105444,"byte_end":105535,"line_start":1069,"line_end":1069,"column_start":5,"column_end":96}},{"value":"/ certain circumstances, it can be quite slow.  In some implementations, the server is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105540,"byte_end":105628,"line_start":1070,"line_end":1070,"column_start":5,"column_end":93}},{"value":"/ obliged to open the mailbox read-only internally to obtain certain status information.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105633,"byte_end":105723,"line_start":1071,"line_end":1071,"column_start":5,"column_end":95}},{"value":"/ Also unlike [`Session::list`], `status` does not accept wildcards.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105728,"byte_end":105798,"line_start":1072,"line_end":1072,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105803,"byte_end":105806,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ > Note: `status` is intended to access the status of mailboxes other than the currently","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105811,"byte_end":105902,"line_start":1074,"line_end":1074,"column_start":5,"column_end":96}},{"value":"/ > selected mailbox.  Because `status` can cause the mailbox to be opened internally, and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":105907,"byte_end":105999,"line_start":1075,"line_end":1075,"column_start":5,"column_end":97}},{"value":"/ > because this information is available by other means on the selected mailbox, `status`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106004,"byte_end":106096,"line_start":1076,"line_end":1076,"column_start":5,"column_end":97}},{"value":"/ > SHOULD NOT be used on the currently selected mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106101,"byte_end":106160,"line_start":1077,"line_end":1077,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106165,"byte_end":106168,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ The STATUS command MUST NOT be used as a \"check for new messages in the selected mailbox\"","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106173,"byte_end":106266,"line_start":1079,"line_end":1079,"column_start":5,"column_end":98}},{"value":"/ operation (refer to sections [7](https://tools.ietf.org/html/rfc3501#section-7),","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106271,"byte_end":106355,"line_start":1080,"line_end":1080,"column_start":5,"column_end":89}},{"value":"/ [7.3.1](https://tools.ietf.org/html/rfc3501#section-7.3.1), and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106360,"byte_end":106427,"line_start":1081,"line_end":1081,"column_start":5,"column_end":72}},{"value":"/ [7.3.2](https://tools.ietf.org/html/rfc3501#section-7.3.2) for more information about the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106432,"byte_end":106525,"line_start":1082,"line_end":1082,"column_start":5,"column_end":98}},{"value":"/ proper method for new message checking).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106530,"byte_end":106574,"line_start":1083,"line_end":1083,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106579,"byte_end":106582,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ The currently defined status data items that can be requested are:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106587,"byte_end":106657,"line_start":1085,"line_end":1085,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106662,"byte_end":106665,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/  - `MESSAGES`: The number of messages in the mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106670,"byte_end":106727,"line_start":1087,"line_end":1087,"column_start":5,"column_end":62}},{"value":"/  - `RECENT`: The number of messages with [`Flag::Recent`] set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106732,"byte_end":106798,"line_start":1088,"line_end":1088,"column_start":5,"column_end":71}},{"value":"/  - `UIDNEXT`: The next [`Uid`] of the mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106803,"byte_end":106853,"line_start":1089,"line_end":1089,"column_start":5,"column_end":55}},{"value":"/  - `UIDVALIDITY`: The unique identifier validity value of the mailbox (see [`Uid`]).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106858,"byte_end":106946,"line_start":1090,"line_end":1090,"column_start":5,"column_end":93}},{"value":"/  - `UNSEEN`: The number of messages which do not have [`Flag::Seen`] set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":106951,"byte_end":107028,"line_start":1091,"line_end":1091,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107033,"byte_end":107036,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ `data_items` is a space-separated list enclosed in parentheses.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107041,"byte_end":107108,"line_start":1093,"line_end":1093,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108774,"byte_end":108778,"line_start":1125,"line_end":1125,"column_start":12,"column_end":16},"name":"idle","qualname":"<Session<T>>::idle","value":"fn idle(&mut Self) -> Result<extensions::idle::Handle<, T>>","parent":null,"children":[],"decl_id":null,"docs":" This method returns a handle that lets you use the [`IDLE`\n command](https://tools.ietf.org/html/rfc2177#section-3) to listen for changes to the\n currently selected mailbox.","sig":null,"attributes":[{"value":"/ This method returns a handle that lets you use the [`IDLE`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107530,"byte_end":107592,"line_start":1107,"line_end":1107,"column_start":5,"column_end":67}},{"value":"/ command](https://tools.ietf.org/html/rfc2177#section-3) to listen for changes to the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107597,"byte_end":107685,"line_start":1108,"line_end":1108,"column_start":5,"column_end":93}},{"value":"/ currently selected mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107690,"byte_end":107721,"line_start":1109,"line_end":1109,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107726,"byte_end":107729,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ It's often more desirable to have the server transmit updates to the client in real time.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107734,"byte_end":107827,"line_start":1111,"line_end":1111,"column_start":5,"column_end":98}},{"value":"/ This allows a user to see new mail immediately.  It also helps some real-time applications","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107832,"byte_end":107926,"line_start":1112,"line_end":1112,"column_start":5,"column_end":99}},{"value":"/ based on IMAP, which might otherwise need to poll extremely often (such as every few","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":107931,"byte_end":108019,"line_start":1113,"line_end":1113,"column_start":5,"column_end":93}},{"value":"/ seconds).  While the spec actually does allow a server to push `EXISTS` responses","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108024,"byte_end":108109,"line_start":1114,"line_end":1114,"column_start":5,"column_end":90}},{"value":"/ aysynchronously, a client can't expect this behaviour and must poll.  This method provides","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108114,"byte_end":108208,"line_start":1115,"line_end":1115,"column_start":5,"column_end":99}},{"value":"/ you with such a mechanism.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108213,"byte_end":108243,"line_start":1116,"line_end":1116,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108248,"byte_end":108251,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ `idle` may be used with any server that returns `IDLE` as one of the supported capabilities","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108256,"byte_end":108351,"line_start":1118,"line_end":1118,"column_start":5,"column_end":100}},{"value":"/ (see [`Session::capabilities`]). If the server does not advertise the `IDLE` capability,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108356,"byte_end":108448,"line_start":1119,"line_end":1119,"column_start":5,"column_end":97}},{"value":"/ the client MUST NOT use `idle` and must instead poll for mailbox updates.  In particular,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108453,"byte_end":108546,"line_start":1120,"line_end":1120,"column_start":5,"column_end":98}},{"value":"/ the client MUST continue to be able to accept unsolicited untagged responses to ANY","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108551,"byte_end":108638,"line_start":1121,"line_end":1121,"column_start":5,"column_end":92}},{"value":"/ command, as specified in the base IMAP specification.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108643,"byte_end":108700,"line_start":1122,"line_end":1122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108705,"byte_end":108708,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ See [`extensions::idle::Handle`] for details.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108713,"byte_end":108762,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110150,"byte_end":110156,"line_start":1148,"line_end":1148,"column_start":12,"column_end":18},"name":"append","qualname":"<Session<T>>::append","value":"fn append<S, B>(&mut Self, S, B) -> Result<()> where S: AsRef<str>,\nB: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The [`APPEND` command](https://tools.ietf.org/html/rfc3501#section-6.3.11) appends\n `content` as a new message to the end of the specified destination `mailbox`.  This\n argument SHOULD be in the format of an [RFC-2822](https://tools.ietf.org/html/rfc2822)\n message.","sig":null,"attributes":[{"value":"/ The [`APPEND` command](https://tools.ietf.org/html/rfc3501#section-6.3.11) appends","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108891,"byte_end":108977,"line_start":1129,"line_end":1129,"column_start":5,"column_end":91}},{"value":"/ `content` as a new message to the end of the specified destination `mailbox`.  This","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":108982,"byte_end":109069,"line_start":1130,"line_end":1130,"column_start":5,"column_end":92}},{"value":"/ argument SHOULD be in the format of an [RFC-2822](https://tools.ietf.org/html/rfc2822)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109074,"byte_end":109164,"line_start":1131,"line_end":1131,"column_start":5,"column_end":95}},{"value":"/ message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109169,"byte_end":109181,"line_start":1132,"line_end":1132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109186,"byte_end":109189,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ > Note: There MAY be exceptions, e.g., draft messages, in which required RFC-2822 header","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109194,"byte_end":109286,"line_start":1134,"line_end":1134,"column_start":5,"column_end":97}},{"value":"/ > lines are omitted in the message literal argument to `append`.  The full implications of","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109291,"byte_end":109385,"line_start":1135,"line_end":1135,"column_start":5,"column_end":99}},{"value":"/ > doing so MUST be understood and carefully weighed.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109390,"byte_end":109446,"line_start":1136,"line_end":1136,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109451,"byte_end":109454,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ If the append is unsuccessful for any reason, the mailbox is restored to its state before","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109459,"byte_end":109552,"line_start":1138,"line_end":1138,"column_start":5,"column_end":98}},{"value":"/ the append attempt; no partial appending will happen.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109557,"byte_end":109614,"line_start":1139,"line_end":1139,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109619,"byte_end":109622,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ If the destination `mailbox` does not exist, the server returns an error, and does not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109627,"byte_end":109717,"line_start":1141,"line_end":1141,"column_start":5,"column_end":95}},{"value":"/ automatically create the mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109722,"byte_end":109759,"line_start":1142,"line_end":1142,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109764,"byte_end":109767,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ If the mailbox is currently selected, the normal new message actions will generally occur.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109772,"byte_end":109866,"line_start":1144,"line_end":1144,"column_start":5,"column_end":99}},{"value":"/ Specifically, the server will generally notify the client immediately via an untagged","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109871,"byte_end":109960,"line_start":1145,"line_end":1145,"column_start":5,"column_end":94}},{"value":"/ `EXISTS` response.  If the server does not do so, the client MAY issue a `NOOP` command (or","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":109965,"byte_end":110060,"line_start":1146,"line_end":1146,"column_start":5,"column_end":100}},{"value":"/ failing that, a `CHECK` command) after one or more `APPEND` commands.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110065,"byte_end":110138,"line_start":1147,"line_end":1147,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110927,"byte_end":110944,"line_start":1162,"line_end":1162,"column_start":12,"column_end":29},"name":"append_with_flags","qualname":"<Session<T>>::append_with_flags","value":"fn append_with_flags<S, B>(&mut Self, S, B, &[Flag]) -> Result<()> where\nS: AsRef<str>, B: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The [`APPEND` command](https://tools.ietf.org/html/rfc3501#section-6.3.11) can take\n an optional FLAGS parameter to set the flags on the new message.","sig":null,"attributes":[{"value":"/ The [`APPEND` command](https://tools.ietf.org/html/rfc3501#section-6.3.11) can take","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110304,"byte_end":110391,"line_start":1152,"line_end":1152,"column_start":5,"column_end":92}},{"value":"/ an optional FLAGS parameter to set the flags on the new message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110396,"byte_end":110464,"line_start":1153,"line_end":1153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110469,"byte_end":110472,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ > If a flag parenthesized list is specified, the flags SHOULD be set","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110477,"byte_end":110549,"line_start":1155,"line_end":1155,"column_start":5,"column_end":77}},{"value":"/ > in the resulting message; otherwise, the flag list of the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110554,"byte_end":110617,"line_start":1156,"line_end":1156,"column_start":5,"column_end":68}},{"value":"/ > resulting message is set to empty by default.  In either case, the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110622,"byte_end":110694,"line_start":1157,"line_end":1157,"column_start":5,"column_end":77}},{"value":"/ > Recent flag is also set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110699,"byte_end":110729,"line_start":1158,"line_end":1158,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110734,"byte_end":110737,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ The [`\\Recent` flag](https://tools.ietf.org/html/rfc3501#section-2.3.2) is not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110742,"byte_end":110824,"line_start":1160,"line_end":1160,"column_start":5,"column_end":87}},{"value":"/ allowed as an argument to `APPEND` and will be filtered out if present in `flags`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":110829,"byte_end":110915,"line_start":1161,"line_end":1161,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":112109,"byte_end":112135,"line_start":1187,"line_end":1187,"column_start":12,"column_end":38},"name":"append_with_flags_and_date","qualname":"<Session<T>>::append_with_flags_and_date","value":"fn append_with_flags_and_date<S, B,\nimpl Into<Option<DateTime<FixedOffset>>>>(&mut Self, S, B, &[Flag],\nimpl Into<Option<DateTime<FixedOffset>>>) -> Result<()> where S: AsRef<str>,\nB: AsRef<[u8]>,\nimpl Into<Option<DateTime<FixedOffset>>>: Into<Option<DateTime<FixedOffset>>>","parent":null,"children":[],"decl_id":null,"docs":" The [`APPEND` command](https://tools.ietf.org/html/rfc3501#section-6.3.11) can take\n an optional FLAGS parameter to set the flags on the new message.","sig":null,"attributes":[{"value":"/ The [`APPEND` command](https://tools.ietf.org/html/rfc3501#section-6.3.11) can take","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111168,"byte_end":111255,"line_start":1171,"line_end":1171,"column_start":5,"column_end":92}},{"value":"/ an optional FLAGS parameter to set the flags on the new message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111260,"byte_end":111328,"line_start":1172,"line_end":1172,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111333,"byte_end":111336,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ > If a flag parenthesized list is specified, the flags SHOULD be set","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111341,"byte_end":111413,"line_start":1174,"line_end":1174,"column_start":5,"column_end":77}},{"value":"/ > in the resulting message; otherwise, the flag list of the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111418,"byte_end":111481,"line_start":1175,"line_end":1175,"column_start":5,"column_end":68}},{"value":"/ > resulting message is set to empty by default.  In either case, the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111486,"byte_end":111558,"line_start":1176,"line_end":1176,"column_start":5,"column_end":77}},{"value":"/ > Recent flag is also set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111563,"byte_end":111593,"line_start":1177,"line_end":1177,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111598,"byte_end":111601,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ The [`\\Recent` flag](https://tools.ietf.org/html/rfc3501#section-2.3.2) is not","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111606,"byte_end":111688,"line_start":1179,"line_end":1179,"column_start":5,"column_end":87}},{"value":"/ allowed as an argument to `APPEND` and will be filtered out if present in `flags`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111693,"byte_end":111779,"line_start":1180,"line_end":1180,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111784,"byte_end":111787,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ Pass a date in order to set the date that the message was originally sent.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111792,"byte_end":111870,"line_start":1182,"line_end":1182,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111875,"byte_end":111878,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ > If a date-time is specified, the internal date SHOULD be set in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111883,"byte_end":111952,"line_start":1184,"line_end":1184,"column_start":5,"column_end":74}},{"value":"/ > the resulting message; otherwise, the internal date of the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":111957,"byte_end":112021,"line_start":1185,"line_end":1185,"column_start":5,"column_end":69}},{"value":"/ > resulting message is set to the current date and time by default.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":112026,"byte_end":112097,"line_start":1186,"line_end":1186,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":116332,"byte_end":116338,"line_start":1268,"line_end":1268,"column_start":12,"column_end":18},"name":"search","qualname":"<Session<T>>::search","value":"fn search<S>(&mut Self, S) -> Result<HashSet<Seq>> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" The [`SEARCH` command](https://tools.ietf.org/html/rfc3501#section-6.4.4) searches the\n mailbox for messages that match the given `query`.  `query` consist of one or more search\n keys separated by spaces.  The response from the server contains a listing of [`Seq`]s\n corresponding to those messages that match the searching criteria.","sig":null,"attributes":[{"value":"/ The [`SEARCH` command](https://tools.ietf.org/html/rfc3501#section-6.4.4) searches the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113231,"byte_end":113321,"line_start":1224,"line_end":1224,"column_start":5,"column_end":95}},{"value":"/ mailbox for messages that match the given `query`.  `query` consist of one or more search","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113326,"byte_end":113419,"line_start":1225,"line_end":1225,"column_start":5,"column_end":98}},{"value":"/ keys separated by spaces.  The response from the server contains a listing of [`Seq`]s","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113424,"byte_end":113514,"line_start":1226,"line_end":1226,"column_start":5,"column_end":95}},{"value":"/ corresponding to those messages that match the searching criteria.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113519,"byte_end":113589,"line_start":1227,"line_end":1227,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113594,"byte_end":113597,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ When multiple search keys are specified, the result is the intersection of all the messages","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113602,"byte_end":113697,"line_start":1229,"line_end":1229,"column_start":5,"column_end":100}},{"value":"/ that match those keys.  Or, in other words, only messages that match *all* the keys. For","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113702,"byte_end":113794,"line_start":1230,"line_end":1230,"column_start":5,"column_end":97}},{"value":"/ example, the criteria","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113799,"byte_end":113824,"line_start":1231,"line_end":1231,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113829,"byte_end":113832,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113837,"byte_end":113848,"line_start":1233,"line_end":1233,"column_start":5,"column_end":16}},{"value":"/ DELETED FROM \"SMITH\" SINCE 1-Feb-1994","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113853,"byte_end":113894,"line_start":1234,"line_end":1234,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113899,"byte_end":113906,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113911,"byte_end":113914,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ refers to all deleted messages from Smith that were placed in the mailbox since February 1,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":113919,"byte_end":114014,"line_start":1237,"line_end":1237,"column_start":5,"column_end":100}},{"value":"/ 1994.  A search key can also be a parenthesized list of one or more search keys (e.g., for","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114019,"byte_end":114113,"line_start":1238,"line_end":1238,"column_start":5,"column_end":99}},{"value":"/ use with the `OR` and `NOT` keys).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114118,"byte_end":114156,"line_start":1239,"line_end":1239,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114161,"byte_end":114164,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ In all search keys that use strings, a message matches the key if the string is a substring","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114169,"byte_end":114264,"line_start":1241,"line_end":1241,"column_start":5,"column_end":100}},{"value":"/ of the field.  The matching is case-insensitive.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114269,"byte_end":114321,"line_start":1242,"line_end":1242,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114326,"byte_end":114329,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ Below is a selection of common search keys.  The full list can be found in the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114334,"byte_end":114416,"line_start":1244,"line_end":1244,"column_start":5,"column_end":87}},{"value":"/ specification of the [`SEARCH command`](https://tools.ietf.org/html/rfc3501#section-6.4.4).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114421,"byte_end":114516,"line_start":1245,"line_end":1245,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114521,"byte_end":114524,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/  - `NEW`: Messages that have [`Flag::Recent`] set but not [`Flag::Seen`]. This is functionally equivalent to `(RECENT UNSEEN)`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114529,"byte_end":114660,"line_start":1247,"line_end":1247,"column_start":5,"column_end":136}},{"value":"/  - `OLD`: Messages that do not have [`Flag::Recent`] set.  This is functionally equivalent to `NOT RECENT` (as opposed to `NOT NEW`).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114665,"byte_end":114802,"line_start":1248,"line_end":1248,"column_start":5,"column_end":142}},{"value":"/  - `RECENT`: Messages that have [`Flag::Recent`] set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114807,"byte_end":114864,"line_start":1249,"line_end":1249,"column_start":5,"column_end":62}},{"value":"/  - `ANSWERED`: Messages with [`Flag::Answered`] set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114869,"byte_end":114925,"line_start":1250,"line_end":1250,"column_start":5,"column_end":61}},{"value":"/  - `DELETED`: Messages with [`Flag::Deleted`] set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114930,"byte_end":114984,"line_start":1251,"line_end":1251,"column_start":5,"column_end":59}},{"value":"/  - `DRAFT`: Messages with [`Flag::Draft`] set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":114989,"byte_end":115039,"line_start":1252,"line_end":1252,"column_start":5,"column_end":55}},{"value":"/  - `FLAGGED`: Messages with [`Flag::Flagged`] set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115044,"byte_end":115098,"line_start":1253,"line_end":1253,"column_start":5,"column_end":59}},{"value":"/  - `SEEN`: Messages that have [`Flag::Seen`] set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115103,"byte_end":115156,"line_start":1254,"line_end":1254,"column_start":5,"column_end":58}},{"value":"/  - `<sequence set>`: Messages with message sequence numbers corresponding to the specified message sequence number set.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115161,"byte_end":115284,"line_start":1255,"line_end":1255,"column_start":5,"column_end":128}},{"value":"/  - `UID <sequence set>`: Messages with [`Uid`] corresponding to the specified unique identifier set.  Sequence set ranges are permitted.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115289,"byte_end":115429,"line_start":1256,"line_end":1256,"column_start":5,"column_end":145}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115434,"byte_end":115437,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/  - `SUBJECT <string>`: Messages that contain the specified string in the envelope structure's `SUBJECT` field.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115442,"byte_end":115556,"line_start":1258,"line_end":1258,"column_start":5,"column_end":119}},{"value":"/  - `BODY <string>`: Messages that contain the specified string in the body of the message.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115561,"byte_end":115655,"line_start":1259,"line_end":1259,"column_start":5,"column_end":99}},{"value":"/  - `FROM <string>`: Messages that contain the specified string in the envelope structure's `FROM` field.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115660,"byte_end":115768,"line_start":1260,"line_end":1260,"column_start":5,"column_end":113}},{"value":"/  - `TO <string>`: Messages that contain the specified string in the envelope structure's `TO` field.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115773,"byte_end":115877,"line_start":1261,"line_end":1261,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115882,"byte_end":115885,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/  - `NOT <search-key>`: Messages that do not match the specified search key.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115890,"byte_end":115969,"line_start":1263,"line_end":1263,"column_start":5,"column_end":84}},{"value":"/  - `OR <search-key1> <search-key2>`: Messages that match either search key.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":115974,"byte_end":116053,"line_start":1264,"line_end":1264,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":116058,"byte_end":116061,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/  - `BEFORE <date>`: Messages whose internal date (disregarding time and timezone) is earlier than the specified date.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":116066,"byte_end":116187,"line_start":1266,"line_end":1266,"column_start":5,"column_end":126}},{"value":"/  - `SINCE <date>`: Messages whose internal date (disregarding time and timezone) is within or later than the specified date.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":116192,"byte_end":116320,"line_start":1267,"line_end":1267,"column_start":5,"column_end":133}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":116795,"byte_end":116805,"line_start":1276,"line_end":1276,"column_start":12,"column_end":22},"name":"uid_search","qualname":"<Session<T>>::uid_search","value":"fn uid_search<S>(&mut Self, S) -> Result<HashSet<Uid>> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`Session::search`], except that the returned identifiers\n are [`Uid`] instead of [`Seq`]. See also the [`UID`\n command](https://tools.ietf.org/html/rfc3501#section-6.4.8).\n","sig":null,"attributes":[{"value":"/ Equivalent to [`Session::search`], except that the returned identifiers","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":116579,"byte_end":116654,"line_start":1273,"line_end":1273,"column_start":5,"column_end":80}},{"value":"/ are [`Uid`] instead of [`Seq`]. See also the [`UID`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":116659,"byte_end":116714,"line_start":1274,"line_end":1274,"column_start":5,"column_end":60}},{"value":"/ command](https://tools.ietf.org/html/rfc3501#section-6.4.8).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":116719,"byte_end":116783,"line_start":1275,"line_end":1275,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117199,"byte_end":117223,"line_start":1283,"line_end":1283,"column_start":12,"column_end":36},"name":"run_command_and_check_ok","qualname":"<Session<T>>::run_command_and_check_ok","value":"fn run_command_and_check_ok<S>(&mut Self, S) -> Result<()> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Runs a command and checks if it returns OK.\n","sig":null,"attributes":[{"value":"/ Runs a command and checks if it returns OK.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117140,"byte_end":117187,"line_start":1282,"line_end":1282,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117399,"byte_end":117410,"line_start":1288,"line_end":1288,"column_start":12,"column_end":23},"name":"run_command","qualname":"<Session<T>>::run_command","value":"fn run_command<S>(&mut Self, S) -> Result<()> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Runs any command passed to it.\n","sig":null,"attributes":[{"value":"/ Runs any command passed to it.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117353,"byte_end":117387,"line_start":1287,"line_end":1287,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117995,"byte_end":118024,"line_start":1298,"line_end":1298,"column_start":12,"column_end":41},"name":"run_command_and_read_response","qualname":"<Session<T>>::run_command_and_read_response","value":"fn run_command_and_read_response<S>(&mut Self, S) -> Result<Vec<u8>> where\nS: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Run a raw IMAP command and read back its response.","sig":null,"attributes":[{"value":"/ Run a raw IMAP command and read back its response.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117542,"byte_end":117596,"line_start":1292,"line_end":1292,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117601,"byte_end":117604,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ Note that the server *is* allowed to unilaterally send things to the client for messages in","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117609,"byte_end":117704,"line_start":1294,"line_end":1294,"column_start":5,"column_end":100}},{"value":"/ a selected mailbox whose status has changed. See the note on [unilateral server responses","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117709,"byte_end":117802,"line_start":1295,"line_end":1295,"column_start":5,"column_end":98}},{"value":"/ in RFC 3501](https://tools.ietf.org/html/rfc3501#section-7). This means that you *may* see","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117807,"byte_end":117901,"line_start":1296,"line_end":1296,"column_start":5,"column_end":99}},{"value":"/ additional untagged `RECENT`, `EXISTS`, `FETCH`, and `EXPUNGE` responses!","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":117906,"byte_end":117983,"line_start":1297,"line_end":1297,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":118420,"byte_end":118433,"line_start":1311,"line_end":1311,"column_start":12,"column_end":25},"name":"read_greeting","qualname":"<Connection<T>>::read_greeting","value":"fn read_greeting(&mut Self) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Read the greeting from the connection. Needs to be done after `connect`ing.","sig":null,"attributes":[{"value":"/ Read the greeting from the connection. Needs to be done after `connect`ing.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":118255,"byte_end":118334,"line_start":1308,"line_end":1308,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":118339,"byte_end":118342,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ Panics if called more than once on the same `Connection`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":118347,"byte_end":118408,"line_start":1310,"line_end":1310,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":865},{"krate":0,"index":893},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":895},{"krate":0,"index":910},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":608},{"krate":0,"index":610}],"decl_id":null,"docs":" IMAP error types.\n","sig":null,"attributes":[{"value":"/ IMAP error types.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":142391,"byte_end":142412,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":142887,"byte_end":142893,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenience wrapper around `Result` for `imap::Error`.\n","sig":null,"attributes":[{"value":"/ A convenience wrapper around `Result` for `imap::Error`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":142817,"byte_end":142877,"line_start":19,"line_end":19,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143106,"byte_end":143108,"line_start":26,"line_end":26,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(IoError)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" An `io::Error` that occurred while trying to read or write to a network stream.\n","sig":null,"attributes":[{"value":"/ An `io::Error` that occurred while trying to read or write to a network stream.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143018,"byte_end":143101,"line_start":25,"line_end":25,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143109,"byte_end":143116,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"0","qualname":"::error::Error::Io::0","value":"std::io::Error","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143224,"byte_end":143236,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"TlsHandshake","qualname":"::error::Error::TlsHandshake","value":"Error::TlsHandshake(TlsHandshakeError<TcpStream>)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" An error from the `native_tls` library during the TLS handshake.\n","sig":null,"attributes":[{"value":"/ An error from the `native_tls` library during the TLS handshake.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143123,"byte_end":143191,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143196,"byte_end":143219,"line_start":28,"line_end":28,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143237,"byte_end":143265,"line_start":29,"line_end":29,"column_start":18,"column_end":46},"name":"0","qualname":"::error::Error::TlsHandshake::0","value":"native_tls::HandshakeError<std::net::TcpStream>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143374,"byte_end":143377,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"Tls","qualname":"::error::Error::Tls","value":"Error::Tls(TlsError)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" An error from the `native_tls` library while managing the socket.\n","sig":null,"attributes":[{"value":"/ An error from the `native_tls` library while managing the socket.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143272,"byte_end":143341,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"cfg(feature = \"tls\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143346,"byte_end":143369,"line_start":31,"line_end":31,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143378,"byte_end":143386,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"name":"0","qualname":"::error::Error::Tls::0","value":"native_tls::Error","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143438,"byte_end":143441,"line_start":34,"line_end":34,"column_start":5,"column_end":8},"name":"Bad","qualname":"::error::Error::Bad","value":"Error::Bad(String)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" A BAD response from the IMAP server.\n","sig":null,"attributes":[{"value":"/ A BAD response from the IMAP server.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143393,"byte_end":143433,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143442,"byte_end":143448,"line_start":34,"line_end":34,"column_start":9,"column_end":15},"name":"0","qualname":"::error::Error::Bad::0","value":"std::string::String","parent":{"krate":0,"index":875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143499,"byte_end":143501,"line_start":36,"line_end":36,"column_start":5,"column_end":7},"name":"No","qualname":"::error::Error::No","value":"Error::No(String)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" A NO response from the IMAP server.\n","sig":null,"attributes":[{"value":"/ A NO response from the IMAP server.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143455,"byte_end":143494,"line_start":35,"line_end":35,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143502,"byte_end":143508,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"0","qualname":"::error::Error::No::0","value":"std::string::String","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143567,"byte_end":143581,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::error::Error::ConnectionLost","value":"Error::ConnectionLost","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" The connection was terminated unexpectedly.\n","sig":null,"attributes":[{"value":"/ The connection was terminated unexpectedly.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143515,"byte_end":143562,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143628,"byte_end":143633,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Parse","qualname":"::error::Error::Parse","value":"Error::Parse(ParseError)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" Error parsing a server response.\n","sig":null,"attributes":[{"value":"/ Error parsing a server response.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143587,"byte_end":143623,"line_start":39,"line_end":39,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143634,"byte_end":143644,"line_start":40,"line_end":40,"column_start":11,"column_end":21},"name":"0","qualname":"::error::Error::Parse::0","value":"error::ParseError","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143762,"byte_end":143770,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"Validate","qualname":"::error::Error::Validate","value":"Error::Validate(ValidateError)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" Command inputs were not valid [IMAP\n strings](https://tools.ietf.org/html/rfc3501#section-4.3).\n","sig":null,"attributes":[{"value":"/ Command inputs were not valid [IMAP","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143651,"byte_end":143690,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ strings](https://tools.ietf.org/html/rfc3501#section-4.3).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143695,"byte_end":143757,"line_start":42,"line_end":42,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143771,"byte_end":143784,"line_start":43,"line_end":43,"column_start":14,"column_end":27},"name":"0","qualname":"::error::Error::Validate::0","value":"error::ValidateError","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143826,"byte_end":143832,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Append","qualname":"::error::Error::Append","value":"Error::Append","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" Error appending an e-mail.\n","sig":null,"attributes":[{"value":"/ Error appending an e-mail.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143791,"byte_end":143821,"line_start":44,"line_end":44,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143857,"byte_end":143872,"line_start":47,"line_end":47,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143006,"byte_end":143011,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    Io(IoError),\n    TlsHandshake(TlsHandshakeError<TcpStream>),\n    Tls(TlsError),\n    Bad(String),\n    No(String),\n    ConnectionLost,\n    Parse(ParseError),\n    Validate(ValidateError),\n    Append,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":891}],"decl_id":null,"docs":" A set of errors that can occur in the IMAP client\n","sig":null,"attributes":[{"value":"/ A set of errors that can occur in the IMAP client","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":142926,"byte_end":142979,"line_start":22,"line_end":22,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143915,"byte_end":143919,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(IoError) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144018,"byte_end":144022,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(ParseError) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144131,"byte_end":144135,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(BufError<T>) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144287,"byte_end":144291,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(TlsHandshakeError<TcpStream>) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144443,"byte_end":144447,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(TlsError) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144554,"byte_end":144558,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(Response) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144702,"byte_end":144705,"line_start":89,"line_end":89,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":145587,"byte_end":145598,"line_start":109,"line_end":109,"column_start":8,"column_end":19},"name":"description","qualname":"<Error as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2559},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":145559,"byte_end":145579,"line_start":108,"line_end":108,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146257,"byte_end":146262,"line_start":126,"line_end":126,"column_start":8,"column_end":13},"name":"cause","qualname":"<Error as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&dyn StdError>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146825,"byte_end":146832,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::error::ParseError::Invalid","value":"ParseError::Invalid(Vec<u8>)","parent":{"krate":0,"index":895},"children":[],"decl_id":null,"docs":" Indicates an error parsing the status response. Such as OK, NO, and BAD.\n","sig":null,"attributes":[{"value":"/ Indicates an error parsing the status response. Such as OK, NO, and BAD.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146744,"byte_end":146820,"line_start":142,"line_end":142,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146833,"byte_end":146840,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"name":"0","qualname":"::error::ParseError::Invalid::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146895,"byte_end":146905,"line_start":145,"line_end":145,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::error::ParseError::Unexpected","value":"ParseError::Unexpected(String)","parent":{"krate":0,"index":895},"children":[],"decl_id":null,"docs":" An unexpected response was encountered.\n","sig":null,"attributes":[{"value":"/ An unexpected response was encountered.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146847,"byte_end":146890,"line_start":144,"line_end":144,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146906,"byte_end":146912,"line_start":145,"line_end":145,"column_start":16,"column_end":22},"name":"0","qualname":"::error::ParseError::Unexpected::0","value":"std::string::String","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147002,"byte_end":147016,"line_start":147,"line_end":147,"column_start":5,"column_end":19},"name":"Authentication","qualname":"::error::ParseError::Authentication","value":"ParseError::Authentication(String, Option<DecodeError>)","parent":{"krate":0,"index":895},"children":[],"decl_id":null,"docs":" The client could not find or decode the server's authentication challenge.\n","sig":null,"attributes":[{"value":"/ The client could not find or decode the server's authentication challenge.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146919,"byte_end":146997,"line_start":146,"line_end":146,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147017,"byte_end":147023,"line_start":147,"line_end":147,"column_start":20,"column_end":26},"name":"0","qualname":"::error::ParseError::Authentication::0","value":"std::string::String","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147025,"byte_end":147044,"line_start":147,"line_end":147,"column_start":28,"column_end":47},"name":"1","qualname":"::error::ParseError::Authentication::1","value":"std::option::Option<base64::DecodeError>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147112,"byte_end":147123,"line_start":149,"line_end":149,"column_start":5,"column_end":16},"name":"DataNotUtf8","qualname":"::error::ParseError::DataNotUtf8","value":"ParseError::DataNotUtf8(Vec<u8>, Utf8Error)","parent":{"krate":0,"index":895},"children":[],"decl_id":null,"docs":" The client received data that was not UTF-8 encoded.\n","sig":null,"attributes":[{"value":"/ The client received data that was not UTF-8 encoded.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147051,"byte_end":147107,"line_start":148,"line_end":148,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147124,"byte_end":147131,"line_start":149,"line_end":149,"column_start":17,"column_end":24},"name":"0","qualname":"::error::ParseError::DataNotUtf8::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147133,"byte_end":147142,"line_start":149,"line_end":149,"column_start":26,"column_end":35},"name":"1","qualname":"::error::ParseError::DataNotUtf8::1","value":"std::str::Utf8Error","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146727,"byte_end":146737,"line_start":141,"line_end":141,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::error::ParseError","value":"enum ParseError {\n    Invalid(Vec<u8>),\n    Unexpected(String),\n    Authentication(String, Option<DecodeError>),\n    DataNotUtf8(Vec<u8>, Utf8Error),\n}","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":906}],"decl_id":null,"docs":" An error occured while trying to parse a server response.\n","sig":null,"attributes":[{"value":"/ An error occured while trying to parse a server response.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":146639,"byte_end":146700,"line_start":139,"line_end":139,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147190,"byte_end":147193,"line_start":153,"line_end":153,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147737,"byte_end":147748,"line_start":166,"line_end":166,"column_start":8,"column_end":19},"name":"description","qualname":"<ParseError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2559},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148142,"byte_end":148147,"line_start":175,"line_end":175,"column_start":8,"column_end":13},"name":"cause","qualname":"<ParseError as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&dyn StdError>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148451,"byte_end":148464,"line_start":186,"line_end":186,"column_start":12,"column_end":25},"name":"ValidateError","qualname":"::error::ValidateError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An [invalid character](https://tools.ietf.org/html/rfc3501#section-4.3) was found in an input\n string.\n","sig":null,"attributes":[{"value":"/ An [invalid character](https://tools.ietf.org/html/rfc3501#section-4.3) was found in an input","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148313,"byte_end":148410,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ string.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148411,"byte_end":148422,"line_start":184,"line_end":184,"column_start":1,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148465,"byte_end":148473,"line_start":186,"line_end":186,"column_start":26,"column_end":34},"name":"0","qualname":"::error::ValidateError::0","value":"char","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148522,"byte_end":148525,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ValidateError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148774,"byte_end":148785,"line_start":196,"line_end":196,"column_start":8,"column_end":19},"name":"description","qualname":"<ValidateError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2559},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148854,"byte_end":148859,"line_start":200,"line_end":200,"column_start":8,"column_end":13},"name":"cause","qualname":"<ValidateError as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&dyn StdError>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extensions","qualname":"::extensions","value":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\mod.rs","parent":null,"children":[{"krate":0,"index":621}],"decl_id":null,"docs":" Implementations of various IMAP extensions.\n","sig":null,"attributes":[{"value":"/ Implementations of various IMAP extensions.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\mod.rs","byte_start":148916,"byte_end":148963,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"idle","qualname":"::extensions::idle","value":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":917},{"krate":0,"index":923},{"krate":0,"index":927},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":664},{"krate":0,"index":674},{"krate":0,"index":678},{"krate":0,"index":681}],"decl_id":null,"docs":" Adds support for the IMAP IDLE command specificed in [RFC\n 2177](https://tools.ietf.org/html/rfc2177).\n","sig":null,"attributes":[{"value":"/ Adds support for the IMAP IDLE command specificed in [RFC","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":148979,"byte_end":149040,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/ 2177](https://tools.ietf.org/html/rfc2177).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149041,"byte_end":149088,"line_start":2,"line_end":2,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150408,"byte_end":150414,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Handle","qualname":"::extensions::idle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922}],"decl_id":null,"docs":" `Handle` allows a client to block waiting for changes to the remote mailbox.","sig":null,"attributes":[{"value":"/ `Handle` allows a client to block waiting for changes to the remote mailbox.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149289,"byte_end":149369,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149370,"byte_end":149373,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The handle blocks using the [`IDLE` command](https://tools.ietf.org/html/rfc2177#section-3)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149374,"byte_end":149469,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ specificed in [RFC 2177](https://tools.ietf.org/html/rfc2177) until the underlying server state","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149470,"byte_end":149569,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ changes in some way. While idling does inform the client what changes happened on the server,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149570,"byte_end":149667,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ this implementation will currently just block until _anything_ changes, and then notify the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149668,"byte_end":149763,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149764,"byte_end":149767,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Note that the server MAY consider a client inactive if it has an IDLE command running, and if","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149768,"byte_end":149865,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ such a server has an inactivity timeout it MAY log the client off implicitly at the end of its","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149866,"byte_end":149964,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ timeout period.  Because of that, clients using IDLE are advised to terminate the IDLE and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":149965,"byte_end":150059,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ re-issue it at least every 29 minutes to avoid being logged off. [`Handle::wait_keepalive`]","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150060,"byte_end":150155,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ does this. This still allows a client to receive immediate mailbox updates even though it need","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150156,"byte_end":150254,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ only \"poll\" at half hour intervals.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150255,"byte_end":150294,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150295,"byte_end":150298,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ As long as a [`Handle`] is active, the mailbox cannot be otherwise accessed.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150299,"byte_end":150379,"line_start":26,"line_end":26,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150642,"byte_end":150650,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"TimedOut","qualname":"::extensions::idle::WaitOutcome::TimedOut","value":"WaitOutcome::TimedOut","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" The wait timed out\n","sig":null,"attributes":[{"value":"/ The wait timed out","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150615,"byte_end":150637,"line_start":37,"line_end":37,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150689,"byte_end":150703,"line_start":40,"line_end":40,"column_start":5,"column_end":19},"name":"MailboxChanged","qualname":"::extensions::idle::WaitOutcome::MailboxChanged","value":"WaitOutcome::MailboxChanged","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" The mailbox was modified\n","sig":null,"attributes":[{"value":"/ The mailbox was modified","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150656,"byte_end":150684,"line_start":39,"line_end":39,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150597,"byte_end":150608,"line_start":36,"line_end":36,"column_start":10,"column_end":21},"name":"WaitOutcome","qualname":"::extensions::idle::WaitOutcome","value":"enum WaitOutcome { TimedOut, MailboxChanged, }","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":930}],"decl_id":null,"docs":" The result of a wait on a [`Handle`]\n","sig":null,"attributes":[{"value":"/ The result of a wait on a [`Handle`]","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150515,"byte_end":150555,"line_start":34,"line_end":34,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150950,"byte_end":150964,"line_start":48,"line_end":48,"column_start":11,"column_end":25},"name":"SetReadTimeout","qualname":"::extensions::idle::SetReadTimeout","value":"SetReadTimeout","parent":null,"children":[{"krate":0,"index":652}],"decl_id":null,"docs":" Must be implemented for a transport in order for a `Session` using that transport to support\n operations with timeouts.","sig":null,"attributes":[{"value":"/ Must be implemented for a transport in order for a `Session` using that transport to support","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150708,"byte_end":150804,"line_start":43,"line_end":43,"column_start":1,"column_end":97}},{"value":"/ operations with timeouts.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150805,"byte_end":150834,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150835,"byte_end":150838,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Examples of where this is useful is for `Handle::wait_keepalive` and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150839,"byte_end":150911,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ `Handle::wait_timeout`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150912,"byte_end":150939,"line_start":47,"line_end":47,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":151179,"byte_end":151195,"line_start":54,"line_end":54,"column_start":8,"column_end":24},"name":"set_read_timeout","qualname":"::extensions::idle::SetReadTimeout::set_read_timeout","value":"fn set_read_timeout(&mut Self, Option<Duration>) -> Result<()>","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" Set the timeout for subsequent reads to the given one.","sig":null,"attributes":[{"value":"/ Set the timeout for subsequent reads to the given one.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":150971,"byte_end":151029,"line_start":49,"line_end":49,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":151034,"byte_end":151037,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If `timeout` is `None`, the read timeout should be removed.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":151042,"byte_end":151105,"line_start":51,"line_end":51,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":151110,"byte_end":151113,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ See also `std::net::TcpStream::set_read_timeout`.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":151118,"byte_end":151171,"line_start":53,"line_end":53,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":153670,"byte_end":153674,"line_start":132,"line_end":132,"column_start":12,"column_end":16},"name":"wait","qualname":"<Handle>::wait","value":"fn wait(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Block until the selected mailbox changes.\n","sig":null,"attributes":[{"value":"/ Block until the selected mailbox changes.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":153613,"byte_end":153658,"line_start":131,"line_end":131,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":153980,"byte_end":153993,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<Handle>::set_keepalive","value":"fn set_keepalive(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Set the keep-alive interval to use when `wait_keepalive` is called.","sig":null,"attributes":[{"value":"/ Set the keep-alive interval to use when `wait_keepalive` is called.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":153820,"byte_end":153891,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":153896,"byte_end":153899,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The interval defaults to 29 minutes as dictated by RFC 2177.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":153904,"byte_end":153968,"line_start":140,"line_end":140,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154524,"byte_end":154538,"line_start":153,"line_end":153,"column_start":12,"column_end":26},"name":"wait_keepalive","qualname":"<Handle>::wait_keepalive","value":"fn wait_keepalive(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Block until the selected mailbox changes.","sig":null,"attributes":[{"value":"/ Block until the selected mailbox changes.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154073,"byte_end":154118,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154123,"byte_end":154126,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`Handle::wait`] in that it will periodically refresh the IDLE","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154131,"byte_end":154222,"line_start":147,"line_end":147,"column_start":5,"column_end":96}},{"value":"/ connection, to prevent the server from timing out our connection. The keepalive interval is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154227,"byte_end":154322,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ set to 29 minutes by default, as dictated by RFC 2177, but can be changed using","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154327,"byte_end":154410,"line_start":149,"line_end":149,"column_start":5,"column_end":88}},{"value":"/ [`Handle::set_keepalive`].","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154415,"byte_end":154445,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154450,"byte_end":154453,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This is the recommended method to use for waiting.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":154458,"byte_end":154512,"line_start":152,"line_end":152,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":155359,"byte_end":155371,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"wait_timeout","qualname":"<Handle>::wait_timeout","value":"fn wait_timeout(Self, Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Block until the selected mailbox changes, or until the given amount of time has expired.\n","sig":null,"attributes":[{"value":"/ Block until the selected mailbox changes, or until the given amount of time has expired.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":155197,"byte_end":155289,"line_start":165,"line_end":165,"column_start":5,"column_end":97}},{"value":"deprecated(note = \"use wait_with_timeout instead\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":155294,"byte_end":155347,"line_start":166,"line_end":166,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":155580,"byte_end":155597,"line_start":172,"line_end":172,"column_start":12,"column_end":29},"name":"wait_with_timeout","qualname":"<Handle>::wait_with_timeout","value":"fn wait_with_timeout(Self, Duration) -> Result<WaitOutcome>","parent":null,"children":[],"decl_id":null,"docs":" Block until the selected mailbox changes, or until the given amount of time has expired.\n","sig":null,"attributes":[{"value":"/ Block until the selected mailbox changes, or until the given amount of time has expired.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":155476,"byte_end":155568,"line_start":171,"line_end":171,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156103,"byte_end":156107,"line_start":188,"line_end":188,"column_start":8,"column_end":12},"name":"drop","qualname":"<Handle as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156289,"byte_end":156305,"line_start":195,"line_end":195,"column_start":8,"column_end":24},"name":"set_read_timeout","qualname":"<TcpStream as extensions::idle::SetReadTimeout>::set_read_timeout","value":"fn set_read_timeout(&mut Self, Option<Duration>) -> Result<()>","parent":{"krate":0,"index":651},"children":[],"decl_id":{"krate":0,"index":652},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156521,"byte_end":156537,"line_start":202,"line_end":202,"column_start":8,"column_end":24},"name":"set_read_timeout","qualname":"<TlsStream<TcpStream> as extensions::idle::SetReadTimeout>::set_read_timeout","value":"fn set_read_timeout(&mut Self, Option<Duration>) -> Result<()>","parent":{"krate":0,"index":651},"children":[],"decl_id":{"krate":0,"index":652},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31509,"byte_end":31513,"line_start":157,"line_end":157,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31974,"byte_end":31978,"line_start":172,"line_end":172,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":32569,"byte_end":32573,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":32774,"byte_end":32778,"line_start":197,"line_end":197,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42496,"byte_end":42503,"line_start":40,"line_end":40,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42799,"byte_end":42806,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44825,"byte_end":44830,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50779,"byte_end":50792,"line_start":37,"line_end":37,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51169,"byte_end":51182,"line_start":49,"line_end":49,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51401,"byte_end":51414,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51614,"byte_end":51618,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54468,"byte_end":54480,"line_start":39,"line_end":39,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":37061,"byte_end":37069,"line_start":291,"line_end":291,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":38850,"byte_end":38858,"line_start":336,"line_end":336,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39049,"byte_end":39057,"line_start":346,"line_end":346,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39164,"byte_end":39172,"line_start":351,"line_end":351,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39239,"byte_end":39247,"line_start":354,"line_end":354,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39708,"byte_end":39716,"line_start":371,"line_end":371,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39869,"byte_end":39877,"line_start":378,"line_end":378,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":40022,"byte_end":40030,"line_start":385,"line_end":385,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":40180,"byte_end":40188,"line_start":390,"line_end":390,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":56974,"byte_end":56980,"line_start":35,"line_end":35,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61613,"byte_end":61619,"line_start":148,"line_end":148,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61762,"byte_end":61768,"line_start":156,"line_end":156,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61890,"byte_end":61897,"line_start":162,"line_end":162,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62040,"byte_end":62047,"line_start":170,"line_end":170,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":64673,"byte_end":64679,"line_start":257,"line_end":257,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66035,"byte_end":66041,"line_start":295,"line_end":295,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":73383,"byte_end":73390,"line_start":492,"line_end":492,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":435},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":466},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":118235,"byte_end":118245,"line_start":1307,"line_end":1307,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":541},{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143900,"byte_end":143905,"line_start":50,"line_end":50,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144003,"byte_end":144008,"line_start":56,"line_end":56,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144116,"byte_end":144121,"line_start":62,"line_end":62,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144272,"byte_end":144277,"line_start":69,"line_end":69,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144428,"byte_end":144433,"line_start":76,"line_end":76,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144539,"byte_end":144544,"line_start":82,"line_end":82,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144687,"byte_end":144692,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":145547,"byte_end":145552,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147170,"byte_end":147180,"line_start":152,"line_end":152,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147717,"byte_end":147727,"line_start":165,"line_end":165,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148499,"byte_end":148512,"line_start":188,"line_end":188,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148751,"byte_end":148764,"line_start":195,"line_end":195,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":151283,"byte_end":151289,"line_start":57,"line_end":57,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":153800,"byte_end":153806,"line_start":137,"line_end":137,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156080,"byte_end":156086,"line_start":187,"line_end":187,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156270,"byte_end":156279,"line_start":194,"line_end":194,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156491,"byte_end":156500,"line_start":201,"line_end":201,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3381,"byte_end":3386,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":73}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3501,"byte_end":3506,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":548}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\lib.rs","byte_start":3549,"byte_end":3559,"line_start":92,"line_end":92,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":620}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\mod.rs","byte_start":148972,"byte_end":148976,"line_start":2,"line_end":2,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":621}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31509,"byte_end":31513,"line_start":157,"line_end":157,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":31974,"byte_end":31978,"line_start":172,"line_end":172,"column_start":27,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":695},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":32569,"byte_end":32573,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":695},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":32774,"byte_end":32778,"line_start":197,"line_end":197,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":695},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42496,"byte_end":42503,"line_start":40,"line_end":40,"column_start":18,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mailbox.rs","byte_start":42799,"byte_end":42806,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\fetch.rs","byte_start":44825,"byte_end":44830,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":50779,"byte_end":50792,"line_start":37,"line_end":37,"column_start":6,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51169,"byte_end":51182,"line_start":49,"line_end":49,"column_start":27,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51401,"byte_end":51414,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\name.rs","byte_start":51614,"byte_end":51618,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\capabilities.rs","byte_start":54468,"byte_end":54480,"line_start":39,"line_end":39,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":37061,"byte_end":37069,"line_start":291,"line_end":291,"column_start":9,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":38850,"byte_end":38858,"line_start":336,"line_end":336,"column_start":19,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":3369}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39049,"byte_end":39057,"line_start":346,"line_end":346,"column_start":34,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39164,"byte_end":39172,"line_start":351,"line_end":351,"column_start":20,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":2807}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39239,"byte_end":39247,"line_start":354,"line_end":354,"column_start":36,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39708,"byte_end":39716,"line_start":371,"line_end":371,"column_start":22,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":2838}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":39869,"byte_end":39877,"line_start":378,"line_end":378,"column_start":24,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":10120}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":40022,"byte_end":40030,"line_start":385,"line_end":385,"column_start":40,"column_end":48},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\types\\mod.rs","byte_start":40180,"byte_end":40188,"line_start":390,"line_end":390,"column_start":36,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":56974,"byte_end":56980,"line_start":35,"line_end":35,"column_start":26,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":46936},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61613,"byte_end":61619,"line_start":148,"line_end":148,"column_start":33,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":3369}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61762,"byte_end":61768,"line_start":156,"line_end":156,"column_start":36,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":3382}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":61890,"byte_end":61897,"line_start":162,"line_end":162,"column_start":33,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":3369}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":62040,"byte_end":62047,"line_start":170,"line_end":170,"column_start":36,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":3382}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":64673,"byte_end":64679,"line_start":257,"line_end":257,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":66035,"byte_end":66041,"line_start":295,"line_end":295,"column_start":23,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":73383,"byte_end":73390,"line_start":492,"line_end":492,"column_start":23,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\client.rs","byte_start":118235,"byte_end":118245,"line_start":1307,"line_end":1307,"column_start":23,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":143900,"byte_end":143905,"line_start":50,"line_end":50,"column_start":24,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144003,"byte_end":144008,"line_start":56,"line_end":56,"column_start":27,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144116,"byte_end":144121,"line_start":62,"line_end":62,"column_start":31,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144272,"byte_end":144277,"line_start":69,"line_end":69,"column_start":45,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144428,"byte_end":144433,"line_start":76,"line_end":76,"column_start":25,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144539,"byte_end":144544,"line_start":82,"line_end":82,"column_start":33,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":144687,"byte_end":144692,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":145547,"byte_end":145552,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":865},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147170,"byte_end":147180,"line_start":152,"line_end":152,"column_start":23,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":895},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":147717,"byte_end":147727,"line_start":165,"line_end":165,"column_start":19,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":895},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148499,"byte_end":148512,"line_start":188,"line_end":188,"column_start":23,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\error.rs","byte_start":148751,"byte_end":148764,"line_start":195,"line_end":195,"column_start":19,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":912},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":151283,"byte_end":151289,"line_start":57,"line_end":57,"column_start":32,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":153800,"byte_end":153806,"line_start":137,"line_end":137,"column_start":49,"column_end":55},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156080,"byte_end":156086,"line_start":187,"line_end":187,"column_start":41,"column_end":47},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":917},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156270,"byte_end":156279,"line_start":194,"line_end":194,"column_start":29,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":5251},"to":{"krate":0,"index":651}},{"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\imap-2.4.1\\src\\extensions\\idle.rs","byte_start":156491,"byte_end":156500,"line_start":201,"line_end":201,"column_start":29,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":39,"index":273},"to":{"krate":0,"index":651}}]}
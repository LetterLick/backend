{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1","program":"C:\\Users\\Thomas\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","lexical","--edition=2018","C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"floats\"","--cfg","feature=\"integers\"","--cfg","feature=\"parse\"","--cfg","feature=\"parse-floats\"","--cfg","feature=\"parse-integers\"","--cfg","feature=\"std\"","--cfg","feature=\"write\"","--cfg","feature=\"write-floats\"","--cfg","feature=\"write-integers\"","-C","metadata=a70fb03825101036","-C","extra-filename=-a70fb03825101036","--out-dir","c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps","--extern","lexical_core=c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\liblexical_core-76debe88e8acf8e6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Thomas\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Thomas\\Desktop\\Rust-Lang\\backend\\desktop_backend\\target\\rls\\debug\\deps\\liblexical-a70fb03825101036.rmeta"},"prelude":{"crate_id":{"name":"lexical","disambiguator":[7940966851189359467,0]},"crate_root":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src","external_crates":[{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3561128201319338316,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17201970810512768215,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8471725510333066277,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1408606271729991968,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2378155515347626656,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[15381069245071800192,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14657119252105582078,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5606621638900099391,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16084551100949841811,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11593403043630756628,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[5605722866180288093,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17967756895644667980,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11526805763323257120,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[8316923096797308930,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7495428626639288171,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":16,"id":{"name":"lexical_core","disambiguator":[3553594142412295337,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":17,"id":{"name":"lexical_parse_float","disambiguator":[3276748760821065683,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":18,"id":{"name":"lexical_util","disambiguator":[12950672042842541770,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":19,"id":{"name":"static_assertions","disambiguator":[9621623817770991670,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":20,"id":{"name":"lexical_parse_integer","disambiguator":[14349878222044973497,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":21,"id":{"name":"lexical_write_float","disambiguator":[768304563449395678,0]}},{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","num":22,"id":{"name":"lexical_write_integer","disambiguator":[13202730096189261910,0]}}],"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":0,"byte_end":20521,"line_start":1,"line_end":556,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":127},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":10769,"byte_end":10775,"line_start":286,"line_end":286,"column_start":23,"column_end":29},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":139},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":10784,"byte_end":10796,"line_start":286,"line_end":286,"column_start":38,"column_end":50},"alias_span":null,"name":"format_error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":137},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":10798,"byte_end":10813,"line_start":286,"line_end":286,"column_start":52,"column_end":67},"alias_span":null,"name":"format_is_valid","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":451},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":10815,"byte_end":10834,"line_start":286,"line_end":286,"column_start":69,"column_end":88},"alias_span":null,"name":"NumberFormatBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":861},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":10885,"byte_end":10890,"line_start":288,"line_end":288,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":341},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":10940,"byte_end":10952,"line_start":290,"line_end":290,"column_start":23,"column_end":35},"alias_span":null,"name":"ParseOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":351},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11002,"byte_end":11008,"line_start":292,"line_end":292,"column_start":23,"column_end":29},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":336},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11058,"byte_end":11070,"line_start":294,"line_end":294,"column_start":23,"column_end":35},"alias_span":null,"name":"WriteOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":349},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11187,"byte_end":11206,"line_start":298,"line_end":298,"column_start":24,"column_end":43},"alias_span":null,"name":"parse_float_options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":835},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11208,"byte_end":11225,"line_start":298,"line_end":298,"column_start":45,"column_end":62},"alias_span":null,"name":"ParseFloatOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":813},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11227,"byte_end":11251,"line_start":298,"line_end":298,"column_start":64,"column_end":88},"alias_span":null,"name":"ParseFloatOptionsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11312,"byte_end":11333,"line_start":300,"line_end":300,"column_start":24,"column_end":45},"alias_span":null,"name":"parse_integer_options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":245},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11335,"byte_end":11354,"line_start":300,"line_end":300,"column_start":47,"column_end":66},"alias_span":null,"name":"ParseIntegerOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":230},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11356,"byte_end":11382,"line_start":300,"line_end":300,"column_start":68,"column_end":94},"alias_span":null,"name":"ParseIntegerOptionsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":242},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11441,"byte_end":11460,"line_start":302,"line_end":302,"column_start":24,"column_end":43},"alias_span":null,"name":"write_float_options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":507},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11462,"byte_end":11479,"line_start":302,"line_end":302,"column_start":45,"column_end":62},"alias_span":null,"name":"WriteFloatOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":485},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11481,"byte_end":11505,"line_start":302,"line_end":302,"column_start":64,"column_end":88},"alias_span":null,"name":"WriteFloatOptionsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":102},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11566,"byte_end":11587,"line_start":304,"line_end":304,"column_start":24,"column_end":45},"alias_span":null,"name":"write_integer_options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":260},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11589,"byte_end":11608,"line_start":304,"line_end":304,"column_start":47,"column_end":66},"alias_span":null,"name":"WriteIntegerOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":245},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11610,"byte_end":11636,"line_start":304,"line_end":304,"column_start":68,"column_end":94},"alias_span":null,"name":"WriteIntegerOptionsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":34},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11688,"byte_end":11701,"line_start":306,"line_end":306,"column_start":24,"column_end":37},"alias_span":null,"name":"FormattedSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":38},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11703,"byte_end":11714,"line_start":306,"line_end":306,"column_start":39,"column_end":50},"alias_span":null,"name":"BUFFER_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":145},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11766,"byte_end":11777,"line_start":308,"line_end":308,"column_start":24,"column_end":35},"alias_span":null,"name":"FromLexical","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":148},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11779,"byte_end":11801,"line_start":308,"line_end":308,"column_start":37,"column_end":59},"alias_span":null,"name":"FromLexicalWithOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":154},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11853,"byte_end":11862,"line_start":310,"line_end":310,"column_start":24,"column_end":33},"alias_span":null,"name":"ToLexical","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":159},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":11864,"byte_end":11884,"line_start":310,"line_end":310,"column_start":35,"column_end":55},"alias_span":null,"name":"ToLexicalWithOptions","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":0,"byte_end":20521,"line_start":1,"line_end":556,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":112}],"decl_id":null,"docs":" Fast lexical conversion routines.","sig":null,"attributes":[{"value":"/ Fast lexical conversion routines.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":0,"byte_end":37,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":38,"byte_end":41,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Fast lexical conversion routines for both std and no_std environments.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":42,"byte_end":116,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ lexical provides routines to convert numbers to and from decimal","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":117,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ strings. lexical also supports non-base 10 numbers, with the `radix`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":186,"byte_end":258,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ feature, for both integers and floats. lexical is customizable","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":259,"byte_end":325,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ and yet simple to use: despite supporting nearly every float and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":326,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ integer format available, it only exports 2 write functions","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":395,"byte_end":458,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ and 4 parse functions.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":459,"byte_end":485,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":486,"byte_end":489,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ lexical is well-tested, and has been downloaded more than 5 million","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":490,"byte_end":561,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ times and currently has no known errors in correctness. lexical","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":562,"byte_end":629,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ prioritizes performance above all else, and aims to be competitive","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":630,"byte_end":700,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ or faster than any other float or integer parser and writer.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":701,"byte_end":765,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":766,"byte_end":769,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":770,"byte_end":791,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":792,"byte_end":795,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":796,"byte_end":807,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":808,"byte_end":824,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/ #     feature = \"parse-floats\",","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":825,"byte_end":860,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/ #     feature = \"parse-integers\",","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":861,"byte_end":898,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/ #     feature = \"write-floats\",","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":899,"byte_end":934,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ #     feature = \"write-integers\",","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":935,"byte_end":972,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/ # ))]","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":973,"byte_end":982,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ # {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":983,"byte_end":990,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ // Number to string","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":991,"byte_end":1014,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ lexical::to_string(3.0);            // \"3.0\", always has a fraction suffix.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1015,"byte_end":1094,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ lexical::to_string(3);              // \"3\"","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1095,"byte_end":1141,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1142,"byte_end":1145,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // String to number.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1146,"byte_end":1170,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ let i: i32 = lexical::parse(\"3\").unwrap();      // 3, auto-type deduction.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1171,"byte_end":1249,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ let f: f32 = lexical::parse(\"3.5\").unwrap();    // 3.5","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1250,"byte_end":1308,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ let d = lexical::parse::<f64, _>(\"3.5\");        // Ok(3.5), successful parse.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1309,"byte_end":1390,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ let d = lexical::parse::<f64, _>(\"3a\");         // Err(Error(_)), failed to parse.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1391,"byte_end":1477,"line_start":34,"line_end":34,"column_start":1,"column_end":87}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1478,"byte_end":1485,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1486,"byte_end":1493,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1494,"byte_end":1497,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Conversion API","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1498,"byte_end":1518,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1519,"byte_end":1522,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":1750,"byte_end":1753,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2112,"byte_end":2115,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2116,"byte_end":2130,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2131,"byte_end":2134,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ In accordance with the Rust ethos, all features are additive: the crate","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2135,"byte_end":2210,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ may be build with `--all-features` without issue.  The following features are enabled","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2211,"byte_end":2300,"line_start":55,"line_end":55,"column_start":1,"column_end":90}},{"value":"/ by default:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2301,"byte_end":2316,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2317,"byte_end":2320,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ * `std`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2321,"byte_end":2332,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ * `write-integers`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2333,"byte_end":2355,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ * `write-floats`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2356,"byte_end":2376,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/ * `parse-integers`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2377,"byte_end":2399,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/ * `parse-floats`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2400,"byte_end":2420,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2421,"byte_end":2424,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ A complete description of supported features includes:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2425,"byte_end":2483,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2484,"byte_end":2487,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ### std","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2488,"byte_end":2499,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2500,"byte_end":2503,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Enable use of the standard library. Currently, the standard library","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2504,"byte_end":2575,"line_start":68,"line_end":68,"column_start":1,"column_end":72}},{"value":"/ is not used for any functionality, and may be disabled without any","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2576,"byte_end":2646,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ change in functionality on stable.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2647,"byte_end":2685,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2686,"byte_end":2689,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### write-integers","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2690,"byte_end":2712,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2713,"byte_end":2716,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Enable support for writing integers to string.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2717,"byte_end":2767,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2768,"byte_end":2771,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ### write-floats","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2772,"byte_end":2792,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2793,"byte_end":2796,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Enable support for writing floating-point numbers to string.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2797,"byte_end":2861,"line_start":78,"line_end":78,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2862,"byte_end":2865,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ### parse-integers","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2866,"byte_end":2888,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2889,"byte_end":2892,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Enable support for parsing integers from string.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2893,"byte_end":2945,"line_start":82,"line_end":82,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2946,"byte_end":2949,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ### parsing-floats","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2950,"byte_end":2972,"line_start":84,"line_end":84,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2973,"byte_end":2976,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Enable support for parsing floating-point numbers from string.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":2977,"byte_end":3043,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3044,"byte_end":3047,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ### format","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3048,"byte_end":3062,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3063,"byte_end":3066,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Adds support for the entire format API (using [`NumberFormatBuilder`]).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3067,"byte_end":3142,"line_start":90,"line_end":90,"column_start":1,"column_end":76}},{"value":"/ This allows extensive configurability for parsing and writing numbers","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3143,"byte_end":3216,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ in custom formats, with different valid syntax requirements.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3217,"byte_end":3281,"line_start":92,"line_end":92,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3282,"byte_end":3285,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ For example, in JSON, the following floats are valid or invalid:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3286,"byte_end":3354,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3355,"byte_end":3358,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3359,"byte_end":3370,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"/ -1          // valid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3371,"byte_end":3395,"line_start":97,"line_end":97,"column_start":1,"column_end":25}},{"value":"/ +1          // invalid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3396,"byte_end":3422,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/ 1           // valid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3423,"byte_end":3447,"line_start":99,"line_end":99,"column_start":1,"column_end":25}},{"value":"/ 1.          // invalid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3448,"byte_end":3474,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/ .1          // invalid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3475,"byte_end":3501,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/ 0.1         // valid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3502,"byte_end":3526,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ nan         // invalid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3527,"byte_end":3553,"line_start":103,"line_end":103,"column_start":1,"column_end":27}},{"value":"/ inf         // invalid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3554,"byte_end":3580,"line_start":104,"line_end":104,"column_start":1,"column_end":27}},{"value":"/ Infinity    // invalid","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3581,"byte_end":3607,"line_start":105,"line_end":105,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3608,"byte_end":3615,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3616,"byte_end":3619,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ All of the finite numbers are valid in Rust, and Rust provides constants","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3620,"byte_end":3696,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ for non-finite floats. In order to parse standard-conforming JSON floats","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3697,"byte_end":3773,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ using lexical, you may use the following approach:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3774,"byte_end":3828,"line_start":110,"line_end":110,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3829,"byte_end":3832,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3833,"byte_end":3844,"line_start":112,"line_end":112,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"parse-floats\", feature = \"format\"))] {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3845,"byte_end":3910,"line_start":113,"line_end":113,"column_start":1,"column_end":66}},{"value":"/ use lexical_core::{format, parse_with_options, ParseFloatOptions, Result};","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3911,"byte_end":3989,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3990,"byte_end":3993,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ fn parse_json_float<Bytes: AsRef<[u8]>>(bytes: Bytes) -> Result<f64> {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":3994,"byte_end":4068,"line_start":116,"line_end":116,"column_start":1,"column_end":75}},{"value":"/     let options = ParseFloatOptions::new();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4069,"byte_end":4116,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/     parse_with_options::<_, { format::JSON }>(bytes.as_ref(), &options)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4117,"byte_end":4192,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4193,"byte_end":4198,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4199,"byte_end":4206,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4207,"byte_end":4214,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4215,"byte_end":4218,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ See the [Number Format](#number-format) section below for more information.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4219,"byte_end":4298,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4299,"byte_end":4302,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ### power-of-two","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4303,"byte_end":4323,"line_start":125,"line_end":125,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4324,"byte_end":4327,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Enable doing numeric conversions to and from strings with power-of-two","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4328,"byte_end":4402,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ radixes. This avoids most of the overhead and binary bloat of the radix","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4403,"byte_end":4478,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ feature, while enabling support for the most commonly-used radixes.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4479,"byte_end":4550,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4551,"byte_end":4554,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ### radix","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4555,"byte_end":4568,"line_start":131,"line_end":131,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4569,"byte_end":4572,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Enable doing numeric conversions to and from strings for all radixes.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4573,"byte_end":4646,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ This requires substantially more static storage than `power-of-two`,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4647,"byte_end":4719,"line_start":134,"line_end":134,"column_start":1,"column_end":73}},{"value":"/ and increases compile times by a fair amount, but can be quite useful","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4720,"byte_end":4793,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ for esoteric programming languages which use duodecimal floats, for","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4794,"byte_end":4865,"line_start":136,"line_end":136,"column_start":1,"column_end":72}},{"value":"/ example.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4866,"byte_end":4878,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4879,"byte_end":4882,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ### compact","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4883,"byte_end":4898,"line_start":139,"line_end":139,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4899,"byte_end":4902,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Reduce the generated code size at the cost of performance. This minimizes","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4903,"byte_end":4980,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ the number of static tables, inlining, and generics used, drastically","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":4981,"byte_end":5054,"line_start":142,"line_end":142,"column_start":1,"column_end":74}},{"value":"/ reducing the size of the generated binaries.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5055,"byte_end":5103,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5104,"byte_end":5107,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ### safe","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5108,"byte_end":5120,"line_start":145,"line_end":145,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5121,"byte_end":5124,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ All numeric parsers are memory-safe by default, since parsing complex","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5125,"byte_end":5198,"line_start":147,"line_end":147,"column_start":1,"column_end":74}},{"value":"/ input is a major source of memory vulnerabilities. However, numeric","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5199,"byte_end":5270,"line_start":148,"line_end":148,"column_start":1,"column_end":72}},{"value":"/ writers often opt-in for unchecked writes, for major performance","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5271,"byte_end":5339,"line_start":149,"line_end":149,"column_start":1,"column_end":69}},{"value":"/ improvements. This may be disabled entirely by enabling the `safe`","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5340,"byte_end":5410,"line_start":150,"line_end":150,"column_start":1,"column_end":71}},{"value":"/ feature. In addition, to simplify memory safety guarantees, extensive","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5411,"byte_end":5484,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ edge-cases, property-based tests, and fuzzing is done with both the","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5485,"byte_end":5556,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/ safe feature enabled and disabled, with the tests verified by Miri","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5557,"byte_end":5627,"line_start":153,"line_end":153,"column_start":1,"column_end":71}},{"value":"/ and Valgrind.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5628,"byte_end":5645,"line_start":154,"line_end":154,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5646,"byte_end":5649,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Configuration API","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5650,"byte_end":5673,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5674,"byte_end":5677,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Lexical provides two main levels of configuration:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5678,"byte_end":5732,"line_start":158,"line_end":158,"column_start":1,"column_end":55}},{"value":"/ - The [`NumberFormatBuilder`], creating a packed struct with custom","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5733,"byte_end":5804,"line_start":159,"line_end":159,"column_start":1,"column_end":72}},{"value":"/     formatting options.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5805,"byte_end":5832,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/ - The Options API.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5833,"byte_end":5855,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5856,"byte_end":5859,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ## Number Format","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5860,"byte_end":5880,"line_start":163,"line_end":163,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5881,"byte_end":5884,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ The number format class provides numerous flags to specify","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5885,"byte_end":5947,"line_start":165,"line_end":165,"column_start":1,"column_end":63}},{"value":"/ number parsing or writing. When the `power-of-two` feature is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":5948,"byte_end":6013,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ enabled, additional flags are added:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6014,"byte_end":6054,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/ - The radix for the significant digits (default `10`).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6055,"byte_end":6113,"line_start":168,"line_end":168,"column_start":1,"column_end":59}},{"value":"/ - The radix for the exponent base (default `10`).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6114,"byte_end":6167,"line_start":169,"line_end":169,"column_start":1,"column_end":54}},{"value":"/ - The radix for the exponent digits (default `10`).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6168,"byte_end":6223,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6224,"byte_end":6227,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ When the `format` feature is enabled, numerous other syntax and","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6228,"byte_end":6295,"line_start":172,"line_end":172,"column_start":1,"column_end":68}},{"value":"/ digit separator flags are enabled, including:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6296,"byte_end":6345,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/ - A digit separator character, to group digits for increased legibility.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6346,"byte_end":6422,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ - Whether leading, trailing, internal, and consecutive digit separators are allowed.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6423,"byte_end":6511,"line_start":175,"line_end":175,"column_start":1,"column_end":89}},{"value":"/ - Toggling required float components, such as digits before the decimal point.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6512,"byte_end":6594,"line_start":176,"line_end":176,"column_start":1,"column_end":83}},{"value":"/ - Toggling whether special floats are allowed or are case-sensitive.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6595,"byte_end":6667,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6668,"byte_end":6671,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ Many pre-defined constants therefore exist to simplify common use-cases,","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6672,"byte_end":6748,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ including:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6749,"byte_end":6763,"line_start":180,"line_end":180,"column_start":1,"column_end":15}},{"value":"/ - JSON, XML, TOML, YAML, SQLite, and many more.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6764,"byte_end":6815,"line_start":181,"line_end":181,"column_start":1,"column_end":52}},{"value":"/ - Rust, Python, C#, FORTRAN, COBOL literals and strings, and many more.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6816,"byte_end":6891,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6892,"byte_end":6895,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ## Options API","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6896,"byte_end":6914,"line_start":184,"line_end":184,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6915,"byte_end":6918,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The Options API provides high-level options to specify number parsing","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6919,"byte_end":6992,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ or writing, options not intrinsically tied to a number format.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":6993,"byte_end":7059,"line_start":187,"line_end":187,"column_start":1,"column_end":67}},{"value":"/ For example, the Options API provides:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7060,"byte_end":7102,"line_start":188,"line_end":188,"column_start":1,"column_end":43}},{"value":"/ - The exponent character (default `b'e'`, or `b'^'`).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7103,"byte_end":7160,"line_start":189,"line_end":189,"column_start":1,"column_end":58}},{"value":"/ - The decimal point character (default `b'.'`).","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7161,"byte_end":7212,"line_start":190,"line_end":190,"column_start":1,"column_end":52}},{"value":"/ - Custom `NaN`, `Infinity` string representations.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7213,"byte_end":7267,"line_start":191,"line_end":191,"column_start":1,"column_end":55}},{"value":"/ - Whether to trim the fraction component from integral floats.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7268,"byte_end":7334,"line_start":192,"line_end":192,"column_start":1,"column_end":67}},{"value":"/ - The exponent break point for scientific notation.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7335,"byte_end":7390,"line_start":193,"line_end":193,"column_start":1,"column_end":56}},{"value":"/ - The maximum and minimum number of significant digits to write.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7391,"byte_end":7459,"line_start":194,"line_end":194,"column_start":1,"column_end":69}},{"value":"/ - The rounding mode when truncating significant digits while writing.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7460,"byte_end":7533,"line_start":195,"line_end":195,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7534,"byte_end":7537,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ The available options are:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7538,"byte_end":7568,"line_start":197,"line_end":197,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7569,"byte_end":7572,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7873,"byte_end":7876,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ In addition, pre-defined constants for each category of options may","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7877,"byte_end":7948,"line_start":204,"line_end":204,"column_start":1,"column_end":72}},{"value":"/ be found in their respective modules.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7949,"byte_end":7990,"line_start":205,"line_end":205,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7991,"byte_end":7994,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":7995,"byte_end":8009,"line_start":207,"line_end":207,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8010,"byte_end":8013,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ An example of creating your own options to parse European-style","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8014,"byte_end":8081,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/ numbers (which use commas as decimal points, and periods as digit","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8082,"byte_end":8151,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ separators) is as follows:","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8152,"byte_end":8182,"line_start":211,"line_end":211,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8183,"byte_end":8186,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8187,"byte_end":8194,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8195,"byte_end":8216,"line_start":214,"line_end":214,"column_start":1,"column_end":22}},{"value":"/ # #[cfg(all(feature = \"parse_floats\", feature = \"format\"))] {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8217,"byte_end":8282,"line_start":215,"line_end":215,"column_start":1,"column_end":66}},{"value":"/ // This creates a format to parse a European-style float number.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8283,"byte_end":8351,"line_start":216,"line_end":216,"column_start":1,"column_end":69}},{"value":"/ // The decimal point is a comma, and the digit separators (optional)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8352,"byte_end":8424,"line_start":217,"line_end":217,"column_start":1,"column_end":73}},{"value":"/ // are periods.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8425,"byte_end":8444,"line_start":218,"line_end":218,"column_start":1,"column_end":20}},{"value":"/ const EUROPEAN: u128 = lexical::NumberFormatBuilder::new()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8445,"byte_end":8507,"line_start":219,"line_end":219,"column_start":1,"column_end":63}},{"value":"/     .digit_separator(b'.')","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8508,"byte_end":8538,"line_start":220,"line_end":220,"column_start":1,"column_end":31}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8539,"byte_end":8555,"line_start":221,"line_end":221,"column_start":1,"column_end":17}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8556,"byte_end":8574,"line_start":222,"line_end":222,"column_start":1,"column_end":19}},{"value":"/ let options = lexical_core::ParseFloatOptions::builder()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8575,"byte_end":8635,"line_start":223,"line_end":223,"column_start":1,"column_end":61}},{"value":"/     .decimal_point(b',')","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8636,"byte_end":8664,"line_start":224,"line_end":224,"column_start":1,"column_end":29}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8665,"byte_end":8681,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8682,"byte_end":8700,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8701,"byte_end":8716,"line_start":227,"line_end":227,"column_start":1,"column_end":16}},{"value":"/     lexical::parse_with_options::<f32, EUROPEAN, _>(\"300,10\", &options),","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8717,"byte_end":8793,"line_start":228,"line_end":228,"column_start":1,"column_end":77}},{"value":"/     Ok(300.10)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8794,"byte_end":8812,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/ );","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8813,"byte_end":8819,"line_start":230,"line_end":230,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8820,"byte_end":8823,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ // Another example, using a pre-defined constant for JSON.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8824,"byte_end":8886,"line_start":232,"line_end":232,"column_start":1,"column_end":63}},{"value":"/ const JSON: u128 = lexical::format::JSON;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8887,"byte_end":8932,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let options = lexical::ParseFloatOptions::new();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8933,"byte_end":8985,"line_start":234,"line_end":234,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":8986,"byte_end":9001,"line_start":235,"line_end":235,"column_start":1,"column_end":16}},{"value":"/     lexical::parse_with_options::<f32, JSON, _>(\"0e1\", &options),","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9002,"byte_end":9071,"line_start":236,"line_end":236,"column_start":1,"column_end":70}},{"value":"/     Ok(0.0)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9072,"byte_end":9087,"line_start":237,"line_end":237,"column_start":1,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9088,"byte_end":9094,"line_start":238,"line_end":238,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9095,"byte_end":9110,"line_start":239,"line_end":239,"column_start":1,"column_end":16}},{"value":"/     lexical::parse_with_options::<f32, JSON, _>(\"1E+2\", &options),","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9111,"byte_end":9181,"line_start":240,"line_end":240,"column_start":1,"column_end":71}},{"value":"/     Ok(100.0)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9182,"byte_end":9199,"line_start":241,"line_end":241,"column_start":1,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9200,"byte_end":9206,"line_start":242,"line_end":242,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9207,"byte_end":9214,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9215,"byte_end":9222,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9223,"byte_end":9230,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9231,"byte_end":9234,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ # Version Support","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9235,"byte_end":9256,"line_start":247,"line_end":247,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9257,"byte_end":9260,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ The minimum, standard, required version is 1.51.0, for const generic","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9261,"byte_end":9333,"line_start":249,"line_end":249,"column_start":1,"column_end":73}},{"value":"/ support. Older versions of lexical support older Rust versions.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9334,"byte_end":9401,"line_start":250,"line_end":250,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9402,"byte_end":9405,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ [`to_string`]: fn.to_string.html","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9406,"byte_end":9442,"line_start":252,"line_end":252,"column_start":1,"column_end":37}},{"value":"/ [`to_string_with_options`]: fn.to_string_with_options.html","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9443,"byte_end":9505,"line_start":253,"line_end":253,"column_start":1,"column_end":63}},{"value":"/ [`write_with_options`]: crate::write_with_options","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9506,"byte_end":9559,"line_start":254,"line_end":254,"column_start":1,"column_end":54}},{"value":"/ [`write_with_options_unchecked`]: crate::write_with_options_unchecked","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9560,"byte_end":9633,"line_start":255,"line_end":255,"column_start":1,"column_end":74}},{"value":"/ [`parse`]: crate::parse","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9634,"byte_end":9661,"line_start":256,"line_end":256,"column_start":1,"column_end":28}},{"value":"/ [`parse_partial`]: crate::parse_partial","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9662,"byte_end":9705,"line_start":257,"line_end":257,"column_start":1,"column_end":44}},{"value":"/ [`parse_with_options`]: crate::parse_with_options","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9706,"byte_end":9759,"line_start":258,"line_end":258,"column_start":1,"column_end":54}},{"value":"/ [`parse_partial_with_options`]: crate::parse_partial_with_options","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9760,"byte_end":9829,"line_start":259,"line_end":259,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9830,"byte_end":9833,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ [`NumberFormatBuilder`]: crate::NumberFormatBuilder","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9834,"byte_end":9889,"line_start":261,"line_end":261,"column_start":1,"column_end":56}},{"value":"/ [`ParseFloatOptions`]: crate::ParseFloatOptions","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9890,"byte_end":9941,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ [`ParseIntegerOptions`]: crate::ParseIntegerOptions","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9942,"byte_end":9997,"line_start":263,"line_end":263,"column_start":1,"column_end":56}},{"value":"/ [`WriteFloatOptions`]: crate::WriteFloatOptions","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":9998,"byte_end":10049,"line_start":264,"line_end":264,"column_start":1,"column_end":52}},{"value":"/ [`WriteIntegerOptions`]: crate::WriteIntegerOptions","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":10050,"byte_end":10105,"line_start":265,"line_end":265,"column_start":1,"column_end":56}},{"value":"allow(unused_unsafe)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":10235,"byte_end":10259,"line_start":269,"line_end":269,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12650,"byte_end":12659,"line_start":342,"line_end":342,"column_start":8,"column_end":17},"name":"to_string","qualname":"::to_string","value":"fn to_string<N>(N) -> String where N: ToLexical","parent":null,"children":[],"decl_id":null,"docs":" High-level conversion of a number to a decimal-encoded string.","sig":null,"attributes":[{"value":"/ High-level conversion of a number to a decimal-encoded string.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12296,"byte_end":12362,"line_start":327,"line_end":327,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12363,"byte_end":12366,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ * `n`       - Number to convert to string.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12367,"byte_end":12413,"line_start":329,"line_end":329,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12414,"byte_end":12417,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12418,"byte_end":12432,"line_start":331,"line_end":331,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12433,"byte_end":12436,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12437,"byte_end":12448,"line_start":333,"line_end":333,"column_start":1,"column_end":12}},{"value":"/ # extern crate lexical;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12449,"byte_end":12476,"line_start":334,"line_end":334,"column_start":1,"column_end":28}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12477,"byte_end":12498,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(lexical::to_string(5), \"5\");","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12499,"byte_end":12542,"line_start":336,"line_end":336,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(lexical::to_string(0.0), \"0.0\");","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12543,"byte_end":12590,"line_start":337,"line_end":337,"column_start":1,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12591,"byte_end":12598,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12599,"byte_end":12606,"line_start":339,"line_end":339,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12607,"byte_end":12616,"line_start":340,"line_end":340,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"write\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":12617,"byte_end":12642,"line_start":341,"line_end":341,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13707,"byte_end":13729,"line_start":373,"line_end":373,"column_start":8,"column_end":30},"name":"to_string_with_options","qualname":"::to_string_with_options","value":"fn to_string_with_options<N, const FORMAT: u128>(N, &N::Options) -> String\nwhere N: ToLexicalWithOptions","parent":null,"children":[],"decl_id":null,"docs":" High-level conversion of a number to a string with custom writing options.","sig":null,"attributes":[{"value":"/ High-level conversion of a number to a string with custom writing options.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13001,"byte_end":13079,"line_start":352,"line_end":352,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13080,"byte_end":13083,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ * `FORMAT`  - Packed struct containing the number format.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13084,"byte_end":13145,"line_start":354,"line_end":354,"column_start":1,"column_end":62}},{"value":"/ * `n`       - Number to convert to string.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13146,"byte_end":13192,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/ * `options` - Options to specify number writing.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13193,"byte_end":13245,"line_start":356,"line_end":356,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13246,"byte_end":13249,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13250,"byte_end":13264,"line_start":358,"line_end":358,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13265,"byte_end":13268,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13269,"byte_end":13280,"line_start":360,"line_end":360,"column_start":1,"column_end":12}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13281,"byte_end":13302,"line_start":361,"line_end":361,"column_start":1,"column_end":22}},{"value":"/ const FORMAT: u128 = lexical::format::STANDARD;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13303,"byte_end":13354,"line_start":362,"line_end":362,"column_start":1,"column_end":52}},{"value":"/ let options = lexical::WriteFloatOptions::builder()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13355,"byte_end":13410,"line_start":363,"line_end":363,"column_start":1,"column_end":56}},{"value":"/     .trim_floats(true)","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13411,"byte_end":13437,"line_start":364,"line_end":364,"column_start":1,"column_end":27}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13438,"byte_end":13454,"line_start":365,"line_end":365,"column_start":1,"column_end":17}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13455,"byte_end":13473,"line_start":366,"line_end":366,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(lexical::to_string_with_options::<_, FORMAT>(0.0, &options), \"0\");","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13474,"byte_end":13555,"line_start":367,"line_end":367,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(lexical::to_string_with_options::<_, FORMAT>(123.456, &options), \"123.456\");","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13556,"byte_end":13647,"line_start":368,"line_end":368,"column_start":1,"column_end":92}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13648,"byte_end":13655,"line_start":369,"line_end":369,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13656,"byte_end":13663,"line_start":370,"line_end":370,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13664,"byte_end":13673,"line_start":371,"line_end":371,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"write\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":13674,"byte_end":13699,"line_start":372,"line_end":372,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15688,"byte_end":15693,"line_start":430,"line_end":430,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse","value":"fn parse<N, Bytes>(Bytes) -> Result<N> where N: FromLexical,\nBytes: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" High-level conversion of decimal-encoded bytes to a number.","sig":null,"attributes":[{"value":"/ High-level conversion of decimal-encoded bytes to a number.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14355,"byte_end":14418,"line_start":393,"line_end":393,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14419,"byte_end":14422,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ This function only returns a value if the entire string is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14423,"byte_end":14485,"line_start":395,"line_end":395,"column_start":1,"column_end":63}},{"value":"/ successfully parsed.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14486,"byte_end":14510,"line_start":396,"line_end":396,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14511,"byte_end":14514,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice to convert to number.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14515,"byte_end":14565,"line_start":398,"line_end":398,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14566,"byte_end":14569,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14570,"byte_end":14584,"line_start":400,"line_end":400,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14585,"byte_end":14588,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14589,"byte_end":14600,"line_start":402,"line_end":402,"column_start":1,"column_end":12}},{"value":"/ # extern crate lexical;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14601,"byte_end":14628,"line_start":403,"line_end":403,"column_start":1,"column_end":28}},{"value":"/ # use lexical::Error;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14629,"byte_end":14654,"line_start":404,"line_end":404,"column_start":1,"column_end":26}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14655,"byte_end":14676,"line_start":405,"line_end":405,"column_start":1,"column_end":22}},{"value":"/ // Create our error.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14677,"byte_end":14701,"line_start":406,"line_end":406,"column_start":1,"column_end":25}},{"value":"/ fn error<T>(r: lexical::Result<T>) -> Error {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14702,"byte_end":14751,"line_start":407,"line_end":407,"column_start":1,"column_end":50}},{"value":"/     r.err().unwrap()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14752,"byte_end":14776,"line_start":408,"line_end":408,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14777,"byte_end":14782,"line_start":409,"line_end":409,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14783,"byte_end":14786,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ // String overloads","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14787,"byte_end":14810,"line_start":411,"line_end":411,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(lexical::parse::<i32, _>(\"5\"), Ok(5));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14811,"byte_end":14864,"line_start":412,"line_end":412,"column_start":1,"column_end":54}},{"value":"/ assert!(lexical::parse::<i32, _>(\"1a\").err().unwrap().is_invalid_digit());","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14865,"byte_end":14943,"line_start":413,"line_end":413,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(lexical::parse::<f32, _>(\"0\"), Ok(0.0));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":14944,"byte_end":14999,"line_start":414,"line_end":414,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(lexical::parse::<f32, _>(\"1.0\"), Ok(1.0));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15000,"byte_end":15057,"line_start":415,"line_end":415,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(lexical::parse::<f32, _>(\"1.\"), Ok(1.0));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15058,"byte_end":15114,"line_start":416,"line_end":416,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15115,"byte_end":15118,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ // Bytes overloads","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15119,"byte_end":15141,"line_start":418,"line_end":418,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(lexical::parse::<i32, _>(b\"5\"), Ok(5));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15142,"byte_end":15196,"line_start":419,"line_end":419,"column_start":1,"column_end":55}},{"value":"/ assert!(lexical::parse::<f32, _>(b\"1a\").err().unwrap().is_invalid_digit());","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15197,"byte_end":15276,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(lexical::parse::<f32, _>(b\"0\"), Ok(0.0));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15277,"byte_end":15333,"line_start":421,"line_end":421,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(lexical::parse::<f32, _>(b\"1.0\"), Ok(1.0));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15334,"byte_end":15392,"line_start":422,"line_end":422,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(lexical::parse::<f32, _>(b\"1.\"), Ok(1.0));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15393,"byte_end":15450,"line_start":423,"line_end":423,"column_start":1,"column_end":58}},{"value":"/ # assert_eq!(lexical::parse::<f32, _>(b\"5.002868148396374\"), Ok(5.002868148396374));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15451,"byte_end":15539,"line_start":424,"line_end":424,"column_start":1,"column_end":89}},{"value":"/ # assert_eq!(lexical::parse::<f64, _>(b\"5.002868148396374\"), Ok(5.002868148396374));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15540,"byte_end":15628,"line_start":425,"line_end":425,"column_start":1,"column_end":89}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15629,"byte_end":15636,"line_start":426,"line_end":426,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15637,"byte_end":15644,"line_start":427,"line_end":427,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15645,"byte_end":15654,"line_start":428,"line_end":428,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"parse\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15655,"byte_end":15680,"line_start":429,"line_end":429,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17348,"byte_end":17361,"line_start":469,"line_end":469,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parse_partial","value":"fn parse_partial<N, Bytes>(Bytes) -> Result<(N, usize)> where N: FromLexical,\nBytes: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" High-level, partial conversion of decimal-encoded bytes to a number.","sig":null,"attributes":[{"value":"/ High-level, partial conversion of decimal-encoded bytes to a number.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15798,"byte_end":15870,"line_start":434,"line_end":434,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15871,"byte_end":15874,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ This functions parses as many digits as possible, returning the parsed","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15875,"byte_end":15949,"line_start":436,"line_end":436,"column_start":1,"column_end":75}},{"value":"/ value and the number of digits processed if at least one character","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":15950,"byte_end":16020,"line_start":437,"line_end":437,"column_start":1,"column_end":71}},{"value":"/ is processed. If another error, such as numerical overflow or underflow","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16021,"byte_end":16096,"line_start":438,"line_end":438,"column_start":1,"column_end":76}},{"value":"/ occurs, this function returns the error code and the index at which","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16097,"byte_end":16168,"line_start":439,"line_end":439,"column_start":1,"column_end":72}},{"value":"/ the error occurred.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16169,"byte_end":16192,"line_start":440,"line_end":440,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16193,"byte_end":16196,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice to convert to number.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16197,"byte_end":16247,"line_start":442,"line_end":442,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16248,"byte_end":16251,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16252,"byte_end":16266,"line_start":444,"line_end":444,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16267,"byte_end":16270,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16271,"byte_end":16282,"line_start":446,"line_end":446,"column_start":1,"column_end":12}},{"value":"/ # extern crate lexical;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16283,"byte_end":16310,"line_start":447,"line_end":447,"column_start":1,"column_end":28}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16311,"byte_end":16332,"line_start":448,"line_end":448,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16333,"byte_end":16336,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ // String overloads","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16337,"byte_end":16360,"line_start":450,"line_end":450,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(lexical::parse_partial::<i32, _>(\"5\"), Ok((5, 1)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16361,"byte_end":16427,"line_start":451,"line_end":451,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(lexical::parse_partial::<i32, _>(\"1a\"), Ok((1, 1)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16428,"byte_end":16495,"line_start":452,"line_end":452,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(lexical::parse_partial::<f32, _>(\"0\"), Ok((0.0, 1)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16496,"byte_end":16564,"line_start":453,"line_end":453,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(lexical::parse_partial::<f32, _>(\"1.0\"), Ok((1.0, 3)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16565,"byte_end":16635,"line_start":454,"line_end":454,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(lexical::parse_partial::<f32, _>(\"1.\"), Ok((1.0, 2)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16636,"byte_end":16705,"line_start":455,"line_end":455,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16706,"byte_end":16709,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ // Bytes overloads","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16710,"byte_end":16732,"line_start":457,"line_end":457,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(lexical::parse_partial::<i32, _>(b\"5\"), Ok((5, 1)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16733,"byte_end":16800,"line_start":458,"line_end":458,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(lexical::parse_partial::<i32, _>(b\"1a\"), Ok((1, 1)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16801,"byte_end":16869,"line_start":459,"line_end":459,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(lexical::parse_partial::<f32, _>(b\"0\"), Ok((0.0, 1)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16870,"byte_end":16939,"line_start":460,"line_end":460,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(lexical::parse_partial::<f32, _>(b\"1.0\"), Ok((1.0, 3)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":16940,"byte_end":17011,"line_start":461,"line_end":461,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(lexical::parse_partial::<f32, _>(b\"1.\"), Ok((1.0, 2)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17012,"byte_end":17082,"line_start":462,"line_end":462,"column_start":1,"column_end":71}},{"value":"/ # assert_eq!(lexical::parse_partial::<f32, _>(b\"5.002868148396374\"), Ok((5.002868148396374, 17)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17083,"byte_end":17185,"line_start":463,"line_end":463,"column_start":1,"column_end":103}},{"value":"/ # assert_eq!(lexical::parse_partial::<f64, _>(b\"5.002868148396374\"), Ok((5.002868148396374, 17)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17186,"byte_end":17288,"line_start":464,"line_end":464,"column_start":1,"column_end":103}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17289,"byte_end":17296,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17297,"byte_end":17304,"line_start":466,"line_end":466,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17305,"byte_end":17314,"line_start":467,"line_end":467,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"parse\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17315,"byte_end":17340,"line_start":468,"line_end":468,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18625,"byte_end":18643,"line_start":505,"line_end":505,"column_start":8,"column_end":26},"name":"parse_with_options","qualname":"::parse_with_options","value":"fn parse_with_options<N, Bytes, const FORMAT: u128>(Bytes, &N::Options)\n-> Result<N> where N: FromLexicalWithOptions, Bytes: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" High-level conversion of bytes to a number with custom parsing options.","sig":null,"attributes":[{"value":"/ High-level conversion of bytes to a number with custom parsing options.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17483,"byte_end":17558,"line_start":473,"line_end":473,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17559,"byte_end":17562,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ This function only returns a value if the entire string is","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17563,"byte_end":17625,"line_start":475,"line_end":475,"column_start":1,"column_end":63}},{"value":"/ successfully parsed.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17626,"byte_end":17650,"line_start":476,"line_end":476,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17651,"byte_end":17654,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ * `FORMAT`  - Packed struct containing the number format.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17655,"byte_end":17716,"line_start":478,"line_end":478,"column_start":1,"column_end":62}},{"value":"/ * `bytes`   - Byte slice to convert to number.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17717,"byte_end":17767,"line_start":479,"line_end":479,"column_start":1,"column_end":51}},{"value":"/ * `options` - Options to specify number parsing.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17768,"byte_end":17820,"line_start":480,"line_end":480,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17821,"byte_end":17824,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17825,"byte_end":17837,"line_start":482,"line_end":482,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17838,"byte_end":17841,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ If the provided `FORMAT` is not valid, the function may panic. Please","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17842,"byte_end":17915,"line_start":484,"line_end":484,"column_start":1,"column_end":74}},{"value":"/ ensure `is_valid()` is called prior to using the format, or checking","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17916,"byte_end":17988,"line_start":485,"line_end":485,"column_start":1,"column_end":73}},{"value":"/ its validity using a static assertion.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":17989,"byte_end":18031,"line_start":486,"line_end":486,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18032,"byte_end":18035,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18036,"byte_end":18050,"line_start":488,"line_end":488,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18051,"byte_end":18054,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18055,"byte_end":18066,"line_start":490,"line_end":490,"column_start":1,"column_end":12}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18067,"byte_end":18088,"line_start":491,"line_end":491,"column_start":1,"column_end":22}},{"value":"/ const FORMAT: u128 = lexical::format::STANDARD;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18089,"byte_end":18140,"line_start":492,"line_end":492,"column_start":1,"column_end":52}},{"value":"/ let options = lexical::ParseFloatOptions::builder()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18141,"byte_end":18196,"line_start":493,"line_end":493,"column_start":1,"column_end":56}},{"value":"/     .exponent(b'^')","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18197,"byte_end":18220,"line_start":494,"line_end":494,"column_start":1,"column_end":24}},{"value":"/     .decimal_point(b',')","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18221,"byte_end":18249,"line_start":495,"line_end":495,"column_start":1,"column_end":29}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18250,"byte_end":18266,"line_start":496,"line_end":496,"column_start":1,"column_end":17}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18267,"byte_end":18285,"line_start":497,"line_end":497,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(lexical::parse_with_options::<f32, _, FORMAT>(\"0\", &options), Ok(0.0));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18286,"byte_end":18372,"line_start":498,"line_end":498,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(lexical::parse_with_options::<f32, _, FORMAT>(\"1,2345\", &options), Ok(1.2345));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18373,"byte_end":18467,"line_start":499,"line_end":499,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(lexical::parse_with_options::<f32, _, FORMAT>(\"1,2345^4\", &options), Ok(12345.0));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18468,"byte_end":18565,"line_start":500,"line_end":500,"column_start":1,"column_end":98}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18566,"byte_end":18573,"line_start":501,"line_end":501,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18574,"byte_end":18581,"line_start":502,"line_end":502,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18582,"byte_end":18591,"line_start":503,"line_end":503,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"parse\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18592,"byte_end":18617,"line_start":504,"line_end":504,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":20264,"byte_end":20290,"line_start":547,"line_end":547,"column_start":8,"column_end":34},"name":"parse_partial_with_options","qualname":"::parse_partial_with_options","value":"fn parse_partial_with_options<N, Bytes, const FORMAT:\nu128>(Bytes, &N::Options) -> Result<(N, usize)> where\nN: FromLexicalWithOptions, Bytes: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" High-level, partial conversion of bytes to a number with custom parsing options.","sig":null,"attributes":[{"value":"/ High-level, partial conversion of bytes to a number with custom parsing options.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18844,"byte_end":18928,"line_start":512,"line_end":512,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18929,"byte_end":18932,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ This functions parses as many digits as possible, returning the parsed","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":18933,"byte_end":19007,"line_start":514,"line_end":514,"column_start":1,"column_end":75}},{"value":"/ value and the number of digits processed if at least one character","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19008,"byte_end":19078,"line_start":515,"line_end":515,"column_start":1,"column_end":71}},{"value":"/ is processed. If another error, such as numerical overflow or underflow","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19079,"byte_end":19154,"line_start":516,"line_end":516,"column_start":1,"column_end":76}},{"value":"/ occurs, this function returns the error code and the index at which","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19155,"byte_end":19226,"line_start":517,"line_end":517,"column_start":1,"column_end":72}},{"value":"/ the error occurred.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19227,"byte_end":19250,"line_start":518,"line_end":518,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19251,"byte_end":19254,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ * `FORMAT`  - Packed struct containing the number format.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19255,"byte_end":19316,"line_start":520,"line_end":520,"column_start":1,"column_end":62}},{"value":"/ * `bytes`   - Byte slice to convert to number.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19317,"byte_end":19367,"line_start":521,"line_end":521,"column_start":1,"column_end":51}},{"value":"/ * `options` - Options to specify number parsing.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19368,"byte_end":19420,"line_start":522,"line_end":522,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19421,"byte_end":19424,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19425,"byte_end":19437,"line_start":524,"line_end":524,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19438,"byte_end":19441,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ If the provided `FORMAT` is not valid, the function may panic. Please","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19442,"byte_end":19515,"line_start":526,"line_end":526,"column_start":1,"column_end":74}},{"value":"/ ensure `is_valid()` is called prior to using the format, or checking","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19516,"byte_end":19588,"line_start":527,"line_end":527,"column_start":1,"column_end":73}},{"value":"/ its validity using a static assertion.","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19589,"byte_end":19631,"line_start":528,"line_end":528,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19632,"byte_end":19635,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19636,"byte_end":19650,"line_start":530,"line_end":530,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19651,"byte_end":19654,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19655,"byte_end":19666,"line_start":532,"line_end":532,"column_start":1,"column_end":12}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19667,"byte_end":19688,"line_start":533,"line_end":533,"column_start":1,"column_end":22}},{"value":"/ const FORMAT: u128 = lexical::format::STANDARD;","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19689,"byte_end":19740,"line_start":534,"line_end":534,"column_start":1,"column_end":52}},{"value":"/ let options = lexical::ParseFloatOptions::builder()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19741,"byte_end":19796,"line_start":535,"line_end":535,"column_start":1,"column_end":56}},{"value":"/     .exponent(b'^')","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19797,"byte_end":19820,"line_start":536,"line_end":536,"column_start":1,"column_end":24}},{"value":"/     .decimal_point(b',')","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19821,"byte_end":19849,"line_start":537,"line_end":537,"column_start":1,"column_end":29}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19850,"byte_end":19866,"line_start":538,"line_end":538,"column_start":1,"column_end":17}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19867,"byte_end":19885,"line_start":539,"line_end":539,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(lexical::parse_partial_with_options::<f32, _, FORMAT>(\"0\", &options), Ok((0.0, 1)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19886,"byte_end":19985,"line_start":540,"line_end":540,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(lexical::parse_partial_with_options::<f32, _, FORMAT>(\"1,2345\", &options), Ok((1.2345, 6)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":19986,"byte_end":20093,"line_start":541,"line_end":541,"column_start":1,"column_end":108}},{"value":"/ assert_eq!(lexical::parse_partial_with_options::<f32, _, FORMAT>(\"1,2345^4\", &options), Ok((12345.0, 8)));","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":20094,"byte_end":20204,"line_start":542,"line_end":542,"column_start":1,"column_end":111}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":20205,"byte_end":20212,"line_start":543,"line_end":543,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":20213,"byte_end":20220,"line_start":544,"line_end":544,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":20221,"byte_end":20230,"line_start":545,"line_end":545,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"parse\")","span":{"file_name":"C:\\Users\\Thomas\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lexical-6.1.1\\src\\lib.rs","byte_start":20231,"byte_end":20256,"line_start":546,"line_end":546,"column_start":1,"column_end":26}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}
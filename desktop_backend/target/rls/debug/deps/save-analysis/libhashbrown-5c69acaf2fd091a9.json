{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2","program":"C:\\Users\\e8Perri\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","hashbrown","--edition=2021","C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"raw\"","-C","metadata=5c69acaf2fd091a9","-C","extra-filename=-5c69acaf2fd091a9","--out-dir","c:\\Users\\e8Perri\\Documents\\Letterlick\\backend\\desktop_backend\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\e8Perri\\Documents\\Letterlick\\backend\\desktop_backend\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\e8Perri\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\e8Perri\\Documents\\Letterlick\\backend\\desktop_backend\\target\\rls\\debug\\deps\\libhashbrown-5c69acaf2fd091a9.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[8952408165488218352,0]},"crate_root":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src","external_crates":[{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}}],"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":0,"byte_end":4306,"line_start":1,"line_end":150,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":1725,"byte_end":1726,"line_start":63,"line_end":63,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"RawIter, Allocator, RawDrain, Bucket, RawIntoIter, RawTable, Global","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":2357,"byte_end":2358,"line_start":87,"line_end":87,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2181}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":2912,"byte_end":2913,"line_start":104,"line_end":104,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2183}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3295,"byte_end":3302,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3324,"byte_end":3331,"line_start":118,"line_end":118,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":0,"byte_end":4306,"line_start":1,"line_end":150,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":1622},{"krate":0,"index":1651},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2262},{"krate":0,"index":2267},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2276}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"/ This crate is a Rust port of Google's high-performance [SwissTable] hash","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ map, adapted to make it a drop-in replacement for Rust's standard `HashMap`","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ and `HashSet` types.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":157,"byte_end":181,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":182,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The original C++ version of [SwissTable] can be found [here], and this","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":186,"byte_end":260,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ [CppCon talk] gives an overview of how the algorithm works.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":261,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":325,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [SwissTable]: https://abseil.io/blog/20180927-swisstables","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ [here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":391,"byte_end":490,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ [CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":491,"byte_end":553,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\nmust_use_candidate, clippy :: option_if_let_else, clippy :: redundant_else,\nclippy :: manual_map, clippy :: missing_safety_doc, clippy ::\nmissing_errors_doc)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":899,"byte_end":1153,"line_start":28,"line_end":37,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":1154,"byte_end":1176,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":1177,"byte_end":1203,"line_start":39,"line_end":39,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":1553,"byte_end":1556,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":510}],"decl_id":null,"docs":" Experimental and unsafe `RawTable` API. This module is only available if the\n `raw` feature is enabled.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":1410,"byte_end":1433,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/ Experimental and unsafe `RawTable` API. This module is only available if the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":1434,"byte_end":1514,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ `raw` feature is enabled.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":1515,"byte_end":1544,"line_start":57,"line_end":57,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":94821,"byte_end":94830,"line_start":37,"line_end":37,"column_start":22,"column_end":31},"name":"Allocator","qualname":"::raw::inner::alloc::inner::Allocator","value":"Allocator","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":94726,"byte_end":94762,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":94844,"byte_end":94852,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"allocate","qualname":"::raw::inner::alloc::inner::Allocator::allocate","value":"pub fn allocate(&Self, Layout) -> Result<NonNull<u8>, ()>","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":94922,"byte_end":94932,"line_start":39,"line_end":39,"column_start":19,"column_end":29},"name":"deallocate","qualname":"::raw::inner::alloc::inner::Allocator::deallocate","value":"pub unsafe fn deallocate(&Self, NonNull<u8>, Layout)","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":95024,"byte_end":95030,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"name":"Global","qualname":"::raw::inner::alloc::inner::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15359,"byte_end":15365,"line_start":273,"line_end":273,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::raw::inner::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":163}],"decl_id":null,"docs":" A reference to a hash table bucket containing a `T`.","sig":null,"attributes":[{"value":"/ A reference to a hash table bucket containing a `T`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15096,"byte_end":15152,"line_start":268,"line_end":268,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15153,"byte_end":15156,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This is usually just a pointer to the element itself. However if the element","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15157,"byte_end":15237,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ is a ZST, then we instead track the index of the element in the table so","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15238,"byte_end":15314,"line_start":271,"line_end":271,"column_start":1,"column_end":77}},{"value":"/ that `erase` works properly.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15315,"byte_end":15347,"line_start":272,"line_end":272,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":16578,"byte_end":16584,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Bucket<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":16557,"byte_end":16566,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17233,"byte_end":17237,"line_start":334,"line_end":334,"column_start":19,"column_end":23},"name":"drop","qualname":"<Bucket<T>>::drop","value":"pub unsafe fn drop(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17324,"byte_end":17328,"line_start":338,"line_end":338,"column_start":19,"column_end":23},"name":"read","qualname":"<Bucket<T>>::read","value":"pub unsafe fn read(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17296,"byte_end":17305,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17410,"byte_end":17415,"line_start":342,"line_end":342,"column_start":19,"column_end":24},"name":"write","qualname":"<Bucket<T>>::write","value":"pub unsafe fn write(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17382,"byte_end":17391,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17505,"byte_end":17511,"line_start":346,"line_end":346,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Bucket<T>>::as_ref","value":"pub unsafe fn as_ref<'a>(&Self) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17477,"byte_end":17486,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17596,"byte_end":17602,"line_start":350,"line_end":350,"column_start":19,"column_end":25},"name":"as_mut","qualname":"<Bucket<T>>::as_mut","value":"pub unsafe fn as_mut<'a>(&Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17568,"byte_end":17577,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17723,"byte_end":17747,"line_start":355,"line_end":355,"column_start":19,"column_end":43},"name":"copy_from_nonoverlapping","qualname":"<Bucket<T>>::copy_from_nonoverlapping","value":"pub unsafe fn copy_from_nonoverlapping(&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17667,"byte_end":17690,"line_start":353,"line_end":353,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17695,"byte_end":17704,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17899,"byte_end":17907,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"RawTable","qualname":"::raw::inner::RawTable","value":"RawTable {  }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" A raw hash table with an unsafe API.\n","sig":null,"attributes":[{"value":"/ A raw hash table with an unsafe API.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":17847,"byte_end":17887,"line_start":360,"line_end":360,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19077,"byte_end":19080,"line_start":394,"line_end":394,"column_start":18,"column_end":21},"name":"new","qualname":"<RawTable<T, Global>>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash table without allocating any memory.","sig":null,"attributes":[{"value":"/ Creates a new empty hash table without allocating any memory.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":18736,"byte_end":18801,"line_start":388,"line_end":388,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":18806,"byte_end":18809,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ In effect this returns a table with exactly 1 bucket. However we can","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":18814,"byte_end":18886,"line_start":390,"line_end":390,"column_start":5,"column_end":77}},{"value":"/ leave the data pointer dangling since that bucket is never written to","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":18891,"byte_end":18964,"line_start":391,"line_end":391,"column_start":5,"column_end":78}},{"value":"/ due to our load factor forcing us to always have at least 1 free bucket.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":18969,"byte_end":19045,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19050,"byte_end":19059,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19396,"byte_end":19413,"line_start":404,"line_end":404,"column_start":12,"column_end":29},"name":"try_with_capacity","qualname":"<RawTable<T, Global>>::try_with_capacity","value":"pub fn try_with_capacity(usize) -> Result<Self, TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to allocate a new hash table with at least enough capacity\n for inserting the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Attempts to allocate a new hash table with at least enough capacity","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19212,"byte_end":19283,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ for inserting the given number of elements without reallocating.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19288,"byte_end":19356,"line_start":402,"line_end":402,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19361,"byte_end":19384,"line_start":403,"line_end":403,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19675,"byte_end":19688,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<RawTable<T, Global>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new hash table with at least enough capacity for inserting\n the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Allocates a new hash table with at least enough capacity for inserting","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19530,"byte_end":19604,"line_start":408,"line_end":408,"column_start":5,"column_end":79}},{"value":"/ the given number of elements without reallocating.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19609,"byte_end":19663,"line_start":409,"line_end":409,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":20195,"byte_end":20201,"line_start":423,"line_end":423,"column_start":12,"column_end":18},"name":"new_in","qualname":"<RawTable<T, A>>::new_in","value":"pub fn new_in(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash table without allocating any memory, using the\n given allocator.","sig":null,"attributes":[{"value":"/ Creates a new empty hash table without allocating any memory, using the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19825,"byte_end":19900,"line_start":416,"line_end":416,"column_start":5,"column_end":80}},{"value":"/ given allocator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19905,"byte_end":19925,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19930,"byte_end":19933,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ In effect this returns a table with exactly 1 bucket. However we can","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19938,"byte_end":20010,"line_start":419,"line_end":419,"column_start":5,"column_end":77}},{"value":"/ leave the data pointer dangling since that bucket is never written to","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":20015,"byte_end":20088,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ due to our load factor forcing us to always have at least 1 free bucket.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":20093,"byte_end":20169,"line_start":421,"line_end":421,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":20174,"byte_end":20183,"line_start":422,"line_end":422,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":21744,"byte_end":21764,"line_start":473,"line_end":473,"column_start":12,"column_end":32},"name":"try_with_capacity_in","qualname":"<RawTable<T, A>>::try_with_capacity_in","value":"pub fn try_with_capacity_in(usize, A) -> Result<Self, TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to allocate a new hash table using the given allocator, with at least enough\n capacity for inserting the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Attempts to allocate a new hash table using the given allocator, with at least enough","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":21533,"byte_end":21622,"line_start":470,"line_end":470,"column_start":5,"column_end":94}},{"value":"/ capacity for inserting the given number of elements without reallocating.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":21627,"byte_end":21704,"line_start":471,"line_end":471,"column_start":5,"column_end":82}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":21709,"byte_end":21732,"line_start":472,"line_end":472,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":22087,"byte_end":22103,"line_start":479,"line_end":479,"column_start":12,"column_end":28},"name":"with_capacity_in","qualname":"<RawTable<T, A>>::with_capacity_in","value":"pub fn with_capacity_in(usize, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new hash table using the given allocator, with at least enough capacity for\n inserting the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Allocates a new hash table using the given allocator, with at least enough capacity for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":21915,"byte_end":22006,"line_start":477,"line_end":477,"column_start":5,"column_end":96}},{"value":"/ inserting the given number of elements without reallocating.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":22011,"byte_end":22075,"line_start":478,"line_end":478,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":22498,"byte_end":22507,"line_start":489,"line_end":489,"column_start":12,"column_end":21},"name":"allocator","qualname":"<RawTable<T, A>>::allocator","value":"pub fn allocator(&Self) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying allocator.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying allocator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":22420,"byte_end":22472,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":22477,"byte_end":22486,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":22866,"byte_end":22874,"line_start":501,"line_end":501,"column_start":19,"column_end":27},"name":"data_end","qualname":"<RawTable<T, A>>::data_end","value":"pub unsafe fn data_end(&Self) -> NonNull<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns pointer to one past last element of data table.\n","sig":null,"attributes":[{"value":"/ Returns pointer to one past last element of data table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":22774,"byte_end":22833,"line_start":499,"line_end":499,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":22838,"byte_end":22847,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23267,"byte_end":23279,"line_start":514,"line_end":514,"column_start":19,"column_end":31},"name":"bucket_index","qualname":"<RawTable<T, A>>::bucket_index","value":"pub unsafe fn bucket_index(&Self, &Bucket<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of a bucket from a `Bucket`.\n","sig":null,"attributes":[{"value":"/ Returns the index of a bucket from a `Bucket`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23184,"byte_end":23234,"line_start":512,"line_end":512,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23239,"byte_end":23248,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23457,"byte_end":23463,"line_start":520,"line_end":520,"column_start":19,"column_end":25},"name":"bucket","qualname":"<RawTable<T, A>>::bucket","value":"pub unsafe fn bucket(&Self, usize) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to an element in the table.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to an element in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23375,"byte_end":23424,"line_start":518,"line_end":518,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23429,"byte_end":23438,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23865,"byte_end":23878,"line_start":529,"line_end":529,"column_start":19,"column_end":32},"name":"erase_no_drop","qualname":"<RawTable<T, A>>::erase_no_drop","value":"pub unsafe fn erase_no_drop(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table without dropping it.\n","sig":null,"attributes":[{"value":"/ Erases an element from the table without dropping it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23667,"byte_end":23724,"line_start":526,"line_end":526,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.8.1\", note = \"use erase or remove instead\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23778,"byte_end":23846,"line_start":528,"line_end":528,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":24196,"byte_end":24201,"line_start":538,"line_end":538,"column_start":19,"column_end":24},"name":"erase","qualname":"<RawTable<T, A>>::erase","value":"pub unsafe fn erase(&mut Self, Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table, dropping it in place.\n","sig":null,"attributes":[{"value":"/ Erases an element from the table, dropping it in place.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":23999,"byte_end":24058,"line_start":534,"line_end":534,"column_start":5,"column_end":64}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":24112,"byte_end":24152,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":24157,"byte_end":24177,"line_start":537,"line_end":537,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":24577,"byte_end":24588,"line_start":548,"line_end":548,"column_start":12,"column_end":23},"name":"erase_entry","qualname":"<RawTable<T, A>>::erase_entry","value":"pub fn erase_entry<impl FnMut(&T) -> bool: FnMut(&T) ->\nbool>(&mut Self, u64, impl FnMut(&T) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Finds and erases an element from the table, dropping it in place.\n Returns true if an element was found.\n","sig":null,"attributes":[{"value":"/ Finds and erases an element from the table, dropping it in place.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":24373,"byte_end":24442,"line_start":544,"line_end":544,"column_start":5,"column_end":74}},{"value":"/ Returns true if an element was found.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":24447,"byte_end":24488,"line_start":545,"line_end":545,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":24493,"byte_end":24516,"line_start":546,"line_end":546,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25093,"byte_end":25099,"line_start":564,"line_end":564,"column_start":19,"column_end":25},"name":"remove","qualname":"<RawTable<T, A>>::remove","value":"pub unsafe fn remove(&mut Self, Bucket<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes an element from the table, returning it.\n","sig":null,"attributes":[{"value":"/ Removes an element from the table, returning it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":24903,"byte_end":24955,"line_start":560,"line_end":560,"column_start":5,"column_end":57}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25009,"byte_end":25049,"line_start":562,"line_end":562,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25054,"byte_end":25074,"line_start":563,"line_end":563,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25324,"byte_end":25336,"line_start":571,"line_end":571,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawTable<T, A>>::remove_entry","value":"pub fn remove_entry<impl FnMut(&T) -> bool: FnMut(&T) ->\nbool>(&mut Self, u64, impl FnMut(&T) -> bool) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Finds and removes an element from the table, returning it.\n","sig":null,"attributes":[{"value":"/ Finds and removes an element from the table, returning it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25201,"byte_end":25263,"line_start":569,"line_end":569,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25739,"byte_end":25752,"line_start":581,"line_end":581,"column_start":12,"column_end":25},"name":"clear_no_drop","qualname":"<RawTable<T, A>>::clear_no_drop","value":"pub fn clear_no_drop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Marks all table buckets as empty without dropping their contents.\n","sig":null,"attributes":[{"value":"/ Marks all table buckets as empty without dropping their contents.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25609,"byte_end":25678,"line_start":579,"line_end":579,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25949,"byte_end":25954,"line_start":587,"line_end":587,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawTable<T, A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the table without freeing the backing memory.\n","sig":null,"attributes":[{"value":"/ Removes all elements from the table without freeing the backing memory.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":25813,"byte_end":25888,"line_start":585,"line_end":585,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":26504,"byte_end":26513,"line_start":605,"line_end":605,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<RawTable<T, A>>::shrink_to","value":"pub fn shrink_to<impl Fn(&T) -> u64: Fn(&T) ->\nu64>(&mut Self, usize, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the table to fit `max(self.len(), min_size)` elements.\n","sig":null,"attributes":[{"value":"/ Shrinks the table to fit `max(self.len(), min_size)` elements.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":26377,"byte_end":26443,"line_start":603,"line_end":603,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":28041,"byte_end":28048,"line_start":643,"line_end":643,"column_start":12,"column_end":19},"name":"reserve","qualname":"<RawTable<T, A>>::reserve","value":"pub fn reserve<impl Fn(&T) -> u64: Fn(&T) ->\nu64>(&mut Self, usize, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that at least `additional` items can be inserted into the table\n without reallocation.\n","sig":null,"attributes":[{"value":"/ Ensures that at least `additional` items can be inserted into the table","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":27875,"byte_end":27950,"line_start":640,"line_end":640,"column_start":5,"column_end":80}},{"value":"/ without reallocation.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":27955,"byte_end":27980,"line_start":641,"line_end":641,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":28634,"byte_end":28645,"line_start":658,"line_end":658,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<RawTable<T, A>>::try_reserve","value":"pub fn try_reserve<impl Fn(&T) -> u64: Fn(&T) ->\nu64>(&mut Self, usize, impl Fn(&T) -> u64) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to ensure that at least `additional` items can be inserted into\n the table without reallocation.\n","sig":null,"attributes":[{"value":"/ Tries to ensure that at least `additional` items can be inserted into","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":28460,"byte_end":28533,"line_start":655,"line_end":655,"column_start":5,"column_end":78}},{"value":"/ the table without reallocation.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":28538,"byte_end":28573,"line_start":656,"line_end":656,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":30440,"byte_end":30446,"line_start":716,"line_end":716,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawTable<T, A>>::insert","value":"pub fn insert<impl Fn(&T) -> u64: Fn(&T) ->\nu64>(&mut Self, u64, T, impl Fn(&T) -> u64) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, and returns its raw bucket.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, and returns its raw bucket.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":30224,"byte_end":30293,"line_start":712,"line_end":712,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":30298,"byte_end":30301,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":30306,"byte_end":30379,"line_start":714,"line_end":714,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":31645,"byte_end":31663,"line_start":745,"line_end":745,"column_start":12,"column_end":30},"name":"try_insert_no_grow","qualname":"<RawTable<T, A>>::try_insert_no_grow","value":"pub fn try_insert_no_grow(&mut Self, u64, T) -> Result<Bucket<T>, T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to insert a new element without growing the table and return its raw bucket.","sig":null,"attributes":[{"value":"/ Attempts to insert a new element without growing the table and return its raw bucket.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":31262,"byte_end":31351,"line_start":737,"line_end":737,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":31356,"byte_end":31359,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` containing the given element if inserting it would require growing the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":31364,"byte_end":31455,"line_start":739,"line_end":739,"column_start":5,"column_end":96}},{"value":"/ table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":31460,"byte_end":31470,"line_start":740,"line_end":740,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":31475,"byte_end":31478,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":31483,"byte_end":31556,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":31561,"byte_end":31584,"line_start":743,"line_end":743,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32274,"byte_end":32286,"line_start":762,"line_end":762,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<RawTable<T, A>>::insert_entry","value":"pub fn insert_entry<impl Fn(&T) -> u64: Fn(&T) ->\nu64>(&mut Self, u64, T, impl Fn(&T) -> u64) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32047,"byte_end":32127,"line_start":758,"line_end":758,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32132,"byte_end":32135,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32140,"byte_end":32213,"line_start":760,"line_end":760,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32801,"byte_end":32815,"line_start":773,"line_end":773,"column_start":19,"column_end":33},"name":"insert_no_grow","qualname":"<RawTable<T, A>>::insert_no_grow","value":"pub unsafe fn insert_no_grow(&mut Self, u64, T) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, without growing the table.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, without growing the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32431,"byte_end":32499,"line_start":766,"line_end":766,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32504,"byte_end":32507,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ There must be enough space in the table to insert the new element.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32512,"byte_end":32582,"line_start":768,"line_end":768,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32587,"byte_end":32590,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32595,"byte_end":32668,"line_start":770,"line_end":770,"column_start":5,"column_end":78}},{"value":"cfg(any(feature = \"raw\", feature = \"rustc-internal-api\"))","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":32722,"byte_end":32782,"line_start":772,"line_end":772,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":33614,"byte_end":33633,"line_start":793,"line_end":793,"column_start":19,"column_end":38},"name":"replace_bucket_with","qualname":"<RawTable<T, A>>::replace_bucket_with","value":"pub unsafe fn replace_bucket_with<F>(&mut Self, Bucket<T>, F) -> bool where\nF: FnOnce(T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Temporary removes a bucket, applying the given function to the removed\n element and optionally put back the returned value in the same bucket.","sig":null,"attributes":[{"value":"/ Temporary removes a bucket, applying the given function to the removed","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":33244,"byte_end":33318,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ element and optionally put back the returned value in the same bucket.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":33323,"byte_end":33397,"line_start":787,"line_end":787,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":33402,"byte_end":33405,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the bucket still contains an element","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":33410,"byte_end":33468,"line_start":789,"line_end":789,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":33473,"byte_end":33476,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given bucket is actually occupied.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":33481,"byte_end":33546,"line_start":791,"line_end":791,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":34333,"byte_end":34337,"line_start":815,"line_end":815,"column_start":12,"column_end":16},"name":"find","qualname":"<RawTable<T, A>>::find","value":"pub fn find<impl FnMut(&T) -> bool: FnMut(&T) ->\nbool>(&Self, u64, impl FnMut(&T) -> bool) -> Option<Bucket<T>>","parent":null,"children":[],"decl_id":null,"docs":" Searches for an element in the table.\n","sig":null,"attributes":[{"value":"/ Searches for an element in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":34266,"byte_end":34307,"line_start":813,"line_end":813,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":34312,"byte_end":34321,"line_start":814,"line_end":814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":34805,"byte_end":34808,"line_start":829,"line_end":829,"column_start":12,"column_end":15},"name":"get","qualname":"<RawTable<T, A>>::get","value":"pub fn get<impl FnMut(&T) -> bool: FnMut(&T) ->\nbool>(&Self, u64, impl FnMut(&T) -> bool) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to an element in the table.\n","sig":null,"attributes":[{"value":"/ Gets a reference to an element in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":34731,"byte_end":34779,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":34784,"byte_end":34793,"line_start":828,"line_end":828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35156,"byte_end":35163,"line_start":839,"line_end":839,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawTable<T, A>>::get_mut","value":"pub fn get_mut<impl FnMut(&T) -> bool: FnMut(&T) ->\nbool>(&mut Self, u64, impl FnMut(&T) -> bool) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to an element in the table.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to an element in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35074,"byte_end":35130,"line_start":837,"line_end":837,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35135,"byte_end":35144,"line_start":838,"line_end":838,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35945,"byte_end":35957,"line_start":856,"line_end":856,"column_start":12,"column_end":24},"name":"get_many_mut","qualname":"<RawTable<T, A>>::get_many_mut","value":"pub fn get_many_mut<const N: usize,\nimpl FnMut(usize, &T) -> bool: FnMut(usize, &T) ->\nbool>(&mut Self, [u64; ], impl FnMut(usize, &T) -> bool) -> Option<[&mut T; ]>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` entries in the table at once.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` entries in the table at once.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35437,"byte_end":35512,"line_start":847,"line_end":847,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35517,"byte_end":35520,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35525,"byte_end":35591,"line_start":849,"line_end":849,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35596,"byte_end":35599,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ At most one mutable reference will be returned to any entry. `None` will be returned if any","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35604,"byte_end":35699,"line_start":851,"line_end":851,"column_start":5,"column_end":100}},{"value":"/ of the hashes are duplicates. `None` will be returned if the hash is not found.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35704,"byte_end":35787,"line_start":852,"line_end":852,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35792,"byte_end":35795,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ The `eq` argument should be a closure such that `eq(i, k)` returns true if `k` is equal to","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35800,"byte_end":35894,"line_start":854,"line_end":854,"column_start":5,"column_end":99}},{"value":"/ the `i`th key to be looked up.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":35899,"byte_end":35933,"line_start":855,"line_end":855,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":36676,"byte_end":36698,"line_start":877,"line_end":877,"column_start":19,"column_end":41},"name":"get_many_unchecked_mut","qualname":"<RawTable<T, A>>::get_many_unchecked_mut","value":"pub unsafe fn get_many_unchecked_mut<const N: usize,\nimpl FnMut(usize, &T) -> bool: FnMut(usize, &T) ->\nbool>(&mut Self, [u64; ], impl FnMut(usize, &T) -> bool) -> Option<[&mut T; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":37877,"byte_end":37885,"line_start":909,"line_end":909,"column_start":12,"column_end":20},"name":"capacity","qualname":"<RawTable<T, A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":37629,"byte_end":37702,"line_start":904,"line_end":904,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":37707,"byte_end":37710,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the table might be able to hold","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":37715,"byte_end":37780,"line_start":906,"line_end":906,"column_start":5,"column_end":70}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":37785,"byte_end":37851,"line_start":907,"line_end":907,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":37856,"byte_end":37865,"line_start":908,"line_end":908,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38039,"byte_end":38042,"line_start":915,"line_end":915,"column_start":12,"column_end":15},"name":"len","qualname":"<RawTable<T, A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the table.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":37965,"byte_end":38013,"line_start":913,"line_end":913,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38018,"byte_end":38027,"line_start":914,"line_end":914,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38176,"byte_end":38184,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RawTable<T, A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the table contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the table contains no elements.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38097,"byte_end":38150,"line_start":919,"line_end":919,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38155,"byte_end":38164,"line_start":920,"line_end":920,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38310,"byte_end":38317,"line_start":927,"line_end":927,"column_start":12,"column_end":19},"name":"buckets","qualname":"<RawTable<T, A>>::buckets","value":"pub fn buckets(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of buckets in the table.\n","sig":null,"attributes":[{"value":"/ Returns the number of buckets in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38237,"byte_end":38284,"line_start":925,"line_end":925,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38289,"byte_end":38298,"line_start":926,"line_end":926,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38687,"byte_end":38691,"line_start":936,"line_end":936,"column_start":19,"column_end":23},"name":"iter","qualname":"<RawTable<T, A>>::iter","value":"pub unsafe fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over every element in the table. It is up to\n the caller to ensure that the `RawTable` outlives the `RawIter`.\n Because we cannot make the `next` method unsafe on the `RawIter`\n struct, we have to make the `iter` method unsafe.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over every element in the table. It is up to","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38382,"byte_end":38450,"line_start":931,"line_end":931,"column_start":5,"column_end":73}},{"value":"/ the caller to ensure that the `RawTable` outlives the `RawIter`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38455,"byte_end":38523,"line_start":932,"line_end":932,"column_start":5,"column_end":73}},{"value":"/ Because we cannot make the `next` method unsafe on the `RawIter`","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38528,"byte_end":38596,"line_start":933,"line_end":933,"column_start":5,"column_end":73}},{"value":"/ struct, we have to make the `iter` method unsafe.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38601,"byte_end":38654,"line_start":934,"line_end":934,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38659,"byte_end":38668,"line_start":935,"line_end":935,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39592,"byte_end":39601,"line_start":955,"line_end":955,"column_start":19,"column_end":28},"name":"iter_hash","qualname":"<RawTable<T, A>>::iter_hash","value":"pub unsafe fn iter_hash(&Self, u64) -> RawIterHash<, T, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[{"value":"/ Returns an iterator over occupied buckets that could match a given hash.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":38946,"byte_end":39022,"line_start":944,"line_end":944,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39027,"byte_end":39030,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ `RawTable` only stores 7 bits of the hash value, so this iterator may","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39035,"byte_end":39108,"line_start":946,"line_end":946,"column_start":5,"column_end":78}},{"value":"/ return items that have a hash value different than the one provided. You","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39113,"byte_end":39189,"line_start":947,"line_end":947,"column_start":5,"column_end":81}},{"value":"/ should always validate the returned values before using them.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39194,"byte_end":39259,"line_start":948,"line_end":948,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39264,"byte_end":39267,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the `RawTable` outlives the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39272,"byte_end":39341,"line_start":950,"line_end":950,"column_start":5,"column_end":74}},{"value":"/ `RawIterHash`. Because we cannot make the `next` method unsafe on the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39346,"byte_end":39419,"line_start":951,"line_end":951,"column_start":5,"column_end":78}},{"value":"/ `RawIterHash` struct, we have to make the `iter_hash` method unsafe.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39424,"byte_end":39496,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39550,"byte_end":39573,"line_start":954,"line_end":954,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39857,"byte_end":39862,"line_start":962,"line_end":962,"column_start":12,"column_end":17},"name":"drain","qualname":"<RawTable<T, A>>::drain","value":"pub fn drain(&mut Self) -> RawDrain<, T, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which removes all elements from the table without","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39695,"byte_end":39768,"line_start":959,"line_end":959,"column_start":5,"column_end":78}},{"value":"/ freeing the memory.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":39773,"byte_end":39796,"line_start":960,"line_end":960,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40409,"byte_end":40424,"line_start":977,"line_end":977,"column_start":19,"column_end":34},"name":"drain_iter_from","qualname":"<RawTable<T, A>>::drain_iter_from","value":"pub unsafe fn drain_iter_from(&mut Self, RawIter<T>) -> RawDrain<, T, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.","sig":null,"attributes":[{"value":"/ Returns an iterator which removes all elements from the table without","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40011,"byte_end":40084,"line_start":969,"line_end":969,"column_start":5,"column_end":78}},{"value":"/ freeing the memory.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40089,"byte_end":40112,"line_start":970,"line_end":970,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40117,"byte_end":40120,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Iteration starts at the provided iterator's current location.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40125,"byte_end":40190,"line_start":972,"line_end":972,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40195,"byte_end":40198,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the iterator is valid for this","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40203,"byte_end":40275,"line_start":974,"line_end":974,"column_start":5,"column_end":77}},{"value":"/ `RawTable` and covers all items that remain in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40280,"byte_end":40341,"line_start":975,"line_end":975,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":41077,"byte_end":41091,"line_start":993,"line_end":993,"column_start":19,"column_end":33},"name":"into_iter_from","qualname":"<RawTable<T, A>>::into_iter_from","value":"pub unsafe fn into_iter_from(Self, RawIter<T>) -> RawIntoIter<T, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which consumes all elements from the table.","sig":null,"attributes":[{"value":"/ Returns an iterator which consumes all elements from the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40762,"byte_end":40829,"line_start":987,"line_end":987,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40834,"byte_end":40837,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ Iteration starts at the provided iterator's current location.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40842,"byte_end":40907,"line_start":989,"line_end":989,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40912,"byte_end":40915,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the iterator is valid for this","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40920,"byte_end":40992,"line_start":991,"line_end":991,"column_start":5,"column_end":77}},{"value":"/ `RawTable` and covers all items that remain in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":40997,"byte_end":41058,"line_start":992,"line_end":992,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":68867,"byte_end":68889,"line_start":1739,"line_end":1739,"column_start":12,"column_end":34},"name":"clone_from_with_hasher","qualname":"<RawTable<T, A>>::clone_from_with_hasher","value":"pub fn clone_from_with_hasher<impl Fn(&T) -> u64: Fn(&T) ->\nu64>(&mut Self, &Self, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Variant of `clone_from` to use when a hasher is available.\n","sig":null,"attributes":[{"value":"/ Variant of `clone_from` to use when a hasher is available.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":68765,"byte_end":68827,"line_start":1737,"line_end":1737,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":68832,"byte_end":68855,"line_start":1738,"line_end":1738,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78348,"byte_end":78355,"line_start":1994,"line_end":1994,"column_start":12,"column_end":19},"name":"RawIter","qualname":"::raw::inner::RawIter","value":"RawIter {  }","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"decl_id":null,"docs":" Iterator which returns a raw pointer to every full bucket in the table.","sig":null,"attributes":[{"value":"/ Iterator which returns a raw pointer to every full bucket in the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77541,"byte_end":77616,"line_start":1982,"line_end":1982,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77617,"byte_end":77620,"line_start":1983,"line_end":1983,"column_start":1,"column_end":4}},{"value":"/ For maximum flexibility this iterator is not bound by a lifetime, but you","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77621,"byte_end":77698,"line_start":1984,"line_end":1984,"column_start":1,"column_end":78}},{"value":"/ must observe several rules when using it:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77699,"byte_end":77744,"line_start":1985,"line_end":1985,"column_start":1,"column_end":46}},{"value":"/ - You must not free the hash table while iterating (including via growing/shrinking).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77745,"byte_end":77834,"line_start":1986,"line_end":1986,"column_start":1,"column_end":90}},{"value":"/ - It is fine to erase a bucket that has been yielded by the iterator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77835,"byte_end":77908,"line_start":1987,"line_end":1987,"column_start":1,"column_end":74}},{"value":"/ - Erasing a bucket that has not yet been yielded by the iterator may still","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77909,"byte_end":77987,"line_start":1988,"line_end":1988,"column_start":1,"column_end":79}},{"value":"/   result in the iterator yielding that bucket (unless `reflect_remove` is called).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77988,"byte_end":78074,"line_start":1989,"line_end":1989,"column_start":1,"column_end":87}},{"value":"/ - It is unspecified whether an element inserted after the iterator was","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78075,"byte_end":78149,"line_start":1990,"line_end":1990,"column_start":1,"column_end":75}},{"value":"/   created will be yielded by that iterator (unless `reflect_insert` is called).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78150,"byte_end":78233,"line_start":1991,"line_end":1991,"column_start":1,"column_end":84}},{"value":"/ - The order in which the iterator yields bucket is unspecified and may","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78234,"byte_end":78308,"line_start":1992,"line_end":1992,"column_start":1,"column_end":75}},{"value":"/   change in the future.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78309,"byte_end":78336,"line_start":1993,"line_end":1993,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78898,"byte_end":78912,"line_start":2008,"line_end":2008,"column_start":12,"column_end":26},"name":"reflect_remove","qualname":"<RawIter<T>>::reflect_remove","value":"pub fn reflect_remove(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects a removal from the given bucket.","sig":null,"attributes":[{"value":"/ Refresh the iterator so that it reflects a removal from the given bucket.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78445,"byte_end":78522,"line_start":2000,"line_end":2000,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78527,"byte_end":78530,"line_start":2001,"line_end":2001,"column_start":5,"column_end":8}},{"value":"/ For the iterator to remain valid, this method must be called once","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78535,"byte_end":78604,"line_start":2002,"line_end":2002,"column_start":5,"column_end":74}},{"value":"/ for each removed bucket before `next` is called again.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78609,"byte_end":78667,"line_start":2003,"line_end":2003,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78672,"byte_end":78675,"line_start":2004,"line_end":2004,"column_start":5,"column_end":8}},{"value":"/ This method should be called _before_ the removal is made. It is not necessary to call this","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78680,"byte_end":78775,"line_start":2005,"line_end":2005,"column_start":5,"column_end":100}},{"value":"/ method if you are removing an item that this iterator yielded in the past.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78780,"byte_end":78858,"line_start":2006,"line_end":2006,"column_start":5,"column_end":83}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78863,"byte_end":78886,"line_start":2007,"line_end":2007,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79499,"byte_end":79513,"line_start":2022,"line_end":2022,"column_start":12,"column_end":26},"name":"reflect_insert","qualname":"<RawIter<T>>::reflect_insert","value":"pub fn reflect_insert(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects an insertion into the given bucket.","sig":null,"attributes":[{"value":"/ Refresh the iterator so that it reflects an insertion into the given bucket.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78996,"byte_end":79076,"line_start":2012,"line_end":2012,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79081,"byte_end":79084,"line_start":2013,"line_end":2013,"column_start":5,"column_end":8}},{"value":"/ For the iterator to remain valid, this method must be called once","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79089,"byte_end":79158,"line_start":2014,"line_end":2014,"column_start":5,"column_end":74}},{"value":"/ for each insert before `next` is called again.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79163,"byte_end":79213,"line_start":2015,"line_end":2015,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79218,"byte_end":79221,"line_start":2016,"line_end":2016,"column_start":5,"column_end":8}},{"value":"/ This method does not guarantee that an insertion of a bucket with a greater","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79226,"byte_end":79305,"line_start":2017,"line_end":2017,"column_start":5,"column_end":84}},{"value":"/ index than the last one yielded will be reflected in the iterator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79310,"byte_end":79380,"line_start":2018,"line_end":2018,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79385,"byte_end":79388,"line_start":2019,"line_end":2019,"column_start":5,"column_end":8}},{"value":"/ This method should be called _after_ the given insert is made.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79393,"byte_end":79459,"line_start":2020,"line_end":2020,"column_start":5,"column_end":71}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":79464,"byte_end":79487,"line_start":2021,"line_end":2021,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85614,"byte_end":85625,"line_start":2168,"line_end":2168,"column_start":12,"column_end":23},"name":"RawIntoIter","qualname":"::raw::inner::RawIntoIter","value":"RawIntoIter {  }","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"decl_id":null,"docs":" Iterator which consumes a table and returns elements.\n","sig":null,"attributes":[{"value":"/ Iterator which consumes a table and returns elements.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85545,"byte_end":85602,"line_start":2167,"line_end":2167,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85886,"byte_end":85890,"line_start":2177,"line_end":2177,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawIntoIter<T, A>>::iter","value":"pub fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":87603,"byte_end":87611,"line_start":2244,"line_end":2244,"column_start":12,"column_end":20},"name":"RawDrain","qualname":"::raw::inner::RawDrain","value":"RawDrain {  }","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"decl_id":null,"docs":" Iterator which consumes elements without freeing the table storage.\n","sig":null,"attributes":[{"value":"/ Iterator which consumes elements without freeing the table storage.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":87520,"byte_end":87591,"line_start":2243,"line_end":2243,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88195,"byte_end":88199,"line_start":2260,"line_end":2260,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawDrain>::iter","value":"pub fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89893,"byte_end":89904,"line_start":2322,"line_end":2322,"column_start":12,"column_end":23},"name":"RawIterHash","qualname":"::raw::inner::RawIterHash","value":"RawIterHash {  }","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"decl_id":null,"docs":" Iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[{"value":"/ Iterator over occupied buckets that could match a given hash.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89595,"byte_end":89660,"line_start":2317,"line_end":2317,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89661,"byte_end":89664,"line_start":2318,"line_end":2318,"column_start":1,"column_end":4}},{"value":"/ `RawTable` only stores 7 bits of the hash value, so this iterator may return","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89665,"byte_end":89745,"line_start":2319,"line_end":2319,"column_start":1,"column_end":81}},{"value":"/ items that have a hash value different than the one provided. You should","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89746,"byte_end":89822,"line_start":2320,"line_end":2320,"column_start":1,"column_end":77}},{"value":"/ always validate the returned values before using them.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89823,"byte_end":89881,"line_start":2321,"line_end":2321,"column_start":1,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100510,"byte_end":100528,"line_start":17,"line_end":17,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"pub enum DefaultHashBuilder { }","parent":null,"children":[],"decl_id":null,"docs":" Dummy default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"/ Dummy default hasher for `HashMap`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100430,"byte_end":100469,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"cfg(not(feature = \"ahash\"))","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100470,"byte_end":100500,"line_start":16,"line_end":16,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106799,"byte_end":106806,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100533,"byte_end":100599,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100600,"byte_end":100603,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The default hashing algorithm is currently [`AHash`], though this is","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100604,"byte_end":100676,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ subject to change at any point in the future. This hash function is very","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100677,"byte_end":100753,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ fast for all types of keys, but this algorithm will typically *not* protect","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100754,"byte_end":100833,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ against attacks such as HashDoS.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100834,"byte_end":100870,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100871,"byte_end":100874,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The hashing algorithm can be replaced on a per-`HashMap` basis using the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100875,"byte_end":100951,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":100952,"byte_end":101032,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ alternative algorithms are available on crates.io, such as the [`fnv`] crate.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101033,"byte_end":101114,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101115,"byte_end":101118,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is required that the keys implement the [`Eq`] and [`Hash`] traits, although","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101119,"byte_end":101202,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ this can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101203,"byte_end":101281,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101282,"byte_end":101353,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ property holds:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101354,"byte_end":101373,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101374,"byte_end":101377,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101378,"byte_end":101389,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101390,"byte_end":101426,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101427,"byte_end":101434,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101435,"byte_end":101438,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101439,"byte_end":101509,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101510,"byte_end":101513,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101514,"byte_end":101591,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ hash, as determined by the [`Hash`] trait, or its equality, as determined by","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101592,"byte_end":101672,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ the [`Eq`] trait, changes while it is in the map. This is normally only","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101673,"byte_end":101748,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101749,"byte_end":101827,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101828,"byte_end":101831,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101832,"byte_end":101911,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101912,"byte_end":101990,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashMap` may become corrupted and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":101991,"byte_end":102071,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102072,"byte_end":102117,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102118,"byte_end":102121,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102122,"byte_end":102136,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102137,"byte_end":102140,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102141,"byte_end":102148,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102149,"byte_end":102176,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102177,"byte_end":102180,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102181,"byte_end":102249,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<String, String>` in this example).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102250,"byte_end":102309,"line_start":57,"line_end":57,"column_start":1,"column_end":60}},{"value":"/ let mut book_reviews = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102310,"byte_end":102352,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102353,"byte_end":102356,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Review some books.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102357,"byte_end":102382,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102383,"byte_end":102407,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     \"Adventures of Huckleberry Finn\".to_string(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102408,"byte_end":102461,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/     \"My favorite book.\".to_string(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102462,"byte_end":102502,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102503,"byte_end":102509,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102510,"byte_end":102534,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/     \"Grimms' Fairy Tales\".to_string(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102535,"byte_end":102577,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/     \"Masterpiece.\".to_string(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102578,"byte_end":102613,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102614,"byte_end":102620,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102621,"byte_end":102645,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     \"Pride and Prejudice\".to_string(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102646,"byte_end":102688,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/     \"Very enjoyable.\".to_string(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102689,"byte_end":102727,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102728,"byte_end":102734,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102735,"byte_end":102759,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     \"The Adventures of Sherlock Holmes\".to_string(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102760,"byte_end":102816,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/     \"Eye lyked it alot.\".to_string(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102817,"byte_end":102858,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102859,"byte_end":102865,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102866,"byte_end":102869,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102870,"byte_end":102902,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ // When collections store owned values (String), they can still be","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102903,"byte_end":102973,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"/ // queried using references (&str).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":102974,"byte_end":103013,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103014,"byte_end":103068,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103069,"byte_end":103141,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103142,"byte_end":103179,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103180,"byte_end":103185,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103186,"byte_end":103189,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103190,"byte_end":103263,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103264,"byte_end":103325,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103326,"byte_end":103329,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Look up the values associated with some keys.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103330,"byte_end":103382,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103383,"byte_end":103460,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ for &book in &to_find {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103461,"byte_end":103488,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103489,"byte_end":103527,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103528,"byte_end":103589,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103590,"byte_end":103645,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103646,"byte_end":103655,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103656,"byte_end":103661,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103662,"byte_end":103665,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // Look up the value for a key (will panic if the key is not found).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103666,"byte_end":103738,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ println!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103739,"byte_end":103812,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103813,"byte_end":103816,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103817,"byte_end":103848,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103849,"byte_end":103890,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103891,"byte_end":103936,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103937,"byte_end":103942,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103943,"byte_end":103950,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103951,"byte_end":103954,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `HashMap` also implements an [`Entry API`](#method.entry), which allows","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":103955,"byte_end":104030,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ for more complex methods of getting, setting, updating and removing keys and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104031,"byte_end":104111,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ their values:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104112,"byte_end":104129,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104130,"byte_end":104133,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104134,"byte_end":104141,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104142,"byte_end":104169,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104170,"byte_end":104173,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // type inference lets us omit an explicit type signature (which","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104174,"byte_end":104242,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<&str, u8>` in this example).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104243,"byte_end":104296,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/ let mut player_stats = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104297,"byte_end":104339,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104340,"byte_end":104343,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ fn random_stat_buff() -> u8 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104344,"byte_end":104377,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/     // could actually return some random value here - let's just return","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104378,"byte_end":104453,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/     // some fixed value for now","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104454,"byte_end":104489,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/     42","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104490,"byte_end":104500,"line_start":121,"line_end":121,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104501,"byte_end":104506,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104507,"byte_end":104510,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // insert a key only if it doesn't already exist","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104511,"byte_end":104563,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/ player_stats.entry(\"health\").or_insert(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104564,"byte_end":104612,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104613,"byte_end":104616,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // insert a key using a function that provides a new value only if it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104617,"byte_end":104690,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ // doesn't already exist","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104691,"byte_end":104719,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ player_stats.entry(\"defence\").or_insert_with(random_stat_buff);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104720,"byte_end":104787,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104788,"byte_end":104791,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // update a key, guarding against the key possibly not being set","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104792,"byte_end":104860,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ let stat = player_stats.entry(\"attack\").or_insert(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104861,"byte_end":104920,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/ *stat += random_stat_buff();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104921,"byte_end":104953,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104954,"byte_end":104961,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104962,"byte_end":104965,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":104966,"byte_end":105059,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/ We must also derive [`PartialEq`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105060,"byte_end":105098,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105099,"byte_end":105102,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105103,"byte_end":105162,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105163,"byte_end":105227,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105228,"byte_end":105301,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105302,"byte_end":105373,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105374,"byte_end":105439,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/ [`default`]: #method.default","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105440,"byte_end":105472,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ [`with_hasher`]: #method.with_hasher","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105473,"byte_end":105513,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/ [`with_capacity_and_hasher`]: #method.with_capacity_and_hasher","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105514,"byte_end":105580,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/ [`fnv`]: https://crates.io/crates/fnv","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105581,"byte_end":105622,"line_start":147,"line_end":147,"column_start":1,"column_end":42}},{"value":"/ [`AHash`]: https://crates.io/crates/ahash","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105623,"byte_end":105668,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105669,"byte_end":105672,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105673,"byte_end":105680,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105681,"byte_end":105708,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105709,"byte_end":105712,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105713,"byte_end":105754,"line_start":153,"line_end":153,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105755,"byte_end":105774,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105775,"byte_end":105796,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"/     country: String,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105797,"byte_end":105821,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105822,"byte_end":105827,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105828,"byte_end":105831,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ impl Viking {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105832,"byte_end":105849,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/     /// Creates a new Viking.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105850,"byte_end":105883,"line_start":160,"line_end":160,"column_start":1,"column_end":34}},{"value":"/     fn new(name: &str, country: &str) -> Viking {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105884,"byte_end":105937,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/         Viking { name: name.to_string(), country: country.to_string() }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":105938,"byte_end":106013,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106014,"byte_end":106023,"line_start":163,"line_end":163,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106024,"byte_end":106029,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106030,"byte_end":106033,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Use a HashMap to store the vikings' health points.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106034,"byte_end":106091,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/ let mut vikings = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106092,"byte_end":106129,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106130,"byte_end":106133,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106134,"byte_end":106189,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106190,"byte_end":106245,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106246,"byte_end":106303,"line_start":171,"line_end":171,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106304,"byte_end":106307,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the status of the vikings.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106308,"byte_end":106377,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for (viking, health) in &vikings {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106378,"byte_end":106416,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/     println!(\"{:?} has {} hp\", viking, health);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106417,"byte_end":106468,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106469,"byte_end":106474,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106475,"byte_end":106482,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106483,"byte_end":106486,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A `HashMap` with fixed list of elements can be initialized from an array:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106487,"byte_end":106564,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106565,"byte_end":106568,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106569,"byte_end":106576,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106577,"byte_end":106604,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106605,"byte_end":106608,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106609,"byte_end":106707,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/     .iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106708,"byte_end":106743,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/ // use the values stored in map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106744,"byte_end":106779,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":106780,"byte_end":106787,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113034,"byte_end":113045,"line_start":382,"line_end":382,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":111855,"byte_end":111931,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ keys.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":111936,"byte_end":111945,"line_start":353,"line_end":353,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":111950,"byte_end":111953,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":111958,"byte_end":112032,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ allocate until it is first inserted into.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112037,"byte_end":112082,"line_start":356,"line_end":356,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112087,"byte_end":112090,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112095,"byte_end":112158,"line_start":358,"line_end":358,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112163,"byte_end":112228,"line_start":359,"line_end":359,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112233,"byte_end":112296,"line_start":360,"line_end":360,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112301,"byte_end":112365,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112370,"byte_end":112373,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112378,"byte_end":112454,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112459,"byte_end":112523,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112528,"byte_end":112531,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112536,"byte_end":112550,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112555,"byte_end":112558,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112563,"byte_end":112570,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112575,"byte_end":112602,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112607,"byte_end":112655,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112660,"byte_end":112663,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112668,"byte_end":112710,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112715,"byte_end":112757,"line_start":373,"line_end":373,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.len(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112762,"byte_end":112791,"line_start":374,"line_end":374,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(map.capacity(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112796,"byte_end":112830,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112835,"byte_end":112838,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ map.insert(1, 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112843,"byte_end":112864,"line_start":377,"line_end":377,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112869,"byte_end":112876,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112881,"byte_end":112884,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":112889,"byte_end":112967,"line_start":380,"line_end":380,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114401,"byte_end":114425,"line_start":419,"line_end":419,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113171,"byte_end":113251,"line_start":389,"line_end":389,"column_start":5,"column_end":85}},{"value":"/ to hash the keys.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113256,"byte_end":113277,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113282,"byte_end":113285,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113290,"byte_end":113364,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113369,"byte_end":113438,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113443,"byte_end":113446,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113451,"byte_end":113514,"line_start":395,"line_end":395,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113519,"byte_end":113584,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113589,"byte_end":113652,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113657,"byte_end":113721,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113726,"byte_end":113729,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113734,"byte_end":113810,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113815,"byte_end":113879,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113884,"byte_end":113887,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113892,"byte_end":113906,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113911,"byte_end":113914,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113919,"byte_end":113926,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113931,"byte_end":113958,"line_start":406,"line_end":406,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":113963,"byte_end":114011,"line_start":407,"line_end":407,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114016,"byte_end":114019,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114024,"byte_end":114066,"line_start":409,"line_end":409,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114071,"byte_end":114130,"line_start":410,"line_end":410,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(map.len(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114135,"byte_end":114164,"line_start":411,"line_end":411,"column_start":5,"column_end":34}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114169,"byte_end":114203,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114208,"byte_end":114211,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ map.insert(1, 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114216,"byte_end":114237,"line_start":414,"line_end":414,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114242,"byte_end":114249,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114254,"byte_end":114257,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114262,"byte_end":114340,"line_start":417,"line_end":417,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114724,"byte_end":114733,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"allocator","qualname":"<HashMap<K, V, S, A>>::allocator","value":"pub fn allocator(&Self) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying allocator.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying allocator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114646,"byte_end":114698,"line_start":428,"line_end":428,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114703,"byte_end":114712,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115610,"byte_end":115624,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_hasher_in","qualname":"<HashMap<K, V, S, A>>::with_hasher_in","value":"pub fn with_hasher_in(S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys. It will be allocated with the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114791,"byte_end":114867,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ keys. It will be allocated with the given allocator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114872,"byte_end":114928,"line_start":435,"line_end":435,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114933,"byte_end":114936,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114941,"byte_end":114994,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114999,"byte_end":115002,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115007,"byte_end":115070,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115075,"byte_end":115140,"line_start":440,"line_end":440,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115145,"byte_end":115208,"line_start":441,"line_end":441,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115213,"byte_end":115277,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115282,"byte_end":115285,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115290,"byte_end":115304,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115309,"byte_end":115312,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115317,"byte_end":115324,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115329,"byte_end":115356,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115361,"byte_end":115409,"line_start":448,"line_end":448,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115414,"byte_end":115417,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115422,"byte_end":115464,"line_start":450,"line_end":450,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115469,"byte_end":115511,"line_start":451,"line_end":451,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115516,"byte_end":115537,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115542,"byte_end":115549,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116715,"byte_end":116742,"line_start":484,"line_end":484,"column_start":12,"column_end":39},"name":"with_capacity_and_hasher_in","qualname":"<HashMap<K, V, S, A>>::with_capacity_and_hasher_in","value":"pub fn with_capacity_and_hasher_in(usize, S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys. It will be allocated with the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115768,"byte_end":115848,"line_start":462,"line_end":462,"column_start":5,"column_end":85}},{"value":"/ to hash the keys. It will be allocated with the given allocator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115853,"byte_end":115921,"line_start":463,"line_end":463,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115926,"byte_end":115929,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":115934,"byte_end":116008,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116013,"byte_end":116082,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116087,"byte_end":116090,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116095,"byte_end":116158,"line_start":468,"line_end":468,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116163,"byte_end":116228,"line_start":469,"line_end":469,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116233,"byte_end":116296,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116301,"byte_end":116365,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116370,"byte_end":116373,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116378,"byte_end":116392,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116397,"byte_end":116400,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116405,"byte_end":116412,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116417,"byte_end":116444,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116449,"byte_end":116497,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116502,"byte_end":116505,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116510,"byte_end":116552,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116557,"byte_end":116616,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116621,"byte_end":116642,"line_start":481,"line_end":481,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116647,"byte_end":116654,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117455,"byte_end":117461,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S, A>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116923,"byte_end":116976,"line_start":491,"line_end":491,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116981,"byte_end":116984,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":116989,"byte_end":117067,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117072,"byte_end":117075,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117080,"byte_end":117094,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117099,"byte_end":117102,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117107,"byte_end":117114,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117119,"byte_end":117146,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117151,"byte_end":117199,"line_start":499,"line_end":499,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117204,"byte_end":117207,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117212,"byte_end":117259,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_hasher(hasher);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117264,"byte_end":117326,"line_start":502,"line_end":502,"column_start":5,"column_end":67}},{"value":"/ let hasher: &DefaultHashBuilder = map.hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117331,"byte_end":117382,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117387,"byte_end":117394,"line_start":504,"line_end":504,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118039,"byte_end":118047,"line_start":524,"line_end":524,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S, A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117515,"byte_end":117588,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117593,"byte_end":117596,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `HashMap<K, V>` might be able to hold","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117601,"byte_end":117676,"line_start":512,"line_end":512,"column_start":5,"column_end":80}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117681,"byte_end":117747,"line_start":513,"line_end":513,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117752,"byte_end":117755,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117760,"byte_end":117774,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117779,"byte_end":117782,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117787,"byte_end":117794,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117799,"byte_end":117826,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117831,"byte_end":117892,"line_start":519,"line_end":519,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(map.len(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117897,"byte_end":117926,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117931,"byte_end":117966,"line_start":521,"line_end":521,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":117971,"byte_end":117978,"line_start":522,"line_end":522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118939,"byte_end":118943,"line_start":556,"line_end":556,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S, A>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118107,"byte_end":118160,"line_start":528,"line_end":528,"column_start":5,"column_end":58}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118165,"byte_end":118206,"line_start":529,"line_end":529,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118211,"byte_end":118214,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118219,"byte_end":118233,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118238,"byte_end":118241,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118246,"byte_end":118253,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118258,"byte_end":118285,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118290,"byte_end":118293,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118298,"byte_end":118331,"line_start":536,"line_end":536,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118336,"byte_end":118359,"line_start":537,"line_end":537,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118364,"byte_end":118387,"line_start":538,"line_end":538,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118392,"byte_end":118415,"line_start":539,"line_end":539,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118420,"byte_end":118449,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<&str> = Vec::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118454,"byte_end":118494,"line_start":541,"line_end":541,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118499,"byte_end":118502,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118507,"byte_end":118534,"line_start":543,"line_end":543,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118539,"byte_end":118567,"line_start":544,"line_end":544,"column_start":5,"column_end":33}},{"value":"/     vec.push(*key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118572,"byte_end":118595,"line_start":545,"line_end":545,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118600,"byte_end":118605,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118610,"byte_end":118613,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // The `Keys` iterator produces keys in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118618,"byte_end":118685,"line_start":548,"line_end":548,"column_start":5,"column_end":72}},{"value":"/ // keys must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118690,"byte_end":118753,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118758,"byte_end":118782,"line_start":550,"line_end":550,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [\"a\", \"b\", \"c\"]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118787,"byte_end":118824,"line_start":551,"line_end":551,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118829,"byte_end":118832,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118837,"byte_end":118866,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":118871,"byte_end":118878,"line_start":554,"line_end":554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119853,"byte_end":119859,"line_start":588,"line_end":588,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S, A>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119018,"byte_end":119073,"line_start":560,"line_end":560,"column_start":5,"column_end":60}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119078,"byte_end":119119,"line_start":561,"line_end":561,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119124,"byte_end":119127,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119132,"byte_end":119146,"line_start":563,"line_end":563,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119151,"byte_end":119154,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119159,"byte_end":119166,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119171,"byte_end":119198,"line_start":566,"line_end":566,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119203,"byte_end":119206,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119211,"byte_end":119244,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119249,"byte_end":119272,"line_start":569,"line_end":569,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119277,"byte_end":119300,"line_start":570,"line_end":570,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119305,"byte_end":119328,"line_start":571,"line_end":571,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119333,"byte_end":119362,"line_start":572,"line_end":572,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<i32> = Vec::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119367,"byte_end":119406,"line_start":573,"line_end":573,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119411,"byte_end":119414,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119419,"byte_end":119448,"line_start":575,"line_end":575,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119453,"byte_end":119481,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/     vec.push(*val);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119486,"byte_end":119509,"line_start":577,"line_end":577,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119514,"byte_end":119519,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119524,"byte_end":119527,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ // The `Values` iterator produces values in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119532,"byte_end":119603,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ // values must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119608,"byte_end":119673,"line_start":581,"line_end":581,"column_start":5,"column_end":70}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119678,"byte_end":119702,"line_start":582,"line_end":582,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [1, 2, 3]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119707,"byte_end":119738,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119743,"byte_end":119746,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119751,"byte_end":119780,"line_start":585,"line_end":585,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119785,"byte_end":119792,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120890,"byte_end":120900,"line_start":626,"line_end":626,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S, A>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":119938,"byte_end":120001,"line_start":592,"line_end":592,"column_start":5,"column_end":68}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120006,"byte_end":120051,"line_start":593,"line_end":593,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120056,"byte_end":120059,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120064,"byte_end":120078,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120083,"byte_end":120086,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120091,"byte_end":120098,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120103,"byte_end":120130,"line_start":598,"line_end":598,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120135,"byte_end":120138,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120143,"byte_end":120176,"line_start":600,"line_end":600,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120181,"byte_end":120184,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120189,"byte_end":120212,"line_start":602,"line_end":602,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120217,"byte_end":120240,"line_start":603,"line_end":603,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120245,"byte_end":120268,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120273,"byte_end":120276,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120281,"byte_end":120314,"line_start":606,"line_end":606,"column_start":5,"column_end":38}},{"value":"/     *val = *val + 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120319,"byte_end":120344,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120349,"byte_end":120354,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120359,"byte_end":120362,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120367,"byte_end":120396,"line_start":610,"line_end":610,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<i32> = Vec::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120401,"byte_end":120440,"line_start":611,"line_end":611,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120445,"byte_end":120448,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120453,"byte_end":120482,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120487,"byte_end":120515,"line_start":614,"line_end":614,"column_start":5,"column_end":33}},{"value":"/     vec.push(*val);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120520,"byte_end":120543,"line_start":615,"line_end":615,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120548,"byte_end":120553,"line_start":616,"line_end":616,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120558,"byte_end":120561,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // The `Values` iterator produces values in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120566,"byte_end":120637,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ // values must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120642,"byte_end":120707,"line_start":619,"line_end":619,"column_start":5,"column_end":70}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120712,"byte_end":120736,"line_start":620,"line_end":620,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [11, 12, 13]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120741,"byte_end":120775,"line_start":621,"line_end":621,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120780,"byte_end":120783,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120788,"byte_end":120817,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":120822,"byte_end":120829,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121923,"byte_end":121927,"line_start":660,"line_end":660,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S, A>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121014,"byte_end":121078,"line_start":632,"line_end":632,"column_start":5,"column_end":69}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121083,"byte_end":121133,"line_start":633,"line_end":633,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121138,"byte_end":121141,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121146,"byte_end":121160,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121165,"byte_end":121168,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121173,"byte_end":121180,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121185,"byte_end":121212,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121217,"byte_end":121220,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121225,"byte_end":121258,"line_start":640,"line_end":640,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121263,"byte_end":121286,"line_start":641,"line_end":641,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121291,"byte_end":121314,"line_start":642,"line_end":642,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121319,"byte_end":121342,"line_start":643,"line_end":643,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121347,"byte_end":121376,"line_start":644,"line_end":644,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<(&str, i32)> = Vec::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121381,"byte_end":121428,"line_start":645,"line_end":645,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121433,"byte_end":121436,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121441,"byte_end":121475,"line_start":647,"line_end":647,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121480,"byte_end":121526,"line_start":648,"line_end":648,"column_start":5,"column_end":51}},{"value":"/     vec.push((*key, *val));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121531,"byte_end":121562,"line_start":649,"line_end":649,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121567,"byte_end":121572,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121577,"byte_end":121580,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121585,"byte_end":121653,"line_start":652,"line_end":652,"column_start":5,"column_end":73}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121658,"byte_end":121722,"line_start":653,"line_end":653,"column_start":5,"column_end":69}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121727,"byte_end":121751,"line_start":654,"line_end":654,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121756,"byte_end":121808,"line_start":655,"line_end":655,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121813,"byte_end":121816,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121821,"byte_end":121850,"line_start":657,"line_end":657,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":121855,"byte_end":121862,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123235,"byte_end":123243,"line_start":705,"line_end":705,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S, A>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122162,"byte_end":122226,"line_start":670,"line_end":670,"column_start":5,"column_end":69}},{"value":"/ with mutable references to the values.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122231,"byte_end":122273,"line_start":671,"line_end":671,"column_start":5,"column_end":47}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122278,"byte_end":122332,"line_start":672,"line_end":672,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122337,"byte_end":122340,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122345,"byte_end":122359,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122364,"byte_end":122367,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122372,"byte_end":122379,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122384,"byte_end":122411,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122416,"byte_end":122419,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122424,"byte_end":122457,"line_start":679,"line_end":679,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122462,"byte_end":122485,"line_start":680,"line_end":680,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122490,"byte_end":122513,"line_start":681,"line_end":681,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122518,"byte_end":122541,"line_start":682,"line_end":682,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122546,"byte_end":122549,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122554,"byte_end":122578,"line_start":684,"line_end":684,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122583,"byte_end":122619,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/     *val *= 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122624,"byte_end":122642,"line_start":686,"line_end":686,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122647,"byte_end":122652,"line_start":687,"line_end":687,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122657,"byte_end":122660,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122665,"byte_end":122694,"line_start":689,"line_end":689,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<(&str, i32)> = Vec::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122699,"byte_end":122746,"line_start":690,"line_end":690,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122751,"byte_end":122754,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122759,"byte_end":122787,"line_start":692,"line_end":692,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122792,"byte_end":122838,"line_start":693,"line_end":693,"column_start":5,"column_end":51}},{"value":"/     vec.push((*key, *val));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122843,"byte_end":122874,"line_start":694,"line_end":694,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122879,"byte_end":122884,"line_start":695,"line_end":695,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122889,"byte_end":122892,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122897,"byte_end":122965,"line_start":697,"line_end":697,"column_start":5,"column_end":73}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":122970,"byte_end":123034,"line_start":698,"line_end":698,"column_start":5,"column_end":69}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123039,"byte_end":123063,"line_start":699,"line_end":699,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [(\"a\", 2), (\"b\", 4), (\"c\", 6)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123068,"byte_end":123120,"line_start":700,"line_end":700,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123125,"byte_end":123128,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123133,"byte_end":123162,"line_start":702,"line_end":702,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123167,"byte_end":123174,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123960,"byte_end":123963,"line_start":734,"line_end":734,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S, A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123628,"byte_end":123674,"line_start":721,"line_end":721,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123679,"byte_end":123682,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123687,"byte_end":123701,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123706,"byte_end":123709,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123714,"byte_end":123721,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123726,"byte_end":123753,"line_start":726,"line_end":726,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123758,"byte_end":123761,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123766,"byte_end":123797,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123802,"byte_end":123829,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123834,"byte_end":123855,"line_start":730,"line_end":730,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123860,"byte_end":123887,"line_start":731,"line_end":731,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":123892,"byte_end":123899,"line_start":732,"line_end":732,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124354,"byte_end":124362,"line_start":751,"line_end":751,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S, A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124018,"byte_end":124069,"line_start":738,"line_end":738,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124074,"byte_end":124077,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124082,"byte_end":124096,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124101,"byte_end":124104,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124109,"byte_end":124116,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124121,"byte_end":124148,"line_start":743,"line_end":743,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124153,"byte_end":124156,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124161,"byte_end":124192,"line_start":745,"line_end":745,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124197,"byte_end":124223,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124228,"byte_end":124249,"line_start":747,"line_end":747,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124254,"byte_end":124281,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124286,"byte_end":124293,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125736,"byte_end":125741,"line_start":794,"line_end":794,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S, A>>::drain","value":"pub fn drain(&mut Self) -> Drain<, K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, returning all key-value pairs as an iterator. Keeps the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124415,"byte_end":124490,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124495,"byte_end":124526,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124531,"byte_end":124534,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ If the returned iterator is dropped before being fully consumed, it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124539,"byte_end":124610,"line_start":758,"line_end":758,"column_start":5,"column_end":76}},{"value":"/ drops the remaining key-value pairs. The returned iterator keeps a","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124615,"byte_end":124685,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/ mutable borrow on the vector to optimize its implementation.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124690,"byte_end":124754,"line_start":760,"line_end":760,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124759,"byte_end":124762,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124767,"byte_end":124781,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124786,"byte_end":124789,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124794,"byte_end":124801,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124806,"byte_end":124833,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124838,"byte_end":124841,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124846,"byte_end":124877,"line_start":767,"line_end":767,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124882,"byte_end":124903,"line_start":768,"line_end":768,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124908,"byte_end":124929,"line_start":769,"line_end":769,"column_start":5,"column_end":26}},{"value":"/ let capacity_before_drain = a.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124934,"byte_end":124979,"line_start":770,"line_end":770,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124984,"byte_end":124987,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ for (k, v) in a.drain().take(1) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":124992,"byte_end":125029,"line_start":772,"line_end":772,"column_start":5,"column_end":42}},{"value":"/     assert!(k == 1 || k == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125034,"byte_end":125068,"line_start":773,"line_end":773,"column_start":5,"column_end":39}},{"value":"/     assert!(v == \"a\" || v == \"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125073,"byte_end":125111,"line_start":774,"line_end":774,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125116,"byte_end":125121,"line_start":775,"line_end":775,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125126,"byte_end":125129,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ // As we can see, the map is empty and contains no element.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125134,"byte_end":125197,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/ assert!(a.is_empty() && a.len() == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125202,"byte_end":125244,"line_start":778,"line_end":778,"column_start":5,"column_end":47}},{"value":"/ // But map capacity is equal to old one.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125249,"byte_end":125293,"line_start":779,"line_end":779,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.capacity(), capacity_before_drain);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125298,"byte_end":125350,"line_start":780,"line_end":780,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125355,"byte_end":125358,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125363,"byte_end":125394,"line_start":782,"line_end":782,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125399,"byte_end":125420,"line_start":783,"line_end":783,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125425,"byte_end":125446,"line_start":784,"line_end":784,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125451,"byte_end":125454,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ {   // Iterator is dropped without being consumed.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125459,"byte_end":125513,"line_start":786,"line_end":786,"column_start":5,"column_end":59}},{"value":"/     let d = a.drain();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125518,"byte_end":125544,"line_start":787,"line_end":787,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125549,"byte_end":125554,"line_start":788,"line_end":788,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125559,"byte_end":125562,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ // But the map is empty even if we do not use Drain iterator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125567,"byte_end":125632,"line_start":790,"line_end":790,"column_start":5,"column_end":70}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125637,"byte_end":125663,"line_start":791,"line_end":791,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125668,"byte_end":125675,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126858,"byte_end":126864,"line_start":826,"line_end":826,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S, A>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate. Keeps the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125853,"byte_end":125920,"line_start":800,"line_end":800,"column_start":5,"column_end":72}},{"value":"/ allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125925,"byte_end":125956,"line_start":801,"line_end":801,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125961,"byte_end":125964,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all pairs `(k, v)` such that `f(&k, &mut v)` returns `false`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":125969,"byte_end":126057,"line_start":803,"line_end":803,"column_start":5,"column_end":93}},{"value":"/ The elements are visited in unsorted (and unspecified) order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126062,"byte_end":126127,"line_start":804,"line_end":804,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126132,"byte_end":126135,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126140,"byte_end":126154,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126159,"byte_end":126162,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126167,"byte_end":126174,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126179,"byte_end":126206,"line_start":809,"line_end":809,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126211,"byte_end":126214,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126219,"byte_end":126291,"line_start":811,"line_end":811,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map.len(), 8);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126296,"byte_end":126325,"line_start":812,"line_end":812,"column_start":5,"column_end":34}},{"value":"/ let capacity_before_retain = map.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126330,"byte_end":126378,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126383,"byte_end":126386,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ map.retain(|&k, _| k % 2 == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126391,"byte_end":126426,"line_start":815,"line_end":815,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126431,"byte_end":126434,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ // We can see, that the number of elements inside map is changed.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126439,"byte_end":126508,"line_start":817,"line_end":817,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126513,"byte_end":126542,"line_start":818,"line_end":818,"column_start":5,"column_end":34}},{"value":"/ // But map capacity is equal to old one.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126547,"byte_end":126591,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(map.capacity(), capacity_before_retain);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126596,"byte_end":126651,"line_start":820,"line_end":820,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126656,"byte_end":126659,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let mut vec: Vec<(i32, i32)> = map.iter().map(|(&k, &v)| (k, v)).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126664,"byte_end":126743,"line_start":822,"line_end":822,"column_start":5,"column_end":84}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126748,"byte_end":126772,"line_start":823,"line_end":823,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [(0, 0), (2, 20), (4, 40), (6, 60)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126777,"byte_end":126834,"line_start":824,"line_end":824,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":126839,"byte_end":126846,"line_start":825,"line_end":825,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129255,"byte_end":129267,"line_start":889,"line_end":889,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashMap<K, V, S, A>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, K, V, F, A> where\nF: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127281,"byte_end":127342,"line_start":841,"line_end":841,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127347,"byte_end":127398,"line_start":842,"line_end":842,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127403,"byte_end":127406,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ In other words, move all pairs `(k, v)` such that `f(&k, &mut v)` returns `true` out","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127411,"byte_end":127499,"line_start":844,"line_end":844,"column_start":5,"column_end":93}},{"value":"/ into another iterator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127504,"byte_end":127530,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127535,"byte_end":127538,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Note that `drain_filter` lets you mutate every value in the filter closure, regardless of","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127543,"byte_end":127636,"line_start":847,"line_end":847,"column_start":5,"column_end":98}},{"value":"/ whether you choose to keep or remove it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127641,"byte_end":127685,"line_start":848,"line_end":848,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127690,"byte_end":127693,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127698,"byte_end":127781,"line_start":850,"line_end":850,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127786,"byte_end":127831,"line_start":851,"line_end":851,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127836,"byte_end":127839,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ It is unspecified how many more elements will be subjected to the closure","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127844,"byte_end":127921,"line_start":853,"line_end":853,"column_start":5,"column_end":82}},{"value":"/ if a panic occurs in the closure, or a panic occurs while dropping an element,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":127926,"byte_end":128008,"line_start":854,"line_end":854,"column_start":5,"column_end":87}},{"value":"/ or if the `DrainFilter` value is leaked.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128013,"byte_end":128057,"line_start":855,"line_end":855,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128062,"byte_end":128065,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128070,"byte_end":128111,"line_start":857,"line_end":857,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128116,"byte_end":128119,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128124,"byte_end":128138,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128143,"byte_end":128146,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128151,"byte_end":128158,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128163,"byte_end":128190,"line_start":862,"line_end":862,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128195,"byte_end":128198,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128203,"byte_end":128273,"line_start":864,"line_end":864,"column_start":5,"column_end":75}},{"value":"/ let capacity_before_drain_filter = map.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128278,"byte_end":128332,"line_start":865,"line_end":865,"column_start":5,"column_end":59}},{"value":"/ let drained: HashMap<i32, i32> = map.drain_filter(|k, _v| k % 2 == 0).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128337,"byte_end":128421,"line_start":866,"line_end":866,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128426,"byte_end":128429,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128434,"byte_end":128498,"line_start":868,"line_end":868,"column_start":5,"column_end":69}},{"value":"/ let mut odds = map.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128503,"byte_end":128562,"line_start":869,"line_end":869,"column_start":5,"column_end":64}},{"value":"/ evens.sort();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128567,"byte_end":128584,"line_start":870,"line_end":870,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128589,"byte_end":128605,"line_start":871,"line_end":871,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128610,"byte_end":128613,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128618,"byte_end":128658,"line_start":873,"line_end":873,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128663,"byte_end":128702,"line_start":874,"line_end":874,"column_start":5,"column_end":44}},{"value":"/ // Map capacity is equal to old one.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128707,"byte_end":128747,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.capacity(), capacity_before_drain_filter);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128752,"byte_end":128813,"line_start":876,"line_end":876,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128818,"byte_end":128821,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128826,"byte_end":128896,"line_start":878,"line_end":878,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128901,"byte_end":128904,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ {   // Iterator is dropped without being consumed.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128909,"byte_end":128963,"line_start":880,"line_end":880,"column_start":5,"column_end":59}},{"value":"/     let d = map.drain_filter(|k, _v| k % 2 != 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":128968,"byte_end":129021,"line_start":881,"line_end":881,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129026,"byte_end":129031,"line_start":882,"line_end":882,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129036,"byte_end":129039,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ // But the map lens have been reduced by half","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129044,"byte_end":129093,"line_start":884,"line_end":884,"column_start":5,"column_end":54}},{"value":"/ // even if we do not use DrainFilter iterator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129098,"byte_end":129148,"line_start":885,"line_end":885,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129153,"byte_end":129182,"line_start":886,"line_end":886,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129187,"byte_end":129194,"line_start":887,"line_end":887,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130140,"byte_end":130145,"line_start":922,"line_end":922,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S, A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129576,"byte_end":129652,"line_start":902,"line_end":902,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129657,"byte_end":129671,"line_start":903,"line_end":903,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129676,"byte_end":129679,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129684,"byte_end":129698,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129703,"byte_end":129706,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129711,"byte_end":129718,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129723,"byte_end":129750,"line_start":908,"line_end":908,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129755,"byte_end":129758,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129763,"byte_end":129794,"line_start":910,"line_end":910,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129799,"byte_end":129820,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/ let capacity_before_clear = a.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129825,"byte_end":129870,"line_start":912,"line_end":912,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129875,"byte_end":129878,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ a.clear();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129883,"byte_end":129897,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129902,"byte_end":129905,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ // Map is empty.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129910,"byte_end":129930,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129935,"byte_end":129961,"line_start":917,"line_end":917,"column_start":5,"column_end":31}},{"value":"/ // But map capacity is equal to old one.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":129966,"byte_end":130010,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.capacity(), capacity_before_clear);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130015,"byte_end":130067,"line_start":919,"line_end":919,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130072,"byte_end":130079,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130903,"byte_end":130912,"line_start":948,"line_end":948,"column_start":12,"column_end":21},"name":"into_keys","qualname":"<HashMap<K, V, S, A>>::into_keys","value":"pub fn into_keys(Self) -> IntoKeys<K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a consuming iterator visiting all the keys in arbitrary order.\n The map cannot be used after calling this.\n The iterator element type is `K`.","sig":null,"attributes":[{"value":"/ Creates a consuming iterator visiting all the keys in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130198,"byte_end":130272,"line_start":926,"line_end":926,"column_start":5,"column_end":79}},{"value":"/ The map cannot be used after calling this.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130277,"byte_end":130323,"line_start":927,"line_end":927,"column_start":5,"column_end":51}},{"value":"/ The iterator element type is `K`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130328,"byte_end":130365,"line_start":928,"line_end":928,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130370,"byte_end":130373,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130378,"byte_end":130392,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130397,"byte_end":130400,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130405,"byte_end":130412,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130417,"byte_end":130444,"line_start":933,"line_end":933,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130449,"byte_end":130452,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130457,"byte_end":130490,"line_start":935,"line_end":935,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130495,"byte_end":130518,"line_start":936,"line_end":936,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130523,"byte_end":130546,"line_start":937,"line_end":937,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130551,"byte_end":130574,"line_start":938,"line_end":938,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130579,"byte_end":130582,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let mut vec: Vec<&str> = map.into_keys().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130587,"byte_end":130642,"line_start":940,"line_end":940,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130647,"byte_end":130650,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ // The `IntoKeys` iterator produces keys in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130655,"byte_end":130726,"line_start":942,"line_end":942,"column_start":5,"column_end":76}},{"value":"/ // keys must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130731,"byte_end":130794,"line_start":943,"line_end":943,"column_start":5,"column_end":68}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130799,"byte_end":130823,"line_start":944,"line_end":944,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [\"a\", \"b\", \"c\"]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130828,"byte_end":130865,"line_start":945,"line_end":945,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130870,"byte_end":130877,"line_start":946,"line_end":946,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":130882,"byte_end":130891,"line_start":947,"line_end":947,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131727,"byte_end":131738,"line_start":976,"line_end":976,"column_start":12,"column_end":23},"name":"into_values","qualname":"<HashMap<K, V, S, A>>::into_values","value":"pub fn into_values(Self) -> IntoValues<K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a consuming iterator visiting all the values in arbitrary order.\n The map cannot be used after calling this.\n The iterator element type is `V`.","sig":null,"attributes":[{"value":"/ Creates a consuming iterator visiting all the values in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131019,"byte_end":131095,"line_start":954,"line_end":954,"column_start":5,"column_end":81}},{"value":"/ The map cannot be used after calling this.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131100,"byte_end":131146,"line_start":955,"line_end":955,"column_start":5,"column_end":51}},{"value":"/ The iterator element type is `V`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131151,"byte_end":131188,"line_start":956,"line_end":956,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131193,"byte_end":131196,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131201,"byte_end":131215,"line_start":958,"line_end":958,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131220,"byte_end":131223,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131228,"byte_end":131235,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131240,"byte_end":131267,"line_start":961,"line_end":961,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131272,"byte_end":131275,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131280,"byte_end":131313,"line_start":963,"line_end":963,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131318,"byte_end":131341,"line_start":964,"line_end":964,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131346,"byte_end":131369,"line_start":965,"line_end":965,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131374,"byte_end":131397,"line_start":966,"line_end":966,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131402,"byte_end":131405,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ let mut vec: Vec<i32> = map.into_values().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131410,"byte_end":131466,"line_start":968,"line_end":968,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131471,"byte_end":131474,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ // The `IntoValues` iterator produces values in arbitrary order, so","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131479,"byte_end":131550,"line_start":970,"line_end":970,"column_start":5,"column_end":76}},{"value":"/ // the values must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131555,"byte_end":131624,"line_start":971,"line_end":971,"column_start":5,"column_end":74}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131629,"byte_end":131653,"line_start":972,"line_end":972,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [1, 2, 3]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131658,"byte_end":131689,"line_start":973,"line_end":973,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131694,"byte_end":131701,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131706,"byte_end":131715,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132749,"byte_end":132756,"line_start":1013,"line_end":1013,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S, A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131960,"byte_end":132036,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ in the `HashMap`. The collection may reserve more space to avoid","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132041,"byte_end":132109,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132114,"byte_end":132141,"line_start":991,"line_end":991,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132146,"byte_end":132149,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132154,"byte_end":132166,"line_start":993,"line_end":993,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132171,"byte_end":132174,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows [`usize`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132179,"byte_end":132237,"line_start":995,"line_end":995,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132242,"byte_end":132245,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ [`usize`]: https://doc.rust-lang.org/std/primitive.usize.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132250,"byte_end":132315,"line_start":997,"line_end":997,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132320,"byte_end":132323,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132328,"byte_end":132342,"line_start":999,"line_end":999,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132347,"byte_end":132350,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132355,"byte_end":132362,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132367,"byte_end":132394,"line_start":1002,"line_end":1002,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132399,"byte_end":132452,"line_start":1003,"line_end":1003,"column_start":5,"column_end":58}},{"value":"/ // Map is empty and doesn't allocate memory","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132457,"byte_end":132504,"line_start":1004,"line_end":1004,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map.capacity(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132509,"byte_end":132543,"line_start":1005,"line_end":1005,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132548,"byte_end":132551,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ map.reserve(10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132556,"byte_end":132576,"line_start":1007,"line_end":1007,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132581,"byte_end":132584,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ // And now map can hold at least 10 elements","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132589,"byte_end":132637,"line_start":1009,"line_end":1009,"column_start":5,"column_end":53}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132642,"byte_end":132676,"line_start":1010,"line_end":1010,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132681,"byte_end":132688,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134383,"byte_end":134394,"line_start":1063,"line_end":1063,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S, A>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132900,"byte_end":132984,"line_start":1018,"line_end":1018,"column_start":5,"column_end":89}},{"value":"/ in the given `HashMap<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":132989,"byte_end":133068,"line_start":1019,"line_end":1019,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133073,"byte_end":133100,"line_start":1020,"line_end":1020,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133105,"byte_end":133108,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133113,"byte_end":133125,"line_start":1022,"line_end":1022,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133130,"byte_end":133133,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133138,"byte_end":133218,"line_start":1024,"line_end":1024,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133223,"byte_end":133239,"line_start":1025,"line_end":1025,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133244,"byte_end":133247,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133252,"byte_end":133266,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133271,"byte_end":133274,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133279,"byte_end":133286,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133291,"byte_end":133318,"line_start":1030,"line_end":1030,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133323,"byte_end":133326,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, isize> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133331,"byte_end":133386,"line_start":1032,"line_end":1032,"column_start":5,"column_end":60}},{"value":"/ // Map is empty and doesn't allocate memory","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133391,"byte_end":133438,"line_start":1033,"line_end":1033,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map.capacity(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133443,"byte_end":133477,"line_start":1034,"line_end":1034,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133482,"byte_end":133485,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133490,"byte_end":133568,"line_start":1036,"line_end":1036,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133573,"byte_end":133576,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ // And now map can hold at least 10 elements","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133581,"byte_end":133629,"line_start":1038,"line_end":1038,"column_start":5,"column_end":53}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133634,"byte_end":133668,"line_start":1039,"line_end":1039,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133673,"byte_end":133680,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133685,"byte_end":133765,"line_start":1041,"line_end":1041,"column_start":5,"column_end":85}},{"value":"/ is returned:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133770,"byte_end":133786,"line_start":1042,"line_end":1042,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133791,"byte_end":133798,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"/ # fn test() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133803,"byte_end":133820,"line_start":1044,"line_end":1044,"column_start":5,"column_end":22}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133825,"byte_end":133852,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::TryReserveError;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133857,"byte_end":133892,"line_start":1046,"line_end":1046,"column_start":5,"column_end":40}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133897,"byte_end":133949,"line_start":1047,"line_end":1047,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133954,"byte_end":133957,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ match map.try_reserve(usize::MAX) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":133962,"byte_end":134001,"line_start":1049,"line_end":1049,"column_start":5,"column_end":44}},{"value":"/     Err(error) => match error {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134006,"byte_end":134041,"line_start":1050,"line_end":1050,"column_start":5,"column_end":40}},{"value":"/         TryReserveError::CapacityOverflow => {}","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134046,"byte_end":134097,"line_start":1051,"line_end":1051,"column_start":5,"column_end":56}},{"value":"/         _ => panic!(\"TryReserveError::AllocError ?\"),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134102,"byte_end":134159,"line_start":1052,"line_end":1052,"column_start":5,"column_end":62}},{"value":"/     },","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134164,"byte_end":134174,"line_start":1053,"line_end":1053,"column_start":5,"column_end":15}},{"value":"/     _ => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134179,"byte_end":134201,"line_start":1054,"line_end":1054,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134206,"byte_end":134211,"line_start":1055,"line_end":1055,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134216,"byte_end":134223,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134228,"byte_end":134245,"line_start":1057,"line_end":1057,"column_start":5,"column_end":22}},{"value":"/ #     #[cfg(not(miri))]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134250,"byte_end":134277,"line_start":1058,"line_end":1058,"column_start":5,"column_end":32}},{"value":"/ #     test()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134282,"byte_end":134298,"line_start":1059,"line_end":1059,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134303,"byte_end":134310,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134315,"byte_end":134322,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135178,"byte_end":135191,"line_start":1085,"line_end":1085,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S, A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map as much as possible. It will drop","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134572,"byte_end":134641,"line_start":1068,"line_end":1068,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134646,"byte_end":134711,"line_start":1069,"line_end":1069,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134716,"byte_end":134789,"line_start":1070,"line_end":1070,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134794,"byte_end":134797,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134802,"byte_end":134816,"line_start":1072,"line_end":1072,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134821,"byte_end":134824,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134829,"byte_end":134836,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134841,"byte_end":134868,"line_start":1075,"line_end":1075,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134873,"byte_end":134876,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134881,"byte_end":134946,"line_start":1077,"line_end":1077,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134951,"byte_end":134972,"line_start":1078,"line_end":1078,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":134977,"byte_end":134998,"line_start":1079,"line_end":1079,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135003,"byte_end":135038,"line_start":1080,"line_end":1080,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to_fit();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135043,"byte_end":135067,"line_start":1081,"line_end":1081,"column_start":5,"column_end":29}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135072,"byte_end":135105,"line_start":1082,"line_end":1082,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135110,"byte_end":135117,"line_start":1083,"line_end":1083,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136177,"byte_end":136186,"line_start":1114,"line_end":1114,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S, A>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map with a lower limit. It will drop","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135309,"byte_end":135377,"line_start":1090,"line_end":1090,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135382,"byte_end":135460,"line_start":1091,"line_end":1091,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135465,"byte_end":135538,"line_start":1092,"line_end":1092,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135543,"byte_end":135546,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ This function does nothing if the current capacity is smaller than the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135551,"byte_end":135625,"line_start":1094,"line_end":1094,"column_start":5,"column_end":79}},{"value":"/ supplied minimum capacity.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135630,"byte_end":135660,"line_start":1095,"line_end":1095,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135665,"byte_end":135668,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135673,"byte_end":135687,"line_start":1097,"line_end":1097,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135692,"byte_end":135695,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135700,"byte_end":135707,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135712,"byte_end":135739,"line_start":1100,"line_end":1100,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135744,"byte_end":135747,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135752,"byte_end":135817,"line_start":1102,"line_end":1102,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135822,"byte_end":135843,"line_start":1103,"line_end":1103,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135848,"byte_end":135869,"line_start":1104,"line_end":1104,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135874,"byte_end":135909,"line_start":1105,"line_end":1105,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to(10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135914,"byte_end":135936,"line_start":1106,"line_end":1106,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135941,"byte_end":135975,"line_start":1107,"line_end":1107,"column_start":5,"column_end":39}},{"value":"/ map.shrink_to(0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":135980,"byte_end":136001,"line_start":1108,"line_end":1108,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136006,"byte_end":136039,"line_start":1109,"line_end":1109,"column_start":5,"column_end":38}},{"value":"/ map.shrink_to(10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136044,"byte_end":136066,"line_start":1110,"line_end":1110,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136071,"byte_end":136104,"line_start":1111,"line_end":1111,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136109,"byte_end":136116,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136946,"byte_end":136951,"line_start":1139,"line_end":1139,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S, A>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136336,"byte_end":136418,"line_start":1119,"line_end":1119,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136423,"byte_end":136426,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136431,"byte_end":136445,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136450,"byte_end":136453,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136458,"byte_end":136465,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136470,"byte_end":136497,"line_start":1124,"line_end":1124,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136502,"byte_end":136505,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ let mut letters = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136510,"byte_end":136547,"line_start":1126,"line_end":1126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136552,"byte_end":136555,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136560,"byte_end":136611,"line_start":1128,"line_end":1128,"column_start":5,"column_end":56}},{"value":"/     let counter = letters.entry(ch).or_insert(0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136616,"byte_end":136669,"line_start":1129,"line_end":1129,"column_start":5,"column_end":58}},{"value":"/     *counter += 1;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136674,"byte_end":136696,"line_start":1130,"line_end":1130,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136701,"byte_end":136706,"line_start":1131,"line_end":1131,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136711,"byte_end":136714,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136719,"byte_end":136752,"line_start":1133,"line_end":1133,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136757,"byte_end":136790,"line_start":1134,"line_end":1134,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136795,"byte_end":136828,"line_start":1135,"line_end":1135,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136833,"byte_end":136873,"line_start":1136,"line_end":1136,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":136878,"byte_end":136885,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":138109,"byte_end":138118,"line_start":1175,"line_end":1175,"column_start":12,"column_end":21},"name":"entry_ref","qualname":"<HashMap<K, V, S, A>>::entry_ref","value":"pub fn entry_ref<'a, 'b, Q: ?Sized>(&'a mut Self, &'b Q) -> EntryRef where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry by reference in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry by reference in the map for in-place manipulation.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137472,"byte_end":137567,"line_start":1157,"line_end":1157,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137572,"byte_end":137575,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137580,"byte_end":137594,"line_start":1159,"line_end":1159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137599,"byte_end":137602,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137607,"byte_end":137614,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137619,"byte_end":137646,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137651,"byte_end":137654,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ let mut words: HashMap<String, usize> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137659,"byte_end":137718,"line_start":1164,"line_end":1164,"column_start":5,"column_end":64}},{"value":"/ let source = [\"poneyland\", \"horseyland\", \"poneyland\", \"poneyland\"];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137723,"byte_end":137794,"line_start":1165,"line_end":1165,"column_start":5,"column_end":76}},{"value":"/ for (i, &s) in source.iter().enumerate() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137799,"byte_end":137845,"line_start":1166,"line_end":1166,"column_start":5,"column_end":51}},{"value":"/     let counter = words.entry_ref(s).or_insert(0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137850,"byte_end":137904,"line_start":1167,"line_end":1167,"column_start":5,"column_end":59}},{"value":"/     *counter += 1;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137909,"byte_end":137931,"line_start":1168,"line_end":1168,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137936,"byte_end":137941,"line_start":1169,"line_end":1169,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137946,"byte_end":137949,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(words[\"poneyland\"], 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137954,"byte_end":137992,"line_start":1171,"line_end":1171,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(words[\"horseyland\"], 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":137997,"byte_end":138036,"line_start":1172,"line_end":1172,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":138041,"byte_end":138048,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139432,"byte_end":139435,"line_start":1217,"line_end":1217,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S, A>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":138784,"byte_end":138846,"line_start":1197,"line_end":1197,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":138851,"byte_end":138854,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":138859,"byte_end":138922,"line_start":1199,"line_end":1199,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":138927,"byte_end":138994,"line_start":1200,"line_end":1200,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":138999,"byte_end":139016,"line_start":1201,"line_end":1201,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139021,"byte_end":139024,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139029,"byte_end":139088,"line_start":1203,"line_end":1203,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139093,"byte_end":139157,"line_start":1204,"line_end":1204,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139162,"byte_end":139165,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139170,"byte_end":139184,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139189,"byte_end":139192,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139197,"byte_end":139204,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139209,"byte_end":139236,"line_start":1209,"line_end":1209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139241,"byte_end":139244,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139249,"byte_end":139282,"line_start":1211,"line_end":1211,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139287,"byte_end":139310,"line_start":1212,"line_end":1212,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139315,"byte_end":139355,"line_start":1213,"line_end":1213,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139360,"byte_end":139394,"line_start":1214,"line_end":1214,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139399,"byte_end":139406,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139411,"byte_end":139420,"line_start":1216,"line_end":1216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140402,"byte_end":140415,"line_start":1249,"line_end":1249,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S, A>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139716,"byte_end":139781,"line_start":1229,"line_end":1229,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139786,"byte_end":139789,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139794,"byte_end":139866,"line_start":1231,"line_end":1231,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139871,"byte_end":139938,"line_start":1232,"line_end":1232,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139943,"byte_end":139960,"line_start":1233,"line_end":1233,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139965,"byte_end":139968,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":139973,"byte_end":140032,"line_start":1235,"line_end":1235,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140037,"byte_end":140101,"line_start":1236,"line_end":1236,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140106,"byte_end":140109,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140114,"byte_end":140128,"line_start":1238,"line_end":1238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140133,"byte_end":140136,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140141,"byte_end":140148,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140153,"byte_end":140180,"line_start":1241,"line_end":1241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140185,"byte_end":140188,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140193,"byte_end":140226,"line_start":1243,"line_end":1243,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140231,"byte_end":140254,"line_start":1244,"line_end":1244,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140259,"byte_end":140315,"line_start":1245,"line_end":1245,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140320,"byte_end":140364,"line_start":1246,"line_end":1246,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140369,"byte_end":140376,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":140381,"byte_end":140390,"line_start":1248,"line_end":1248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141932,"byte_end":141949,"line_start":1299,"line_end":1299,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<HashMap<K, V, S, A>>::get_key_value_mut","value":"pub fn get_key_value_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(&K, &mut V)>\nwhere K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141064,"byte_end":141164,"line_start":1275,"line_end":1275,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141169,"byte_end":141172,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141177,"byte_end":141249,"line_start":1277,"line_end":1277,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141254,"byte_end":141321,"line_start":1278,"line_end":1278,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141326,"byte_end":141343,"line_start":1279,"line_end":1279,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141348,"byte_end":141351,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141356,"byte_end":141415,"line_start":1281,"line_end":1281,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141420,"byte_end":141484,"line_start":1282,"line_end":1282,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141489,"byte_end":141492,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141497,"byte_end":141511,"line_start":1284,"line_end":1284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141516,"byte_end":141519,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141524,"byte_end":141531,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141536,"byte_end":141563,"line_start":1287,"line_end":1287,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141568,"byte_end":141571,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141576,"byte_end":141609,"line_start":1289,"line_end":1289,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141614,"byte_end":141637,"line_start":1290,"line_end":1290,"column_start":5,"column_end":28}},{"value":"/ let (k, v) = map.get_key_value_mut(&1).unwrap();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141642,"byte_end":141694,"line_start":1291,"line_end":1291,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(k, &1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141699,"byte_end":141721,"line_start":1292,"line_end":1292,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(v, &mut \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141726,"byte_end":141754,"line_start":1293,"line_end":1293,"column_start":5,"column_end":33}},{"value":"/ *v = \"b\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141759,"byte_end":141772,"line_start":1294,"line_end":1294,"column_start":5,"column_end":18}},{"value":"/ assert_eq!(map.get_key_value_mut(&1), Some((&1, &mut \"b\")));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141777,"byte_end":141841,"line_start":1295,"line_end":1295,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(map.get_key_value_mut(&2), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141846,"byte_end":141894,"line_start":1296,"line_end":1296,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141899,"byte_end":141906,"line_start":1297,"line_end":1297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":141911,"byte_end":141920,"line_start":1298,"line_end":1298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142980,"byte_end":142992,"line_start":1331,"line_end":1331,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S, A>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142277,"byte_end":142346,"line_start":1311,"line_end":1311,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142351,"byte_end":142354,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142359,"byte_end":142422,"line_start":1313,"line_end":1313,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142427,"byte_end":142494,"line_start":1314,"line_end":1314,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142499,"byte_end":142516,"line_start":1315,"line_end":1315,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142521,"byte_end":142524,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142529,"byte_end":142588,"line_start":1317,"line_end":1317,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142593,"byte_end":142657,"line_start":1318,"line_end":1318,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142662,"byte_end":142665,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142670,"byte_end":142684,"line_start":1320,"line_end":1320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142689,"byte_end":142692,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142697,"byte_end":142704,"line_start":1322,"line_end":1322,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142709,"byte_end":142736,"line_start":1323,"line_end":1323,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142741,"byte_end":142744,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142749,"byte_end":142782,"line_start":1325,"line_end":1325,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142787,"byte_end":142810,"line_start":1326,"line_end":1326,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142815,"byte_end":142858,"line_start":1327,"line_end":1327,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142863,"byte_end":142907,"line_start":1328,"line_end":1328,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":142912,"byte_end":142919,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143900,"byte_end":143907,"line_start":1363,"line_end":1363,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S, A>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143133,"byte_end":143203,"line_start":1339,"line_end":1339,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143208,"byte_end":143211,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143216,"byte_end":143279,"line_start":1341,"line_end":1341,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143284,"byte_end":143351,"line_start":1342,"line_end":1342,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143356,"byte_end":143373,"line_start":1343,"line_end":1343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143378,"byte_end":143381,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143386,"byte_end":143445,"line_start":1345,"line_end":1345,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143450,"byte_end":143514,"line_start":1346,"line_end":1346,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143519,"byte_end":143522,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143527,"byte_end":143541,"line_start":1348,"line_end":1348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143546,"byte_end":143549,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143554,"byte_end":143561,"line_start":1350,"line_end":1350,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143566,"byte_end":143593,"line_start":1351,"line_end":1351,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143598,"byte_end":143601,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143606,"byte_end":143639,"line_start":1353,"line_end":1353,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143644,"byte_end":143667,"line_start":1354,"line_end":1354,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143672,"byte_end":143710,"line_start":1355,"line_end":1355,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143715,"byte_end":143732,"line_start":1356,"line_end":1356,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143737,"byte_end":143742,"line_start":1357,"line_end":1357,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143747,"byte_end":143776,"line_start":1358,"line_end":1358,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143781,"byte_end":143784,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get_mut(&2), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143789,"byte_end":143827,"line_start":1360,"line_end":1360,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":143832,"byte_end":143839,"line_start":1361,"line_end":1361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145942,"byte_end":145954,"line_start":1432,"line_end":1432,"column_start":12,"column_end":24},"name":"get_many_mut","qualname":"<HashMap<K, V, S, A>>::get_many_mut","value":"pub fn get_many_mut<Q: ?Sized, const N: usize>(&mut Self, [&Q; ])\n-> Option<[&mut V; ]> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144565,"byte_end":144637,"line_start":1389,"line_end":1389,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144642,"byte_end":144645,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. For soundness, at most one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144650,"byte_end":144743,"line_start":1391,"line_end":1391,"column_start":5,"column_end":98}},{"value":"/ mutable reference will be returned to any value. `None` will be returned if any of the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144748,"byte_end":144838,"line_start":1392,"line_end":1392,"column_start":5,"column_end":95}},{"value":"/ keys are duplicates or missing.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144843,"byte_end":144878,"line_start":1393,"line_end":1393,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144883,"byte_end":144886,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144891,"byte_end":144905,"line_start":1395,"line_end":1395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144910,"byte_end":144913,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144918,"byte_end":144925,"line_start":1397,"line_end":1397,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144930,"byte_end":144957,"line_start":1398,"line_end":1398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144962,"byte_end":144965,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":144970,"byte_end":145009,"line_start":1400,"line_end":1400,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145014,"byte_end":145073,"line_start":1401,"line_end":1401,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145078,"byte_end":145130,"line_start":1402,"line_end":1402,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145135,"byte_end":145209,"line_start":1403,"line_end":1403,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145214,"byte_end":145276,"line_start":1404,"line_end":1404,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145281,"byte_end":145284,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145289,"byte_end":145327,"line_start":1406,"line_end":1406,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145332,"byte_end":145352,"line_start":1407,"line_end":1407,"column_start":5,"column_end":24}},{"value":"/     \"Library of Congress\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145357,"byte_end":145387,"line_start":1408,"line_end":1408,"column_start":5,"column_end":35}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145392,"byte_end":145399,"line_start":1409,"line_end":1409,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145404,"byte_end":145419,"line_start":1410,"line_end":1410,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145424,"byte_end":145436,"line_start":1411,"line_end":1411,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145441,"byte_end":145455,"line_start":1412,"line_end":1412,"column_start":5,"column_end":19}},{"value":"/         &mut 1807,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145460,"byte_end":145482,"line_start":1413,"line_end":1413,"column_start":5,"column_end":27}},{"value":"/         &mut 1800,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145487,"byte_end":145509,"line_start":1414,"line_end":1414,"column_start":5,"column_end":27}},{"value":"/     ]),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145514,"byte_end":145525,"line_start":1415,"line_end":1415,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145530,"byte_end":145536,"line_start":1416,"line_end":1416,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145541,"byte_end":145544,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ // Missing keys result in None","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145549,"byte_end":145583,"line_start":1418,"line_end":1418,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145588,"byte_end":145626,"line_start":1419,"line_end":1419,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145631,"byte_end":145651,"line_start":1420,"line_end":1420,"column_start":5,"column_end":24}},{"value":"/     \"New York Public Library\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145656,"byte_end":145690,"line_start":1421,"line_end":1421,"column_start":5,"column_end":39}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145695,"byte_end":145702,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145707,"byte_end":145733,"line_start":1423,"line_end":1423,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145738,"byte_end":145741,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ // Duplicate keys result in None","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145746,"byte_end":145782,"line_start":1425,"line_end":1425,"column_start":5,"column_end":41}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145787,"byte_end":145825,"line_start":1426,"line_end":1426,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145830,"byte_end":145850,"line_start":1427,"line_end":1427,"column_start":5,"column_end":24}},{"value":"/     \"Athenæum\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145855,"byte_end":145875,"line_start":1428,"line_end":1428,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145880,"byte_end":145887,"line_start":1429,"line_end":1429,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145892,"byte_end":145918,"line_start":1430,"line_end":1430,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":145923,"byte_end":145930,"line_start":1431,"line_end":1431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147685,"byte_end":147707,"line_start":1485,"line_end":1485,"column_start":19,"column_end":41},"name":"get_many_unchecked_mut","qualname":"<HashMap<K, V, S, A>>::get_many_unchecked_mut","value":"pub unsafe fn get_many_unchecked_mut<Q: ?Sized, const N:\nusize>(&mut Self, [&Q; ]) -> Option<[&mut V; ]> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, without validating that\n the values are unique.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, without validating that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146170,"byte_end":146266,"line_start":1440,"line_end":1440,"column_start":5,"column_end":101}},{"value":"/ the values are unique.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146271,"byte_end":146297,"line_start":1441,"line_end":1441,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146302,"byte_end":146305,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. `None` will be returned if","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146310,"byte_end":146403,"line_start":1443,"line_end":1443,"column_start":5,"column_end":98}},{"value":"/ any of the keys are missing.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146408,"byte_end":146440,"line_start":1444,"line_end":1444,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146445,"byte_end":146448,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ For a safe alternative see [`get_many_mut`](`HashMap::get_many_mut`).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146453,"byte_end":146526,"line_start":1446,"line_end":1446,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146531,"byte_end":146534,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146539,"byte_end":146551,"line_start":1448,"line_end":1448,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146556,"byte_end":146559,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ Calling this method with overlapping keys is *[undefined behavior]* even if the resulting","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146564,"byte_end":146657,"line_start":1450,"line_end":1450,"column_start":5,"column_end":98}},{"value":"/ references are not used.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146662,"byte_end":146690,"line_start":1451,"line_end":1451,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146695,"byte_end":146698,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ [undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146703,"byte_end":146799,"line_start":1453,"line_end":1453,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146804,"byte_end":146807,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146812,"byte_end":146826,"line_start":1455,"line_end":1455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146831,"byte_end":146834,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146839,"byte_end":146846,"line_start":1457,"line_end":1457,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146851,"byte_end":146878,"line_start":1458,"line_end":1458,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146883,"byte_end":146886,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146891,"byte_end":146930,"line_start":1460,"line_end":1460,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146935,"byte_end":146994,"line_start":1461,"line_end":1461,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":146999,"byte_end":147051,"line_start":1462,"line_end":1462,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147056,"byte_end":147130,"line_start":1463,"line_end":1463,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147135,"byte_end":147197,"line_start":1464,"line_end":1464,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147202,"byte_end":147205,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147210,"byte_end":147248,"line_start":1466,"line_end":1466,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147253,"byte_end":147273,"line_start":1467,"line_end":1467,"column_start":5,"column_end":24}},{"value":"/     \"Library of Congress\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147278,"byte_end":147308,"line_start":1468,"line_end":1468,"column_start":5,"column_end":35}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147313,"byte_end":147320,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147325,"byte_end":147340,"line_start":1470,"line_end":1470,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147345,"byte_end":147357,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147362,"byte_end":147376,"line_start":1472,"line_end":1472,"column_start":5,"column_end":19}},{"value":"/         &mut 1807,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147381,"byte_end":147403,"line_start":1473,"line_end":1473,"column_start":5,"column_end":27}},{"value":"/         &mut 1800,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147408,"byte_end":147430,"line_start":1474,"line_end":1474,"column_start":5,"column_end":27}},{"value":"/     ]),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147435,"byte_end":147446,"line_start":1475,"line_end":1475,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147451,"byte_end":147457,"line_start":1476,"line_end":1476,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147462,"byte_end":147465,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ // Missing keys result in None","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147470,"byte_end":147504,"line_start":1478,"line_end":1478,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147509,"byte_end":147547,"line_start":1479,"line_end":1479,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147552,"byte_end":147572,"line_start":1480,"line_end":1480,"column_start":5,"column_end":24}},{"value":"/     \"New York Public Library\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147577,"byte_end":147611,"line_start":1481,"line_end":1481,"column_start":5,"column_end":39}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147616,"byte_end":147623,"line_start":1482,"line_end":1482,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147628,"byte_end":147654,"line_start":1483,"line_end":1483,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147659,"byte_end":147666,"line_start":1484,"line_end":1484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149603,"byte_end":149625,"line_start":1541,"line_end":1541,"column_start":12,"column_end":34},"name":"get_many_key_value_mut","qualname":"<HashMap<K, V, S, A>>::get_many_key_value_mut","value":"pub fn get_many_key_value_mut<Q: ?Sized, const N: usize>(&mut Self, [&Q; ])\n-> Option<[(&K, &mut V); ]> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, with immutable\n references to the corresponding keys.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, with immutable","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":147969,"byte_end":148056,"line_start":1497,"line_end":1497,"column_start":5,"column_end":92}},{"value":"/ references to the corresponding keys.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148061,"byte_end":148102,"line_start":1498,"line_end":1498,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148107,"byte_end":148110,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. For soundness, at most one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148115,"byte_end":148208,"line_start":1500,"line_end":1500,"column_start":5,"column_end":98}},{"value":"/ mutable reference will be returned to any value. `None` will be returned if any of the keys","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148213,"byte_end":148308,"line_start":1501,"line_end":1501,"column_start":5,"column_end":100}},{"value":"/ are duplicates or missing.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148313,"byte_end":148343,"line_start":1502,"line_end":1502,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148348,"byte_end":148351,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148356,"byte_end":148370,"line_start":1504,"line_end":1504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148375,"byte_end":148378,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148383,"byte_end":148390,"line_start":1506,"line_end":1506,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148395,"byte_end":148422,"line_start":1507,"line_end":1507,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148427,"byte_end":148430,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148435,"byte_end":148474,"line_start":1509,"line_end":1509,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148479,"byte_end":148538,"line_start":1510,"line_end":1510,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148543,"byte_end":148595,"line_start":1511,"line_end":1511,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148600,"byte_end":148674,"line_start":1512,"line_end":1512,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148679,"byte_end":148741,"line_start":1513,"line_end":1513,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148746,"byte_end":148749,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148754,"byte_end":148802,"line_start":1515,"line_end":1515,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148807,"byte_end":148834,"line_start":1516,"line_end":1516,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148839,"byte_end":148881,"line_start":1517,"line_end":1517,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148886,"byte_end":148893,"line_start":1518,"line_end":1518,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148898,"byte_end":148913,"line_start":1519,"line_end":1519,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148918,"byte_end":148930,"line_start":1520,"line_end":1520,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148935,"byte_end":148949,"line_start":1521,"line_end":1521,"column_start":5,"column_end":19}},{"value":"/         (&\"Bodleian Library\".to_string(), &mut 1602),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":148954,"byte_end":149011,"line_start":1522,"line_end":1522,"column_start":5,"column_end":62}},{"value":"/         (&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149016,"byte_end":149088,"line_start":1523,"line_end":1523,"column_start":5,"column_end":77}},{"value":"/     ]),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149093,"byte_end":149104,"line_start":1524,"line_end":1524,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149109,"byte_end":149115,"line_start":1525,"line_end":1525,"column_start":5,"column_end":11}},{"value":"/ // Missing keys result in None","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149120,"byte_end":149154,"line_start":1526,"line_end":1526,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149159,"byte_end":149207,"line_start":1527,"line_end":1527,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149212,"byte_end":149239,"line_start":1528,"line_end":1528,"column_start":5,"column_end":32}},{"value":"/     \"Gewandhaus\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149244,"byte_end":149265,"line_start":1529,"line_end":1529,"column_start":5,"column_end":26}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149270,"byte_end":149277,"line_start":1530,"line_end":1530,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149282,"byte_end":149308,"line_start":1531,"line_end":1531,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149313,"byte_end":149316,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ // Duplicate keys result in None","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149321,"byte_end":149357,"line_start":1533,"line_end":1533,"column_start":5,"column_end":41}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149362,"byte_end":149410,"line_start":1534,"line_end":1534,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149415,"byte_end":149442,"line_start":1535,"line_end":1535,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149447,"byte_end":149489,"line_start":1536,"line_end":1536,"column_start":5,"column_end":47}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149494,"byte_end":149536,"line_start":1537,"line_end":1537,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149541,"byte_end":149548,"line_start":1538,"line_end":1538,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149553,"byte_end":149579,"line_start":1539,"line_end":1539,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149584,"byte_end":149591,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151591,"byte_end":151623,"line_start":1597,"line_end":1597,"column_start":19,"column_end":51},"name":"get_many_key_value_unchecked_mut","qualname":"<HashMap<K, V, S, A>>::get_many_key_value_unchecked_mut","value":"pub unsafe fn get_many_key_value_unchecked_mut<Q: ?Sized, const N:\nusize>(&mut Self, [&Q; ]) -> Option<[(&K, &mut V); ]> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, with immutable\n references to the corresponding keys, without validating that the values are unique.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, with immutable","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149893,"byte_end":149980,"line_start":1553,"line_end":1553,"column_start":5,"column_end":92}},{"value":"/ references to the corresponding keys, without validating that the values are unique.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":149985,"byte_end":150073,"line_start":1554,"line_end":1554,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150078,"byte_end":150081,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. `None` will be returned if","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150086,"byte_end":150179,"line_start":1556,"line_end":1556,"column_start":5,"column_end":98}},{"value":"/ any of the keys are missing.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150184,"byte_end":150216,"line_start":1557,"line_end":1557,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150221,"byte_end":150224,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ For a safe alternative see [`get_many_key_value_mut`](`HashMap::get_many_key_value_mut`).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150229,"byte_end":150322,"line_start":1559,"line_end":1559,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150327,"byte_end":150330,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150335,"byte_end":150347,"line_start":1561,"line_end":1561,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150352,"byte_end":150355,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ Calling this method with overlapping keys is *[undefined behavior]* even if the resulting","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150360,"byte_end":150453,"line_start":1563,"line_end":1563,"column_start":5,"column_end":98}},{"value":"/ references are not used.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150458,"byte_end":150486,"line_start":1564,"line_end":1564,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150491,"byte_end":150494,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ [undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150499,"byte_end":150595,"line_start":1566,"line_end":1566,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150600,"byte_end":150603,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150608,"byte_end":150622,"line_start":1568,"line_end":1568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150627,"byte_end":150630,"line_start":1569,"line_end":1569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150635,"byte_end":150642,"line_start":1570,"line_end":1570,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150647,"byte_end":150674,"line_start":1571,"line_end":1571,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150679,"byte_end":150682,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150687,"byte_end":150726,"line_start":1573,"line_end":1573,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150731,"byte_end":150790,"line_start":1574,"line_end":1574,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150795,"byte_end":150847,"line_start":1575,"line_end":1575,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150852,"byte_end":150926,"line_start":1576,"line_end":1576,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150931,"byte_end":150993,"line_start":1577,"line_end":1577,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":150998,"byte_end":151001,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151006,"byte_end":151054,"line_start":1579,"line_end":1579,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151059,"byte_end":151086,"line_start":1580,"line_end":1580,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151091,"byte_end":151133,"line_start":1581,"line_end":1581,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151138,"byte_end":151145,"line_start":1582,"line_end":1582,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151150,"byte_end":151165,"line_start":1583,"line_end":1583,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151170,"byte_end":151182,"line_start":1584,"line_end":1584,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151187,"byte_end":151201,"line_start":1585,"line_end":1585,"column_start":5,"column_end":19}},{"value":"/         (&\"Bodleian Library\".to_string(), &mut 1602),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151206,"byte_end":151263,"line_start":1586,"line_end":1586,"column_start":5,"column_end":62}},{"value":"/         (&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151268,"byte_end":151340,"line_start":1587,"line_end":1587,"column_start":5,"column_end":77}},{"value":"/     ]),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151345,"byte_end":151356,"line_start":1588,"line_end":1588,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151361,"byte_end":151367,"line_start":1589,"line_end":1589,"column_start":5,"column_end":11}},{"value":"/ // Missing keys result in None","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151372,"byte_end":151406,"line_start":1590,"line_end":1590,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151411,"byte_end":151459,"line_start":1591,"line_end":1591,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151464,"byte_end":151491,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/     \"Gewandhaus\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151496,"byte_end":151517,"line_start":1593,"line_end":1593,"column_start":5,"column_end":26}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151522,"byte_end":151529,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151534,"byte_end":151560,"line_start":1595,"line_end":1595,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":151565,"byte_end":151572,"line_start":1596,"line_end":1596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154030,"byte_end":154036,"line_start":1674,"line_end":1674,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S, A>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":152909,"byte_end":152951,"line_start":1647,"line_end":1647,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":152956,"byte_end":152959,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":152964,"byte_end":153031,"line_start":1649,"line_end":1649,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153036,"byte_end":153039,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153044,"byte_end":153119,"line_start":1651,"line_end":1651,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153124,"byte_end":153195,"line_start":1652,"line_end":1652,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [`std::collections`]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153200,"byte_end":153280,"line_start":1653,"line_end":1653,"column_start":5,"column_end":85}},{"value":"/ [module-level documentation] for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153285,"byte_end":153327,"line_start":1654,"line_end":1654,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153332,"byte_end":153335,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153340,"byte_end":153420,"line_start":1656,"line_end":1656,"column_start":5,"column_end":85}},{"value":"/ [`std::collections`]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153425,"byte_end":153503,"line_start":1657,"line_end":1657,"column_start":5,"column_end":83}},{"value":"/ [module-level documentation]: https://doc.rust-lang.org/std/collections/index.html#insert-and-complex-keys","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153508,"byte_end":153618,"line_start":1658,"line_end":1658,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153623,"byte_end":153626,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153631,"byte_end":153645,"line_start":1660,"line_end":1660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153650,"byte_end":153653,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153658,"byte_end":153665,"line_start":1662,"line_end":1662,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153670,"byte_end":153697,"line_start":1663,"line_end":1663,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153702,"byte_end":153705,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153710,"byte_end":153743,"line_start":1665,"line_end":1665,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153748,"byte_end":153790,"line_start":1666,"line_end":1666,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153795,"byte_end":153833,"line_start":1667,"line_end":1667,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153838,"byte_end":153841,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153846,"byte_end":153870,"line_start":1669,"line_end":1669,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153875,"byte_end":153922,"line_start":1670,"line_end":1670,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153927,"byte_end":153957,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":153962,"byte_end":153969,"line_start":1672,"line_end":1672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156226,"byte_end":156249,"line_start":1735,"line_end":1735,"column_start":12,"column_end":35},"name":"insert_unique_unchecked","qualname":"<HashMap<K, V, S, A>>::insert_unique_unchecked","value":"pub fn insert_unique_unchecked(&mut Self, K, V) -> (&K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair into the map without checking\n if the key already exists in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair into the map without checking","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154428,"byte_end":154485,"line_start":1685,"line_end":1685,"column_start":5,"column_end":62}},{"value":"/ if the key already exists in the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154490,"byte_end":154531,"line_start":1686,"line_end":1686,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154536,"byte_end":154539,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the key and value just inserted.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154544,"byte_end":154603,"line_start":1688,"line_end":1688,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154608,"byte_end":154611,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ This operation is safe if a key does not exist in the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154616,"byte_end":154678,"line_start":1690,"line_end":1690,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154683,"byte_end":154686,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ However, if a key exists in the map already, the behavior is unspecified:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154691,"byte_end":154768,"line_start":1692,"line_end":1692,"column_start":5,"column_end":82}},{"value":"/ this operation may panic, loop forever, or any following operation with the map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154773,"byte_end":154856,"line_start":1693,"line_end":1693,"column_start":5,"column_end":88}},{"value":"/ may panic, loop forever or return arbitrary result.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154861,"byte_end":154916,"line_start":1694,"line_end":1694,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154921,"byte_end":154924,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ That said, this operation (and following operations) are guaranteed to","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":154929,"byte_end":155003,"line_start":1696,"line_end":1696,"column_start":5,"column_end":79}},{"value":"/ not violate memory safety.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155008,"byte_end":155038,"line_start":1697,"line_end":1697,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155043,"byte_end":155046,"line_start":1698,"line_end":1698,"column_start":5,"column_end":8}},{"value":"/ This operation is faster than regular insert, because it does not perform","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155051,"byte_end":155128,"line_start":1699,"line_end":1699,"column_start":5,"column_end":82}},{"value":"/ lookup before insertion.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155133,"byte_end":155161,"line_start":1700,"line_end":1700,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155166,"byte_end":155169,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ This operation is useful during initial population of the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155174,"byte_end":155240,"line_start":1702,"line_end":1702,"column_start":5,"column_end":71}},{"value":"/ For example, when constructing a map from another map, we know","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155245,"byte_end":155311,"line_start":1703,"line_end":1703,"column_start":5,"column_end":71}},{"value":"/ that keys are unique.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155316,"byte_end":155341,"line_start":1704,"line_end":1704,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155346,"byte_end":155349,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155354,"byte_end":155368,"line_start":1706,"line_end":1706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155373,"byte_end":155376,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155381,"byte_end":155388,"line_start":1708,"line_end":1708,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155393,"byte_end":155420,"line_start":1709,"line_end":1709,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155425,"byte_end":155428,"line_start":1710,"line_end":1710,"column_start":5,"column_end":8}},{"value":"/ let mut map1 = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155433,"byte_end":155467,"line_start":1711,"line_end":1711,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map1.insert(1, \"a\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155472,"byte_end":155514,"line_start":1712,"line_end":1712,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map1.insert(2, \"b\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155519,"byte_end":155561,"line_start":1713,"line_end":1713,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map1.insert(3, \"c\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155566,"byte_end":155608,"line_start":1714,"line_end":1714,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map1.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155613,"byte_end":155643,"line_start":1715,"line_end":1715,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155648,"byte_end":155651,"line_start":1716,"line_end":1716,"column_start":5,"column_end":8}},{"value":"/ let mut map2 = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155656,"byte_end":155690,"line_start":1717,"line_end":1717,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155695,"byte_end":155698,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ for (key, value) in map1.into_iter() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155703,"byte_end":155745,"line_start":1719,"line_end":1719,"column_start":5,"column_end":47}},{"value":"/     map2.insert_unique_unchecked(key, value);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155750,"byte_end":155799,"line_start":1720,"line_end":1720,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155804,"byte_end":155809,"line_start":1721,"line_end":1721,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155814,"byte_end":155817,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ let (key, value) = map2.insert_unique_unchecked(4, \"d\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155822,"byte_end":155882,"line_start":1723,"line_end":1723,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(key, &4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155887,"byte_end":155911,"line_start":1724,"line_end":1724,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(value, &mut \"d\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155916,"byte_end":155948,"line_start":1725,"line_end":1725,"column_start":5,"column_end":37}},{"value":"/ *value = \"e\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155953,"byte_end":155970,"line_start":1726,"line_end":1726,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155975,"byte_end":155978,"line_start":1727,"line_end":1727,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map2[&1], \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":155983,"byte_end":156013,"line_start":1728,"line_end":1728,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(map2[&2], \"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156018,"byte_end":156048,"line_start":1729,"line_end":1729,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(map2[&3], \"c\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156053,"byte_end":156083,"line_start":1730,"line_end":1730,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(map2[&4], \"e\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156088,"byte_end":156118,"line_start":1731,"line_end":1731,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(map2.len(), 4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156123,"byte_end":156153,"line_start":1732,"line_end":1732,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156158,"byte_end":156165,"line_start":1733,"line_end":1733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157494,"byte_end":157504,"line_start":1773,"line_end":1773,"column_start":12,"column_end":22},"name":"try_insert","qualname":"<HashMap<K, V, S, A>>::try_insert","value":"pub fn try_insert(&mut Self, K, V)\n-> Result<&mut V, OccupiedError<, K, V, S, A>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to insert a key-value pair into the map, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Tries to insert a key-value pair into the map, and returns","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156578,"byte_end":156640,"line_start":1744,"line_end":1744,"column_start":5,"column_end":67}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156645,"byte_end":156695,"line_start":1745,"line_end":1745,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156700,"byte_end":156703,"line_start":1746,"line_end":1746,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156708,"byte_end":156720,"line_start":1747,"line_end":1747,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156725,"byte_end":156728,"line_start":1748,"line_end":1748,"column_start":5,"column_end":8}},{"value":"/ If the map already had this key present, nothing is updated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156733,"byte_end":156801,"line_start":1749,"line_end":1749,"column_start":5,"column_end":73}},{"value":"/ an error containing the occupied entry and the value is returned.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156806,"byte_end":156875,"line_start":1750,"line_end":1750,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156880,"byte_end":156883,"line_start":1751,"line_end":1751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156888,"byte_end":156902,"line_start":1752,"line_end":1752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156907,"byte_end":156910,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156915,"byte_end":156931,"line_start":1754,"line_end":1754,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156936,"byte_end":156939,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156944,"byte_end":156951,"line_start":1756,"line_end":1756,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156956,"byte_end":156983,"line_start":1757,"line_end":1757,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::OccupiedError;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":156988,"byte_end":157031,"line_start":1758,"line_end":1758,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157036,"byte_end":157039,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157044,"byte_end":157077,"line_start":1760,"line_end":1760,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.try_insert(37, \"a\").unwrap(), &\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157082,"byte_end":157137,"line_start":1761,"line_end":1761,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157142,"byte_end":157145,"line_start":1762,"line_end":1762,"column_start":5,"column_end":8}},{"value":"/ match map.try_insert(37, \"b\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157150,"byte_end":157185,"line_start":1763,"line_end":1763,"column_start":5,"column_end":40}},{"value":"/     Err(OccupiedError { entry, value }) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157190,"byte_end":157238,"line_start":1764,"line_end":1764,"column_start":5,"column_end":53}},{"value":"/         assert_eq!(entry.key(), &37);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157243,"byte_end":157284,"line_start":1765,"line_end":1765,"column_start":5,"column_end":46}},{"value":"/         assert_eq!(entry.get(), &\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157289,"byte_end":157331,"line_start":1766,"line_end":1766,"column_start":5,"column_end":47}},{"value":"/         assert_eq!(value, \"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157336,"byte_end":157371,"line_start":1767,"line_end":1767,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157376,"byte_end":157385,"line_start":1768,"line_end":1768,"column_start":5,"column_end":14}},{"value":"/     _ => panic!()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157390,"byte_end":157411,"line_start":1769,"line_end":1769,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157416,"byte_end":157421,"line_start":1770,"line_end":1770,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157426,"byte_end":157433,"line_start":1771,"line_end":1771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158891,"byte_end":158897,"line_start":1813,"line_end":1813,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S, A>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map. Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157805,"byte_end":157878,"line_start":1784,"line_end":1784,"column_start":5,"column_end":78}},{"value":"/ was previously in the map. Keeps the allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157883,"byte_end":157951,"line_start":1785,"line_end":1785,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157956,"byte_end":157959,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":157964,"byte_end":158027,"line_start":1787,"line_end":1787,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158032,"byte_end":158099,"line_start":1788,"line_end":1788,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158104,"byte_end":158121,"line_start":1789,"line_end":1789,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158126,"byte_end":158129,"line_start":1790,"line_end":1790,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158134,"byte_end":158193,"line_start":1791,"line_end":1791,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158198,"byte_end":158262,"line_start":1792,"line_end":1792,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158267,"byte_end":158270,"line_start":1793,"line_end":1793,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158275,"byte_end":158289,"line_start":1794,"line_end":1794,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158294,"byte_end":158297,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158302,"byte_end":158309,"line_start":1796,"line_end":1796,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158314,"byte_end":158341,"line_start":1797,"line_end":1797,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158346,"byte_end":158349,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158354,"byte_end":158387,"line_start":1799,"line_end":1799,"column_start":5,"column_end":38}},{"value":"/ // The map is empty","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158392,"byte_end":158415,"line_start":1800,"line_end":1800,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158420,"byte_end":158471,"line_start":1801,"line_end":1801,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158476,"byte_end":158479,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158484,"byte_end":158507,"line_start":1803,"line_end":1803,"column_start":5,"column_end":28}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158512,"byte_end":158560,"line_start":1804,"line_end":1804,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158565,"byte_end":158568,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158573,"byte_end":158615,"line_start":1806,"line_end":1806,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158620,"byte_end":158657,"line_start":1807,"line_end":1807,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158662,"byte_end":158665,"line_start":1808,"line_end":1808,"column_start":5,"column_end":8}},{"value":"/ // Now map holds none elements but capacity is equal to the old one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158670,"byte_end":158741,"line_start":1809,"line_end":1809,"column_start":5,"column_end":76}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158746,"byte_end":158818,"line_start":1810,"line_end":1810,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":158823,"byte_end":158830,"line_start":1811,"line_end":1811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160279,"byte_end":160291,"line_start":1854,"line_end":1854,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S, A>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map. Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159179,"byte_end":159252,"line_start":1825,"line_end":1825,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map. Keeps the allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159257,"byte_end":159329,"line_start":1826,"line_end":1826,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159334,"byte_end":159337,"line_start":1827,"line_end":1827,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159342,"byte_end":159405,"line_start":1828,"line_end":1828,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159410,"byte_end":159477,"line_start":1829,"line_end":1829,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159482,"byte_end":159499,"line_start":1830,"line_end":1830,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159504,"byte_end":159507,"line_start":1831,"line_end":1831,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159512,"byte_end":159571,"line_start":1832,"line_end":1832,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159576,"byte_end":159640,"line_start":1833,"line_end":1833,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159645,"byte_end":159648,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159653,"byte_end":159667,"line_start":1835,"line_end":1835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159672,"byte_end":159675,"line_start":1836,"line_end":1836,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159680,"byte_end":159687,"line_start":1837,"line_end":1837,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159692,"byte_end":159719,"line_start":1838,"line_end":1838,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159724,"byte_end":159727,"line_start":1839,"line_end":1839,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159732,"byte_end":159765,"line_start":1840,"line_end":1840,"column_start":5,"column_end":38}},{"value":"/ // The map is empty","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159770,"byte_end":159793,"line_start":1841,"line_end":1841,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159798,"byte_end":159849,"line_start":1842,"line_end":1842,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159854,"byte_end":159857,"line_start":1843,"line_end":1843,"column_start":5,"column_end":8}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159862,"byte_end":159885,"line_start":1844,"line_end":1844,"column_start":5,"column_end":28}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159890,"byte_end":159938,"line_start":1845,"line_end":1845,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159943,"byte_end":159946,"line_start":1846,"line_end":1846,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.remove_entry(&1), Some((1, \"a\")));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":159951,"byte_end":160004,"line_start":1847,"line_end":1847,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160009,"byte_end":160046,"line_start":1848,"line_end":1848,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160051,"byte_end":160054,"line_start":1849,"line_end":1849,"column_start":5,"column_end":8}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160059,"byte_end":160129,"line_start":1850,"line_end":1850,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160134,"byte_end":160206,"line_start":1851,"line_end":1851,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160211,"byte_end":160218,"line_start":1852,"line_end":1852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164890,"byte_end":164903,"line_start":1963,"line_end":1963,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S, A>>::raw_entry_mut","value":"pub fn raw_entry_mut(&mut Self) -> RawEntryBuilderMut<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw entry builder for the HashMap.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160591,"byte_end":160639,"line_start":1865,"line_end":1865,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160644,"byte_end":160647,"line_start":1866,"line_end":1866,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160652,"byte_end":160721,"line_start":1867,"line_end":1867,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160726,"byte_end":160799,"line_start":1868,"line_end":1868,"column_start":5,"column_end":78}},{"value":"/ then manually searched. After this, insertions into a vacant entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160804,"byte_end":160874,"line_start":1869,"line_end":1869,"column_start":5,"column_end":75}},{"value":"/ still require an owned key to be provided.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160879,"byte_end":160925,"line_start":1870,"line_end":1870,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160930,"byte_end":160933,"line_start":1871,"line_end":1871,"column_start":5,"column_end":8}},{"value":"/ Raw entries are useful for such exotic situations as:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160938,"byte_end":160995,"line_start":1872,"line_end":1872,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161000,"byte_end":161003,"line_start":1873,"line_end":1873,"column_start":5,"column_end":8}},{"value":"/ * Hash memoization","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161008,"byte_end":161030,"line_start":1874,"line_end":1874,"column_start":5,"column_end":27}},{"value":"/ * Deferring the creation of an owned key until it is known to be required","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161035,"byte_end":161112,"line_start":1875,"line_end":1875,"column_start":5,"column_end":82}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161117,"byte_end":161181,"line_start":1876,"line_end":1876,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161186,"byte_end":161246,"line_start":1877,"line_end":1877,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161251,"byte_end":161254,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ Because raw entries provide much more low-level control, it's much easier","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161259,"byte_end":161336,"line_start":1879,"line_end":1879,"column_start":5,"column_end":82}},{"value":"/ to put the HashMap into an inconsistent state which, while memory-safe,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161341,"byte_end":161416,"line_start":1880,"line_end":1880,"column_start":5,"column_end":80}},{"value":"/ will cause the map to produce seemingly random results. Higher-level and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161421,"byte_end":161497,"line_start":1881,"line_end":1881,"column_start":5,"column_end":81}},{"value":"/ more foolproof APIs like `entry` should be preferred when possible.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161502,"byte_end":161573,"line_start":1882,"line_end":1882,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161578,"byte_end":161581,"line_start":1883,"line_end":1883,"column_start":5,"column_end":8}},{"value":"/ In particular, the hash used to initialized the raw entry must still be","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161586,"byte_end":161661,"line_start":1884,"line_end":1884,"column_start":5,"column_end":80}},{"value":"/ consistent with the hash of the key that is ultimately stored in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161666,"byte_end":161745,"line_start":1885,"line_end":1885,"column_start":5,"column_end":84}},{"value":"/ This is because implementations of HashMap may need to recompute hashes","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161750,"byte_end":161825,"line_start":1886,"line_end":1886,"column_start":5,"column_end":80}},{"value":"/ when resizing, at which point only the keys are available.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161830,"byte_end":161892,"line_start":1887,"line_end":1887,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161897,"byte_end":161900,"line_start":1888,"line_end":1888,"column_start":5,"column_end":8}},{"value":"/ Raw entries give mutable access to the keys. This must not be used","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161905,"byte_end":161975,"line_start":1889,"line_end":1889,"column_start":5,"column_end":75}},{"value":"/ to modify how the key would compare or hash, as the map will not re-evaluate","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":161980,"byte_end":162060,"line_start":1890,"line_end":1890,"column_start":5,"column_end":85}},{"value":"/ where the key should go, meaning the keys may become \"lost\" if their","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162065,"byte_end":162137,"line_start":1891,"line_end":1891,"column_start":5,"column_end":77}},{"value":"/ location does not reflect their state. For instance, if you change a key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162142,"byte_end":162218,"line_start":1892,"line_end":1892,"column_start":5,"column_end":81}},{"value":"/ so that the map now contains keys which compare equal, search may start","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162223,"byte_end":162298,"line_start":1893,"line_end":1893,"column_start":5,"column_end":80}},{"value":"/ acting erratically, with two keys randomly masking each other. Implementations","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162303,"byte_end":162385,"line_start":1894,"line_end":1894,"column_start":5,"column_end":87}},{"value":"/ are free to assume this doesn't happen (within the limits of memory-safety).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162390,"byte_end":162470,"line_start":1895,"line_end":1895,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162475,"byte_end":162478,"line_start":1896,"line_end":1896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162483,"byte_end":162497,"line_start":1897,"line_end":1897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162502,"byte_end":162505,"line_start":1898,"line_end":1898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162510,"byte_end":162517,"line_start":1899,"line_end":1899,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162522,"byte_end":162562,"line_start":1900,"line_end":1900,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162567,"byte_end":162619,"line_start":1901,"line_end":1901,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162624,"byte_end":162627,"line_start":1902,"line_end":1902,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162632,"byte_end":162665,"line_start":1903,"line_end":1903,"column_start":5,"column_end":38}},{"value":"/ map.extend([(\"a\", 100), (\"b\", 200), (\"c\", 300)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162670,"byte_end":162723,"line_start":1904,"line_end":1904,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162728,"byte_end":162731,"line_start":1905,"line_end":1905,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162736,"byte_end":162825,"line_start":1906,"line_end":1906,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162830,"byte_end":162861,"line_start":1907,"line_end":1907,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162866,"byte_end":162918,"line_start":1908,"line_end":1908,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162923,"byte_end":162952,"line_start":1909,"line_end":1909,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162957,"byte_end":162979,"line_start":1910,"line_end":1910,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162984,"byte_end":162989,"line_start":1911,"line_end":1911,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":162994,"byte_end":162997,"line_start":1912,"line_end":1912,"column_start":5,"column_end":8}},{"value":"/ // Existing key (insert and update)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163002,"byte_end":163041,"line_start":1913,"line_end":1913,"column_start":5,"column_end":44}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163046,"byte_end":163092,"line_start":1914,"line_end":1914,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163097,"byte_end":163146,"line_start":1915,"line_end":1915,"column_start":5,"column_end":54}},{"value":"/     RawEntryMut::Occupied(mut view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163151,"byte_end":163195,"line_start":1916,"line_end":1916,"column_start":5,"column_end":49}},{"value":"/         assert_eq!(view.get(), &100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163200,"byte_end":163241,"line_start":1917,"line_end":1917,"column_start":5,"column_end":46}},{"value":"/         let v = view.get_mut();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163246,"byte_end":163281,"line_start":1918,"line_end":1918,"column_start":5,"column_end":40}},{"value":"/         let new_v = (*v) * 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163286,"byte_end":163320,"line_start":1919,"line_end":1919,"column_start":5,"column_end":39}},{"value":"/         *v = new_v;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163325,"byte_end":163348,"line_start":1920,"line_end":1920,"column_start":5,"column_end":28}},{"value":"/         assert_eq!(view.insert(1111), 1000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163353,"byte_end":163401,"line_start":1921,"line_end":1921,"column_start":5,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163406,"byte_end":163415,"line_start":1922,"line_end":1922,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163420,"byte_end":163425,"line_start":1923,"line_end":1923,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163430,"byte_end":163433,"line_start":1924,"line_end":1924,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"a\"], 1111);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163438,"byte_end":163470,"line_start":1925,"line_end":1925,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163475,"byte_end":163504,"line_start":1926,"line_end":1926,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163509,"byte_end":163512,"line_start":1927,"line_end":1927,"column_start":5,"column_end":8}},{"value":"/ // Existing key (take)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163517,"byte_end":163543,"line_start":1928,"line_end":1928,"column_start":5,"column_end":31}},{"value":"/ let hash = compute_hash(map.hasher(), &\"c\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163548,"byte_end":163596,"line_start":1929,"line_end":1929,"column_start":5,"column_end":53}},{"value":"/ match map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"c\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163601,"byte_end":163668,"line_start":1930,"line_end":1930,"column_start":5,"column_end":72}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163673,"byte_end":163722,"line_start":1931,"line_end":1931,"column_start":5,"column_end":54}},{"value":"/     RawEntryMut::Occupied(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163727,"byte_end":163767,"line_start":1932,"line_end":1932,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(view.remove_entry(), (\"c\", 300));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163772,"byte_end":163828,"line_start":1933,"line_end":1933,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163833,"byte_end":163842,"line_start":1934,"line_end":1934,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163847,"byte_end":163852,"line_start":1935,"line_end":1935,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.raw_entry().from_key(&\"c\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163857,"byte_end":163910,"line_start":1936,"line_end":1936,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163915,"byte_end":163944,"line_start":1937,"line_end":1937,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163949,"byte_end":163952,"line_start":1938,"line_end":1938,"column_start":5,"column_end":8}},{"value":"/ // Nonexistent key (insert and update)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":163957,"byte_end":163999,"line_start":1939,"line_end":1939,"column_start":5,"column_end":47}},{"value":"/ let key = \"d\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164004,"byte_end":164022,"line_start":1940,"line_end":1940,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164027,"byte_end":164075,"line_start":1941,"line_end":1941,"column_start":5,"column_end":53}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| *q == key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164080,"byte_end":164142,"line_start":1942,"line_end":1942,"column_start":5,"column_end":67}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164147,"byte_end":164198,"line_start":1943,"line_end":1943,"column_start":5,"column_end":56}},{"value":"/     RawEntryMut::Vacant(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164203,"byte_end":164241,"line_start":1944,"line_end":1944,"column_start":5,"column_end":43}},{"value":"/         let (k, value) = view.insert(\"d\", 4000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164246,"byte_end":164298,"line_start":1945,"line_end":1945,"column_start":5,"column_end":57}},{"value":"/         assert_eq!((*k, *value), (\"d\", 4000));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164303,"byte_end":164353,"line_start":1946,"line_end":1946,"column_start":5,"column_end":55}},{"value":"/         *value = 40000;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164358,"byte_end":164385,"line_start":1947,"line_end":1947,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164390,"byte_end":164399,"line_start":1948,"line_end":1948,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164404,"byte_end":164409,"line_start":1949,"line_end":1949,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&\"d\"], 40000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164414,"byte_end":164447,"line_start":1950,"line_end":1950,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164452,"byte_end":164481,"line_start":1951,"line_end":1951,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164486,"byte_end":164489,"line_start":1952,"line_end":1952,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| *q == key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164494,"byte_end":164556,"line_start":1953,"line_end":1953,"column_start":5,"column_end":67}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164561,"byte_end":164610,"line_start":1954,"line_end":1954,"column_start":5,"column_end":54}},{"value":"/     RawEntryMut::Occupied(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164615,"byte_end":164655,"line_start":1955,"line_end":1955,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(view.remove_entry(), (\"d\", 40000));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164660,"byte_end":164718,"line_start":1956,"line_end":1956,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164723,"byte_end":164732,"line_start":1957,"line_end":1957,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164737,"byte_end":164742,"line_start":1958,"line_end":1958,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.get(&\"d\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164747,"byte_end":164783,"line_start":1959,"line_end":1959,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164788,"byte_end":164817,"line_start":1960,"line_end":1960,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":164822,"byte_end":164829,"line_start":1961,"line_end":1961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166746,"byte_end":166755,"line_start":2012,"line_end":2012,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S, A>>::raw_entry","value":"pub fn raw_entry(&Self) -> RawEntryBuilder<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw immutable entry builder for the HashMap.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165007,"byte_end":165065,"line_start":1967,"line_end":1967,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165070,"byte_end":165073,"line_start":1968,"line_end":1968,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165078,"byte_end":165147,"line_start":1969,"line_end":1969,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165152,"byte_end":165225,"line_start":1970,"line_end":1970,"column_start":5,"column_end":78}},{"value":"/ then manually searched.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165230,"byte_end":165257,"line_start":1971,"line_end":1971,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165262,"byte_end":165265,"line_start":1972,"line_end":1972,"column_start":5,"column_end":8}},{"value":"/ This is useful for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165270,"byte_end":165292,"line_start":1973,"line_end":1973,"column_start":5,"column_end":27}},{"value":"/ * Hash memoization","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165297,"byte_end":165319,"line_start":1974,"line_end":1974,"column_start":5,"column_end":27}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165324,"byte_end":165388,"line_start":1975,"line_end":1975,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165393,"byte_end":165453,"line_start":1976,"line_end":1976,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165458,"byte_end":165461,"line_start":1977,"line_end":1977,"column_start":5,"column_end":8}},{"value":"/ Unless you are in such a situation, higher-level and more foolproof APIs like","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165466,"byte_end":165547,"line_start":1978,"line_end":1978,"column_start":5,"column_end":86}},{"value":"/ `get` should be preferred.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165552,"byte_end":165582,"line_start":1979,"line_end":1979,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165587,"byte_end":165590,"line_start":1980,"line_end":1980,"column_start":5,"column_end":8}},{"value":"/ Immutable raw entries have very limited use; you might instead want `raw_entry_mut`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165595,"byte_end":165683,"line_start":1981,"line_end":1981,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165688,"byte_end":165691,"line_start":1982,"line_end":1982,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165696,"byte_end":165710,"line_start":1983,"line_end":1983,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165715,"byte_end":165718,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165723,"byte_end":165730,"line_start":1985,"line_end":1985,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165735,"byte_end":165775,"line_start":1986,"line_end":1986,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165780,"byte_end":165807,"line_start":1987,"line_end":1987,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165812,"byte_end":165815,"line_start":1988,"line_end":1988,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165820,"byte_end":165853,"line_start":1989,"line_end":1989,"column_start":5,"column_end":38}},{"value":"/ map.extend([(\"a\", 100), (\"b\", 200), (\"c\", 300)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165858,"byte_end":165911,"line_start":1990,"line_end":1990,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165916,"byte_end":165919,"line_start":1991,"line_end":1991,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":165924,"byte_end":166013,"line_start":1992,"line_end":1992,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166018,"byte_end":166049,"line_start":1993,"line_end":1993,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166054,"byte_end":166106,"line_start":1994,"line_end":1994,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166111,"byte_end":166140,"line_start":1995,"line_end":1995,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166145,"byte_end":166167,"line_start":1996,"line_end":1996,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166172,"byte_end":166177,"line_start":1997,"line_end":1997,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166182,"byte_end":166185,"line_start":1998,"line_end":1998,"column_start":5,"column_end":8}},{"value":"/ for k in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166190,"byte_end":166235,"line_start":1999,"line_end":1999,"column_start":5,"column_end":50}},{"value":"/     let hash = compute_hash(map.hasher(), k);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166240,"byte_end":166289,"line_start":2000,"line_end":2000,"column_start":5,"column_end":54}},{"value":"/     let v = map.get(&k).cloned();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166294,"byte_end":166331,"line_start":2001,"line_end":2001,"column_start":5,"column_end":42}},{"value":"/     let kv = v.as_ref().map(|v| (&k, v));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166336,"byte_end":166381,"line_start":2002,"line_end":2002,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166386,"byte_end":166389,"line_start":2003,"line_end":2003,"column_start":5,"column_end":8}},{"value":"/     println!(\"Key: {} and value: {:?}\", k, v);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166394,"byte_end":166444,"line_start":2004,"line_end":2004,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166449,"byte_end":166452,"line_start":2005,"line_end":2005,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(map.raw_entry().from_key(&k), kv);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166457,"byte_end":166510,"line_start":2006,"line_end":2006,"column_start":5,"column_end":58}},{"value":"/     assert_eq!(map.raw_entry().from_hash(hash, |q| *q == k), kv);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166515,"byte_end":166584,"line_start":2007,"line_end":2007,"column_start":5,"column_end":74}},{"value":"/     assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &k), kv);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166589,"byte_end":166663,"line_start":2008,"line_end":2008,"column_start":5,"column_end":79}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166668,"byte_end":166673,"line_start":2009,"line_end":2009,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166678,"byte_end":166685,"line_start":2010,"line_end":2010,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169110,"byte_end":169119,"line_start":2073,"line_end":2073,"column_start":12,"column_end":21},"name":"raw_table","qualname":"<HashMap<K, V, S, A>>::raw_table","value":"pub fn raw_table(&mut Self) -> &mut RawTable<(K, V), A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the [`RawTable`] used underneath [`HashMap`].\n This function is only available if the `raw` feature of the crate is enabled.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the [`RawTable`] used underneath [`HashMap`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166849,"byte_end":166929,"line_start":2016,"line_end":2016,"column_start":5,"column_end":85}},{"value":"/ This function is only available if the `raw` feature of the crate is enabled.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":166934,"byte_end":167015,"line_start":2017,"line_end":2017,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167020,"byte_end":167023,"line_start":2018,"line_end":2018,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167028,"byte_end":167038,"line_start":2019,"line_end":2019,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167043,"byte_end":167046,"line_start":2020,"line_end":2020,"column_start":5,"column_end":8}},{"value":"/ Calling the function safe, but using raw hash table API's may require","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167051,"byte_end":167124,"line_start":2021,"line_end":2021,"column_start":5,"column_end":78}},{"value":"/ unsafe functions or blocks.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167129,"byte_end":167160,"line_start":2022,"line_end":2022,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167165,"byte_end":167168,"line_start":2023,"line_end":2023,"column_start":5,"column_end":8}},{"value":"/ `RawTable` API gives the lowest level of control under the map that can be useful","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167173,"byte_end":167258,"line_start":2024,"line_end":2024,"column_start":5,"column_end":90}},{"value":"/ for extending the HashMap's API, but may lead to *[undefined behavior]*.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167263,"byte_end":167339,"line_start":2025,"line_end":2025,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167344,"byte_end":167347,"line_start":2026,"line_end":2026,"column_start":5,"column_end":8}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167352,"byte_end":167388,"line_start":2027,"line_end":2027,"column_start":5,"column_end":41}},{"value":"/ [`RawTable`]: raw/struct.RawTable.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167393,"byte_end":167435,"line_start":2028,"line_end":2028,"column_start":5,"column_end":47}},{"value":"/ [undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167440,"byte_end":167536,"line_start":2029,"line_end":2029,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167541,"byte_end":167544,"line_start":2030,"line_end":2030,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167549,"byte_end":167563,"line_start":2031,"line_end":2031,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167568,"byte_end":167571,"line_start":2032,"line_end":2032,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167576,"byte_end":167583,"line_start":2033,"line_end":2033,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167588,"byte_end":167628,"line_start":2034,"line_end":2034,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167633,"byte_end":167660,"line_start":2035,"line_end":2035,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167665,"byte_end":167668,"line_start":2036,"line_end":2036,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167673,"byte_end":167706,"line_start":2037,"line_end":2037,"column_start":5,"column_end":38}},{"value":"/ map.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167711,"byte_end":167761,"line_start":2038,"line_end":2038,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167766,"byte_end":167795,"line_start":2039,"line_end":2039,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167800,"byte_end":167803,"line_start":2040,"line_end":2040,"column_start":5,"column_end":8}},{"value":"/ // Let's imagine that we have a value and a hash of the key, but not the key itself.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167808,"byte_end":167896,"line_start":2041,"line_end":2041,"column_start":5,"column_end":93}},{"value":"/ // However, if you want to remove the value from the map by hash and value, and you","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167901,"byte_end":167988,"line_start":2042,"line_end":2042,"column_start":5,"column_end":92}},{"value":"/ // know exactly that the value is unique, then you can create a function like this:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":167993,"byte_end":168080,"line_start":2043,"line_end":2043,"column_start":5,"column_end":92}},{"value":"/ fn remove_by_hash<K, V, S, F>(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168085,"byte_end":168119,"line_start":2044,"line_end":2044,"column_start":5,"column_end":39}},{"value":"/     map: &mut HashMap<K, V, S>,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168124,"byte_end":168159,"line_start":2045,"line_end":2045,"column_start":5,"column_end":40}},{"value":"/     hash: u64,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168164,"byte_end":168182,"line_start":2046,"line_end":2046,"column_start":5,"column_end":23}},{"value":"/     is_match: F,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168187,"byte_end":168207,"line_start":2047,"line_end":2047,"column_start":5,"column_end":25}},{"value":"/ ) -> Option<(K, V)>","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168212,"byte_end":168235,"line_start":2048,"line_end":2048,"column_start":5,"column_end":28}},{"value":"/ where","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168240,"byte_end":168249,"line_start":2049,"line_end":2049,"column_start":5,"column_end":14}},{"value":"/     F: Fn(&(K, V)) -> bool,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168254,"byte_end":168285,"line_start":2050,"line_end":2050,"column_start":5,"column_end":36}},{"value":"/ {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168290,"byte_end":168295,"line_start":2051,"line_end":2051,"column_start":5,"column_end":10}},{"value":"/     let raw_table = map.raw_table();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168300,"byte_end":168340,"line_start":2052,"line_end":2052,"column_start":5,"column_end":45}},{"value":"/     match raw_table.find(hash, is_match) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168345,"byte_end":168391,"line_start":2053,"line_end":2053,"column_start":5,"column_end":51}},{"value":"/         Some(bucket) => Some(unsafe { raw_table.remove(bucket) }),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168396,"byte_end":168466,"line_start":2054,"line_end":2054,"column_start":5,"column_end":75}},{"value":"/         None => None,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168471,"byte_end":168496,"line_start":2055,"line_end":2055,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168501,"byte_end":168510,"line_start":2056,"line_end":2056,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168515,"byte_end":168520,"line_start":2057,"line_end":2057,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168525,"byte_end":168528,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168533,"byte_end":168622,"line_start":2059,"line_end":2059,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168627,"byte_end":168658,"line_start":2060,"line_end":2060,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168663,"byte_end":168715,"line_start":2061,"line_end":2061,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168720,"byte_end":168749,"line_start":2062,"line_end":2062,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168754,"byte_end":168776,"line_start":2063,"line_end":2063,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168781,"byte_end":168786,"line_start":2064,"line_end":2064,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168791,"byte_end":168794,"line_start":2065,"line_end":2065,"column_start":5,"column_end":8}},{"value":"/ let hash = compute_hash(map.hasher(), \"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168799,"byte_end":168846,"line_start":2066,"line_end":2066,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(remove_by_hash(&mut map, hash, |(_, v)| *v == 10), Some((\"a\", 10)));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168851,"byte_end":168934,"line_start":2067,"line_end":2067,"column_start":5,"column_end":88}},{"value":"/ assert_eq!(map.get(&\"a\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168939,"byte_end":168975,"line_start":2068,"line_end":2068,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":168980,"byte_end":169009,"line_start":2069,"line_end":2069,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169014,"byte_end":169021,"line_start":2070,"line_end":2070,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169026,"byte_end":169049,"line_start":2071,"line_end":2071,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173019,"byte_end":173023,"line_start":2221,"line_end":2221,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap` in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `HashMap` in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172115,"byte_end":172182,"line_start":2193,"line_end":2193,"column_start":1,"column_end":68}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172183,"byte_end":172233,"line_start":2194,"line_end":2194,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172234,"byte_end":172237,"line_start":2195,"line_end":2195,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashMap`]. See its","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172238,"byte_end":172313,"line_start":2196,"line_end":2196,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172314,"byte_end":172341,"line_start":2197,"line_end":2197,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172342,"byte_end":172345,"line_start":2198,"line_end":2198,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.HashMap.html#method.iter","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172346,"byte_end":172391,"line_start":2199,"line_end":2199,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172392,"byte_end":172428,"line_start":2200,"line_end":2200,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172429,"byte_end":172432,"line_start":2201,"line_end":2201,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172433,"byte_end":172447,"line_start":2202,"line_end":2202,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172448,"byte_end":172451,"line_start":2203,"line_end":2203,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172452,"byte_end":172459,"line_start":2204,"line_end":2204,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172460,"byte_end":172487,"line_start":2205,"line_end":2205,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172488,"byte_end":172491,"line_start":2206,"line_end":2206,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172492,"byte_end":172559,"line_start":2207,"line_end":2207,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172560,"byte_end":172563,"line_start":2208,"line_end":2208,"column_start":1,"column_end":4}},{"value":"/ let mut iter = map.iter();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172564,"byte_end":172594,"line_start":2209,"line_end":2209,"column_start":1,"column_end":31}},{"value":"/ let mut vec = vec![iter.next(), iter.next(), iter.next()];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172595,"byte_end":172657,"line_start":2210,"line_end":2210,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172658,"byte_end":172661,"line_start":2211,"line_end":2211,"column_start":1,"column_end":4}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172662,"byte_end":172730,"line_start":2212,"line_end":2212,"column_start":1,"column_end":69}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172731,"byte_end":172795,"line_start":2213,"line_end":2213,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172796,"byte_end":172820,"line_start":2214,"line_end":2214,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some((&1, &\"a\")), Some((&2, &\"b\")), Some((&3, &\"c\"))]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172821,"byte_end":172897,"line_start":2215,"line_end":2215,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172898,"byte_end":172901,"line_start":2216,"line_end":2216,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172902,"byte_end":172929,"line_start":2217,"line_end":2217,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172930,"byte_end":172964,"line_start":2218,"line_end":2218,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":172965,"byte_end":172999,"line_start":2219,"line_end":2219,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173000,"byte_end":173007,"line_start":2220,"line_end":2220,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174471,"byte_end":174478,"line_start":2270,"line_end":2270,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap` in arbitrary order.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `HashMap` in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173569,"byte_end":173643,"line_start":2243,"line_end":2243,"column_start":1,"column_end":75}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173644,"byte_end":173698,"line_start":2244,"line_end":2244,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173699,"byte_end":173702,"line_start":2245,"line_end":2245,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173703,"byte_end":173782,"line_start":2246,"line_end":2246,"column_start":1,"column_end":80}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173783,"byte_end":173810,"line_start":2247,"line_end":2247,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173811,"byte_end":173814,"line_start":2248,"line_end":2248,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.HashMap.html#method.iter_mut","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173815,"byte_end":173868,"line_start":2249,"line_end":2249,"column_start":1,"column_end":54}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173869,"byte_end":173905,"line_start":2250,"line_end":2250,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173906,"byte_end":173909,"line_start":2251,"line_end":2251,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173910,"byte_end":173924,"line_start":2252,"line_end":2252,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173925,"byte_end":173928,"line_start":2253,"line_end":2253,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173929,"byte_end":173936,"line_start":2254,"line_end":2254,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173937,"byte_end":173964,"line_start":2255,"line_end":2255,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173965,"byte_end":173968,"line_start":2256,"line_end":2256,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<_, _> = [(1, \"One\".to_owned()), (2, \"Two\".into())].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173969,"byte_end":174052,"line_start":2257,"line_end":2257,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174053,"byte_end":174056,"line_start":2258,"line_end":2258,"column_start":1,"column_end":4}},{"value":"/ let mut iter = map.iter_mut();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174057,"byte_end":174091,"line_start":2259,"line_end":2259,"column_start":1,"column_end":35}},{"value":"/ iter.next().map(|(_, v)| v.push_str(\" Mississippi\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174092,"byte_end":174149,"line_start":2260,"line_end":2260,"column_start":1,"column_end":58}},{"value":"/ iter.next().map(|(_, v)| v.push_str(\" Mississippi\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174150,"byte_end":174207,"line_start":2261,"line_end":2261,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174208,"byte_end":174211,"line_start":2262,"line_end":2262,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174212,"byte_end":174239,"line_start":2263,"line_end":2263,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174240,"byte_end":174274,"line_start":2264,"line_end":2264,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174275,"byte_end":174309,"line_start":2265,"line_end":2265,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174310,"byte_end":174313,"line_start":2266,"line_end":2266,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(&1).unwrap(), &\"One Mississippi\".to_owned());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174314,"byte_end":174382,"line_start":2267,"line_end":2267,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(map.get(&2).unwrap(), &\"Two Mississippi\".to_owned());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174383,"byte_end":174451,"line_start":2268,"line_end":2268,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174452,"byte_end":174459,"line_start":2269,"line_end":2269,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176259,"byte_end":176267,"line_start":2322,"line_end":2322,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":801}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap` in arbitrary order.\n The iterator element type is `(K, V)`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `HashMap` in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175161,"byte_end":175235,"line_start":2292,"line_end":2292,"column_start":1,"column_end":75}},{"value":"/ The iterator element type is `(K, V)`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175236,"byte_end":175278,"line_start":2293,"line_end":2293,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175279,"byte_end":175282,"line_start":2294,"line_end":2294,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashMap`]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175283,"byte_end":175354,"line_start":2295,"line_end":2295,"column_start":1,"column_end":72}},{"value":"/ (provided by the [`IntoIterator`] trait). See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175355,"byte_end":175432,"line_start":2296,"line_end":2296,"column_start":1,"column_end":78}},{"value":"/ The map cannot be used after calling that method.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175433,"byte_end":175486,"line_start":2297,"line_end":2297,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175487,"byte_end":175490,"line_start":2298,"line_end":2298,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.HashMap.html#method.into_iter","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175491,"byte_end":175546,"line_start":2299,"line_end":2299,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175547,"byte_end":175583,"line_start":2300,"line_end":2300,"column_start":1,"column_end":37}},{"value":"/ [`IntoIterator`]: https://doc.rust-lang.org/core/iter/trait.IntoIterator.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175584,"byte_end":175665,"line_start":2301,"line_end":2301,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175666,"byte_end":175669,"line_start":2302,"line_end":2302,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175670,"byte_end":175684,"line_start":2303,"line_end":2303,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175685,"byte_end":175688,"line_start":2304,"line_end":2304,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175689,"byte_end":175696,"line_start":2305,"line_end":2305,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175697,"byte_end":175724,"line_start":2306,"line_end":2306,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175725,"byte_end":175728,"line_start":2307,"line_end":2307,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175729,"byte_end":175796,"line_start":2308,"line_end":2308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175797,"byte_end":175800,"line_start":2309,"line_end":2309,"column_start":1,"column_end":4}},{"value":"/ let mut iter = map.into_iter();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175801,"byte_end":175836,"line_start":2310,"line_end":2310,"column_start":1,"column_end":36}},{"value":"/ let mut vec = vec![iter.next(), iter.next(), iter.next()];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175837,"byte_end":175899,"line_start":2311,"line_end":2311,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175900,"byte_end":175903,"line_start":2312,"line_end":2312,"column_start":1,"column_end":4}},{"value":"/ // The `IntoIter` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175904,"byte_end":175976,"line_start":2313,"line_end":2313,"column_start":1,"column_end":73}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":175977,"byte_end":176041,"line_start":2314,"line_end":2314,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176042,"byte_end":176066,"line_start":2315,"line_end":2315,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some((1, \"a\")), Some((2, \"b\")), Some((3, \"c\"))]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176067,"byte_end":176137,"line_start":2316,"line_end":2316,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176138,"byte_end":176141,"line_start":2317,"line_end":2317,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176142,"byte_end":176169,"line_start":2318,"line_end":2318,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176170,"byte_end":176204,"line_start":2319,"line_end":2319,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176205,"byte_end":176239,"line_start":2320,"line_end":2320,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176240,"byte_end":176247,"line_start":2321,"line_end":2321,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177613,"byte_end":177621,"line_start":2366,"line_end":2366,"column_start":12,"column_end":20},"name":"IntoKeys","qualname":"::map::IntoKeys","value":"IntoKeys {  }","parent":null,"children":[{"krate":0,"index":811}],"decl_id":null,"docs":" An owning iterator over the keys of a `HashMap` in arbitrary order.\n The iterator element type is `K`.","sig":null,"attributes":[{"value":"/ An owning iterator over the keys of a `HashMap` in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176669,"byte_end":176740,"line_start":2337,"line_end":2337,"column_start":1,"column_end":72}},{"value":"/ The iterator element type is `K`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176741,"byte_end":176778,"line_start":2338,"line_end":2338,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176779,"byte_end":176782,"line_start":2339,"line_end":2339,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_keys`] method on [`HashMap`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176783,"byte_end":176855,"line_start":2340,"line_end":2340,"column_start":1,"column_end":73}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176856,"byte_end":176891,"line_start":2341,"line_end":2341,"column_start":1,"column_end":36}},{"value":"/ The map cannot be used after calling that method.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176892,"byte_end":176945,"line_start":2342,"line_end":2342,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176946,"byte_end":176949,"line_start":2343,"line_end":2343,"column_start":1,"column_end":4}},{"value":"/ [`into_keys`]: struct.HashMap.html#method.into_keys","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176950,"byte_end":177005,"line_start":2344,"line_end":2344,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177006,"byte_end":177042,"line_start":2345,"line_end":2345,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177043,"byte_end":177046,"line_start":2346,"line_end":2346,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177047,"byte_end":177061,"line_start":2347,"line_end":2347,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177062,"byte_end":177065,"line_start":2348,"line_end":2348,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177066,"byte_end":177073,"line_start":2349,"line_end":2349,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177074,"byte_end":177101,"line_start":2350,"line_end":2350,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177102,"byte_end":177105,"line_start":2351,"line_end":2351,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177106,"byte_end":177173,"line_start":2352,"line_end":2352,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177174,"byte_end":177177,"line_start":2353,"line_end":2353,"column_start":1,"column_end":4}},{"value":"/ let mut keys = map.into_keys();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177178,"byte_end":177213,"line_start":2354,"line_end":2354,"column_start":1,"column_end":36}},{"value":"/ let mut vec = vec![keys.next(), keys.next(), keys.next()];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177214,"byte_end":177276,"line_start":2355,"line_end":2355,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177277,"byte_end":177280,"line_start":2356,"line_end":2356,"column_start":1,"column_end":4}},{"value":"/ // The `IntoKeys` iterator produces keys in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177281,"byte_end":177352,"line_start":2357,"line_end":2357,"column_start":1,"column_end":72}},{"value":"/ // keys must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177353,"byte_end":177416,"line_start":2358,"line_end":2358,"column_start":1,"column_end":64}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177417,"byte_end":177441,"line_start":2359,"line_end":2359,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some(1), Some(2), Some(3)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177442,"byte_end":177491,"line_start":2360,"line_end":2360,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177492,"byte_end":177495,"line_start":2361,"line_end":2361,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177496,"byte_end":177523,"line_start":2362,"line_end":2362,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(keys.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177524,"byte_end":177558,"line_start":2363,"line_end":2363,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(keys.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177559,"byte_end":177593,"line_start":2364,"line_end":2364,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177594,"byte_end":177601,"line_start":2365,"line_end":2365,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179440,"byte_end":179450,"line_start":2428,"line_end":2428,"column_start":12,"column_end":22},"name":"IntoValues","qualname":"::map::IntoValues","value":"IntoValues {  }","parent":null,"children":[{"krate":0,"index":839}],"decl_id":null,"docs":" An owning iterator over the values of a `HashMap` in arbitrary order.\n The iterator element type is `V`.","sig":null,"attributes":[{"value":"/ An owning iterator over the values of a `HashMap` in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178466,"byte_end":178539,"line_start":2400,"line_end":2400,"column_start":1,"column_end":74}},{"value":"/ The iterator element type is `V`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178540,"byte_end":178577,"line_start":2401,"line_end":2401,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178578,"byte_end":178581,"line_start":2402,"line_end":2402,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_values`] method on [`HashMap`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178582,"byte_end":178656,"line_start":2403,"line_end":2403,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more. The map cannot be used after calling that method.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178657,"byte_end":178742,"line_start":2404,"line_end":2404,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178743,"byte_end":178746,"line_start":2405,"line_end":2405,"column_start":1,"column_end":4}},{"value":"/ [`into_values`]: struct.HashMap.html#method.into_values","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178747,"byte_end":178806,"line_start":2406,"line_end":2406,"column_start":1,"column_end":60}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178807,"byte_end":178843,"line_start":2407,"line_end":2407,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178844,"byte_end":178847,"line_start":2408,"line_end":2408,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178848,"byte_end":178862,"line_start":2409,"line_end":2409,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178863,"byte_end":178866,"line_start":2410,"line_end":2410,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178867,"byte_end":178874,"line_start":2411,"line_end":2411,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178875,"byte_end":178902,"line_start":2412,"line_end":2412,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178903,"byte_end":178906,"line_start":2413,"line_end":2413,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178907,"byte_end":178974,"line_start":2414,"line_end":2414,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178975,"byte_end":178978,"line_start":2415,"line_end":2415,"column_start":1,"column_end":4}},{"value":"/ let mut values = map.into_values();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178979,"byte_end":179018,"line_start":2416,"line_end":2416,"column_start":1,"column_end":40}},{"value":"/ let mut vec = vec![values.next(), values.next(), values.next()];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179019,"byte_end":179087,"line_start":2417,"line_end":2417,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179088,"byte_end":179091,"line_start":2418,"line_end":2418,"column_start":1,"column_end":4}},{"value":"/ // The `IntoValues` iterator produces values in arbitrary order, so","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179092,"byte_end":179163,"line_start":2419,"line_end":2419,"column_start":1,"column_end":72}},{"value":"/ // the values must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179164,"byte_end":179233,"line_start":2420,"line_end":2420,"column_start":1,"column_end":70}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179234,"byte_end":179258,"line_start":2421,"line_end":2421,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some(\"a\"), Some(\"b\"), Some(\"c\")]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179259,"byte_end":179314,"line_start":2422,"line_end":2422,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179315,"byte_end":179318,"line_start":2423,"line_end":2423,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179319,"byte_end":179346,"line_start":2424,"line_end":2424,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179347,"byte_end":179383,"line_start":2425,"line_end":2425,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179384,"byte_end":179420,"line_start":2426,"line_end":2426,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179421,"byte_end":179428,"line_start":2427,"line_end":2427,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181162,"byte_end":181166,"line_start":2490,"line_end":2490,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":867}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap` in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `HashMap` in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180296,"byte_end":180360,"line_start":2462,"line_end":2462,"column_start":1,"column_end":65}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180361,"byte_end":180402,"line_start":2463,"line_end":2463,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180403,"byte_end":180406,"line_start":2464,"line_end":2464,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`HashMap`]. See its","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180407,"byte_end":180482,"line_start":2465,"line_end":2465,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180483,"byte_end":180510,"line_start":2466,"line_end":2466,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180511,"byte_end":180514,"line_start":2467,"line_end":2467,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.HashMap.html#method.keys","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180515,"byte_end":180560,"line_start":2468,"line_end":2468,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180561,"byte_end":180597,"line_start":2469,"line_end":2469,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180598,"byte_end":180601,"line_start":2470,"line_end":2470,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180602,"byte_end":180616,"line_start":2471,"line_end":2471,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180617,"byte_end":180620,"line_start":2472,"line_end":2472,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180621,"byte_end":180628,"line_start":2473,"line_end":2473,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180629,"byte_end":180656,"line_start":2474,"line_end":2474,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180657,"byte_end":180660,"line_start":2475,"line_end":2475,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180661,"byte_end":180728,"line_start":2476,"line_end":2476,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180729,"byte_end":180732,"line_start":2477,"line_end":2477,"column_start":1,"column_end":4}},{"value":"/ let mut keys = map.keys();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180733,"byte_end":180763,"line_start":2478,"line_end":2478,"column_start":1,"column_end":31}},{"value":"/ let mut vec = vec![keys.next(), keys.next(), keys.next()];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180764,"byte_end":180826,"line_start":2479,"line_end":2479,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180827,"byte_end":180830,"line_start":2480,"line_end":2480,"column_start":1,"column_end":4}},{"value":"/ // The `Keys` iterator produces keys in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180831,"byte_end":180898,"line_start":2481,"line_end":2481,"column_start":1,"column_end":68}},{"value":"/ // keys must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180899,"byte_end":180962,"line_start":2482,"line_end":2482,"column_start":1,"column_end":64}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180963,"byte_end":180987,"line_start":2483,"line_end":2483,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some(&1), Some(&2), Some(&3)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180988,"byte_end":181040,"line_start":2484,"line_end":2484,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181041,"byte_end":181044,"line_start":2485,"line_end":2485,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181045,"byte_end":181072,"line_start":2486,"line_end":2486,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(keys.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181073,"byte_end":181107,"line_start":2487,"line_end":2487,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(keys.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181108,"byte_end":181142,"line_start":2488,"line_end":2488,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181143,"byte_end":181150,"line_start":2489,"line_end":2489,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182530,"byte_end":182536,"line_start":2538,"line_end":2538,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":880}],"decl_id":null,"docs":" An iterator over the values of a `HashMap` in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `HashMap` in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181630,"byte_end":181696,"line_start":2510,"line_end":2510,"column_start":1,"column_end":67}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181697,"byte_end":181738,"line_start":2511,"line_end":2511,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181739,"byte_end":181742,"line_start":2512,"line_end":2512,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`HashMap`]. See its","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181743,"byte_end":181820,"line_start":2513,"line_end":2513,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181821,"byte_end":181848,"line_start":2514,"line_end":2514,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181849,"byte_end":181852,"line_start":2515,"line_end":2515,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.HashMap.html#method.values","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181853,"byte_end":181902,"line_start":2516,"line_end":2516,"column_start":1,"column_end":50}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181903,"byte_end":181939,"line_start":2517,"line_end":2517,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181940,"byte_end":181943,"line_start":2518,"line_end":2518,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181944,"byte_end":181958,"line_start":2519,"line_end":2519,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181959,"byte_end":181962,"line_start":2520,"line_end":2520,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181963,"byte_end":181970,"line_start":2521,"line_end":2521,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181971,"byte_end":181998,"line_start":2522,"line_end":2522,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181999,"byte_end":182002,"line_start":2523,"line_end":2523,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182003,"byte_end":182070,"line_start":2524,"line_end":2524,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182071,"byte_end":182074,"line_start":2525,"line_end":2525,"column_start":1,"column_end":4}},{"value":"/ let mut values = map.values();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182075,"byte_end":182109,"line_start":2526,"line_end":2526,"column_start":1,"column_end":35}},{"value":"/ let mut vec = vec![values.next(), values.next(), values.next()];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182110,"byte_end":182178,"line_start":2527,"line_end":2527,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182179,"byte_end":182182,"line_start":2528,"line_end":2528,"column_start":1,"column_end":4}},{"value":"/ // The `Values` iterator produces values in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182183,"byte_end":182254,"line_start":2529,"line_end":2529,"column_start":1,"column_end":72}},{"value":"/ // values must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182255,"byte_end":182320,"line_start":2530,"line_end":2530,"column_start":1,"column_end":66}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182321,"byte_end":182345,"line_start":2531,"line_end":2531,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some(&\"a\"), Some(&\"b\"), Some(&\"c\")]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182346,"byte_end":182404,"line_start":2532,"line_end":2532,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182405,"byte_end":182408,"line_start":2533,"line_end":2533,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182409,"byte_end":182436,"line_start":2534,"line_end":2534,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182437,"byte_end":182473,"line_start":2535,"line_end":2535,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182474,"byte_end":182510,"line_start":2536,"line_end":2536,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182511,"byte_end":182518,"line_start":2537,"line_end":2537,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183949,"byte_end":183954,"line_start":2586,"line_end":2586,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":894}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap` in arbitrary\n order. The iterator element type is `(K, V)`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `HashMap` in arbitrary","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183006,"byte_end":183074,"line_start":2558,"line_end":2558,"column_start":1,"column_end":69}},{"value":"/ order. The iterator element type is `(K, V)`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183075,"byte_end":183124,"line_start":2559,"line_end":2559,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183125,"byte_end":183128,"line_start":2560,"line_end":2560,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashMap`]. See its","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183129,"byte_end":183205,"line_start":2561,"line_end":2561,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183206,"byte_end":183233,"line_start":2562,"line_end":2562,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183234,"byte_end":183237,"line_start":2563,"line_end":2563,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.HashMap.html#method.drain","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183238,"byte_end":183285,"line_start":2564,"line_end":2564,"column_start":1,"column_end":48}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183286,"byte_end":183322,"line_start":2565,"line_end":2565,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183323,"byte_end":183326,"line_start":2566,"line_end":2566,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183327,"byte_end":183341,"line_start":2567,"line_end":2567,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183342,"byte_end":183345,"line_start":2568,"line_end":2568,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183346,"byte_end":183353,"line_start":2569,"line_end":2569,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183354,"byte_end":183381,"line_start":2570,"line_end":2570,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183382,"byte_end":183385,"line_start":2571,"line_end":2571,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183386,"byte_end":183457,"line_start":2572,"line_end":2572,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183458,"byte_end":183461,"line_start":2573,"line_end":2573,"column_start":1,"column_end":4}},{"value":"/ let mut drain_iter = map.drain();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183462,"byte_end":183499,"line_start":2574,"line_end":2574,"column_start":1,"column_end":38}},{"value":"/ let mut vec = vec![drain_iter.next(), drain_iter.next(), drain_iter.next()];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183500,"byte_end":183580,"line_start":2575,"line_end":2575,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183581,"byte_end":183584,"line_start":2576,"line_end":2576,"column_start":1,"column_end":4}},{"value":"/ // The `Drain` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183585,"byte_end":183654,"line_start":2577,"line_end":2577,"column_start":1,"column_end":70}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183655,"byte_end":183719,"line_start":2578,"line_end":2578,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183720,"byte_end":183744,"line_start":2579,"line_end":2579,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some((1, \"a\")), Some((2, \"b\")), Some((3, \"c\"))]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183745,"byte_end":183815,"line_start":2580,"line_end":2580,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183816,"byte_end":183819,"line_start":2581,"line_end":2581,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183820,"byte_end":183847,"line_start":2582,"line_end":2582,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(drain_iter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183848,"byte_end":183888,"line_start":2583,"line_end":2583,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(drain_iter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183889,"byte_end":183929,"line_start":2584,"line_end":2584,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":183930,"byte_end":183937,"line_start":2585,"line_end":2585,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185440,"byte_end":185451,"line_start":2632,"line_end":2632,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::map::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" A draining iterator over entries of a `HashMap` which don't satisfy the predicate\n `f(&k, &mut v)` in arbitrary order. The iterator element type is `(K, V)`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashMap` which don't satisfy the predicate","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184362,"byte_end":184447,"line_start":2601,"line_end":2601,"column_start":1,"column_end":86}},{"value":"/ `f(&k, &mut v)` in arbitrary order. The iterator element type is `(K, V)`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184448,"byte_end":184526,"line_start":2602,"line_end":2602,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184527,"byte_end":184530,"line_start":2603,"line_end":2603,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashMap`]. See its","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184531,"byte_end":184614,"line_start":2604,"line_end":2604,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184615,"byte_end":184642,"line_start":2605,"line_end":2605,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184643,"byte_end":184646,"line_start":2606,"line_end":2606,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashMap.html#method.drain_filter","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184647,"byte_end":184708,"line_start":2607,"line_end":2607,"column_start":1,"column_end":62}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184709,"byte_end":184745,"line_start":2608,"line_end":2608,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184746,"byte_end":184749,"line_start":2609,"line_end":2609,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184750,"byte_end":184764,"line_start":2610,"line_end":2610,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184765,"byte_end":184768,"line_start":2611,"line_end":2611,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184769,"byte_end":184776,"line_start":2612,"line_end":2612,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184777,"byte_end":184804,"line_start":2613,"line_end":2613,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184805,"byte_end":184808,"line_start":2614,"line_end":2614,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<i32, &str> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184809,"byte_end":184885,"line_start":2615,"line_end":2615,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184886,"byte_end":184889,"line_start":2616,"line_end":2616,"column_start":1,"column_end":4}},{"value":"/ let mut drain_filter = map.drain_filter(|k, _v| k % 2 != 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184890,"byte_end":184954,"line_start":2617,"line_end":2617,"column_start":1,"column_end":65}},{"value":"/ let mut vec = vec![drain_filter.next(), drain_filter.next()];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184955,"byte_end":185020,"line_start":2618,"line_end":2618,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185021,"byte_end":185024,"line_start":2619,"line_end":2619,"column_start":1,"column_end":4}},{"value":"/ // The `DrainFilter` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185025,"byte_end":185100,"line_start":2620,"line_end":2620,"column_start":1,"column_end":76}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185101,"byte_end":185165,"line_start":2621,"line_end":2621,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185166,"byte_end":185190,"line_start":2622,"line_end":2622,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some((1, \"a\")),Some((3, \"c\"))]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185191,"byte_end":185244,"line_start":2623,"line_end":2623,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185245,"byte_end":185248,"line_start":2624,"line_end":2624,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185249,"byte_end":185276,"line_start":2625,"line_end":2625,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(drain_filter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185277,"byte_end":185319,"line_start":2626,"line_end":2626,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(drain_filter.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185320,"byte_end":185362,"line_start":2627,"line_end":2627,"column_start":1,"column_end":43}},{"value":"/ drop(drain_filter);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185363,"byte_end":185386,"line_start":2628,"line_end":2628,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185387,"byte_end":185390,"line_start":2629,"line_end":2629,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.len(), 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185391,"byte_end":185420,"line_start":2630,"line_end":2630,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185421,"byte_end":185428,"line_start":2631,"line_end":2631,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188326,"byte_end":188335,"line_start":2735,"line_end":2735,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":952}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap` in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `HashMap` in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187426,"byte_end":187499,"line_start":2708,"line_end":2708,"column_start":1,"column_end":74}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187500,"byte_end":187545,"line_start":2709,"line_end":2709,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187546,"byte_end":187549,"line_start":2710,"line_end":2710,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`HashMap`]. See its","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187550,"byte_end":187631,"line_start":2711,"line_end":2711,"column_start":1,"column_end":82}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187632,"byte_end":187659,"line_start":2712,"line_end":2712,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187660,"byte_end":187663,"line_start":2713,"line_end":2713,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.HashMap.html#method.values_mut","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187664,"byte_end":187721,"line_start":2714,"line_end":2714,"column_start":1,"column_end":58}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187722,"byte_end":187758,"line_start":2715,"line_end":2715,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187759,"byte_end":187762,"line_start":2716,"line_end":2716,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187763,"byte_end":187777,"line_start":2717,"line_end":2717,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187778,"byte_end":187781,"line_start":2718,"line_end":2718,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187782,"byte_end":187789,"line_start":2719,"line_end":2719,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187790,"byte_end":187817,"line_start":2720,"line_end":2720,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187818,"byte_end":187821,"line_start":2721,"line_end":2721,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<_, _> = [(1, \"One\".to_owned()), (2, \"Two\".into())].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187822,"byte_end":187905,"line_start":2722,"line_end":2722,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187906,"byte_end":187909,"line_start":2723,"line_end":2723,"column_start":1,"column_end":4}},{"value":"/ let mut values = map.values_mut();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187910,"byte_end":187948,"line_start":2724,"line_end":2724,"column_start":1,"column_end":39}},{"value":"/ values.next().map(|v| v.push_str(\" Mississippi\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":187949,"byte_end":188003,"line_start":2725,"line_end":2725,"column_start":1,"column_end":55}},{"value":"/ values.next().map(|v| v.push_str(\" Mississippi\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188004,"byte_end":188058,"line_start":2726,"line_end":2726,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188059,"byte_end":188062,"line_start":2727,"line_end":2727,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188063,"byte_end":188090,"line_start":2728,"line_end":2728,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188091,"byte_end":188127,"line_start":2729,"line_end":2729,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188128,"byte_end":188164,"line_start":2730,"line_end":2730,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188165,"byte_end":188168,"line_start":2731,"line_end":2731,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(&1).unwrap(), &\"One Mississippi\".to_owned());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188169,"byte_end":188237,"line_start":2732,"line_end":2732,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(map.get(&2).unwrap(), &\"Two Mississippi\".to_owned());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188238,"byte_end":188306,"line_start":2733,"line_end":2733,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188307,"byte_end":188314,"line_start":2734,"line_end":2734,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190325,"byte_end":190343,"line_start":2794,"line_end":2794,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":959}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188381,"byte_end":188465,"line_start":2739,"line_end":2739,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188466,"byte_end":188469,"line_start":2740,"line_end":2740,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry_mut`] docs for usage examples.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188470,"byte_end":188533,"line_start":2741,"line_end":2741,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188534,"byte_end":188537,"line_start":2742,"line_end":2742,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188538,"byte_end":188610,"line_start":2743,"line_end":2743,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188611,"byte_end":188614,"line_start":2744,"line_end":2744,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188615,"byte_end":188629,"line_start":2745,"line_end":2745,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188630,"byte_end":188633,"line_start":2746,"line_end":2746,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188634,"byte_end":188641,"line_start":2747,"line_end":2747,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{RawEntryBuilderMut, RawEntryMut::Vacant, RawEntryMut::Occupied};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188642,"byte_end":188736,"line_start":2748,"line_end":2748,"column_start":1,"column_end":95}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188737,"byte_end":188764,"line_start":2749,"line_end":2749,"column_start":1,"column_end":28}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188765,"byte_end":188805,"line_start":2750,"line_end":2750,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188806,"byte_end":188809,"line_start":2751,"line_end":2751,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188810,"byte_end":188843,"line_start":2752,"line_end":2752,"column_start":1,"column_end":34}},{"value":"/ map.extend([(1, 11), (2, 12), (3, 13), (4, 14), (5, 15), (6, 16)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188844,"byte_end":188915,"line_start":2753,"line_end":2753,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(map.len(), 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188916,"byte_end":188945,"line_start":2754,"line_end":2754,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188946,"byte_end":188949,"line_start":2755,"line_end":2755,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":188950,"byte_end":189039,"line_start":2756,"line_end":2756,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189040,"byte_end":189071,"line_start":2757,"line_end":2757,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189072,"byte_end":189124,"line_start":2758,"line_end":2758,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189125,"byte_end":189154,"line_start":2759,"line_end":2759,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189155,"byte_end":189177,"line_start":2760,"line_end":2760,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189178,"byte_end":189183,"line_start":2761,"line_end":2761,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189184,"byte_end":189187,"line_start":2762,"line_end":2762,"column_start":1,"column_end":4}},{"value":"/ let builder: RawEntryBuilderMut<_, _, _> = map.raw_entry_mut();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189188,"byte_end":189255,"line_start":2763,"line_end":2763,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189256,"byte_end":189259,"line_start":2764,"line_end":2764,"column_start":1,"column_end":4}},{"value":"/ // Existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189260,"byte_end":189279,"line_start":2765,"line_end":2765,"column_start":1,"column_end":20}},{"value":"/ match builder.from_key(&6) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189280,"byte_end":189312,"line_start":2766,"line_end":2766,"column_start":1,"column_end":33}},{"value":"/     Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189313,"byte_end":189349,"line_start":2767,"line_end":2767,"column_start":1,"column_end":37}},{"value":"/     Occupied(view) => assert_eq!(view.get(), &16),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189350,"byte_end":189404,"line_start":2768,"line_end":2768,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189405,"byte_end":189410,"line_start":2769,"line_end":2769,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189411,"byte_end":189414,"line_start":2770,"line_end":2770,"column_start":1,"column_end":4}},{"value":"/ for key in 0..12 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189415,"byte_end":189437,"line_start":2771,"line_end":2771,"column_start":1,"column_end":23}},{"value":"/     let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189438,"byte_end":189490,"line_start":2772,"line_end":2772,"column_start":1,"column_end":53}},{"value":"/     let value = map.get(&key).cloned();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189491,"byte_end":189534,"line_start":2773,"line_end":2773,"column_start":1,"column_end":44}},{"value":"/     let key_value = value.as_ref().map(|v| (&key, v));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189535,"byte_end":189593,"line_start":2774,"line_end":2774,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189594,"byte_end":189597,"line_start":2775,"line_end":2775,"column_start":1,"column_end":4}},{"value":"/     println!(\"Key: {} and value: {:?}\", key, value);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189598,"byte_end":189654,"line_start":2776,"line_end":2776,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189655,"byte_end":189658,"line_start":2777,"line_end":2777,"column_start":1,"column_end":4}},{"value":"/     match map.raw_entry_mut().from_key(&key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189659,"byte_end":189709,"line_start":2778,"line_end":2778,"column_start":1,"column_end":51}},{"value":"/         Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189710,"byte_end":189788,"line_start":2779,"line_end":2779,"column_start":1,"column_end":79}},{"value":"/         Vacant(_) => assert_eq!(value, None),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189789,"byte_end":189838,"line_start":2780,"line_end":2780,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189839,"byte_end":189848,"line_start":2781,"line_end":2781,"column_start":1,"column_end":10}},{"value":"/     match map.raw_entry_mut().from_key_hashed_nocheck(hash, &key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189849,"byte_end":189920,"line_start":2782,"line_end":2782,"column_start":1,"column_end":72}},{"value":"/         Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":189921,"byte_end":189999,"line_start":2783,"line_end":2783,"column_start":1,"column_end":79}},{"value":"/         Vacant(_) => assert_eq!(value, None),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190000,"byte_end":190049,"line_start":2784,"line_end":2784,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190050,"byte_end":190059,"line_start":2785,"line_end":2785,"column_start":1,"column_end":10}},{"value":"/     match map.raw_entry_mut().from_hash(hash, |q| *q == key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190060,"byte_end":190126,"line_start":2786,"line_end":2786,"column_start":1,"column_end":67}},{"value":"/         Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190127,"byte_end":190205,"line_start":2787,"line_end":2787,"column_start":1,"column_end":79}},{"value":"/         Vacant(_) => assert_eq!(value, None),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190206,"byte_end":190255,"line_start":2788,"line_end":2788,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190256,"byte_end":190265,"line_start":2789,"line_end":2789,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190266,"byte_end":190271,"line_start":2790,"line_end":2790,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190272,"byte_end":190275,"line_start":2791,"line_end":2791,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.len(), 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190276,"byte_end":190305,"line_start":2792,"line_end":2792,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190306,"byte_end":190313,"line_start":2793,"line_end":2793,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193710,"byte_end":193718,"line_start":2896,"line_end":2896,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut)","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" An occupied entry.","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193330,"byte_end":193352,"line_start":2883,"line_end":2883,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193357,"byte_end":193360,"line_start":2884,"line_end":2884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193365,"byte_end":193379,"line_start":2885,"line_end":2885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193384,"byte_end":193387,"line_start":2886,"line_end":2886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193392,"byte_end":193399,"line_start":2887,"line_end":2887,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::{hash_map::RawEntryMut, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193404,"byte_end":193456,"line_start":2888,"line_end":2888,"column_start":5,"column_end":57}},{"value":"/ let mut map: HashMap<_, _> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193461,"byte_end":193526,"line_start":2889,"line_end":2889,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193531,"byte_end":193534,"line_start":2890,"line_end":2890,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193539,"byte_end":193585,"line_start":2891,"line_end":2891,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193590,"byte_end":193639,"line_start":2892,"line_end":2892,"column_start":5,"column_end":54}},{"value":"/     RawEntryMut::Occupied(_) => { }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193644,"byte_end":193683,"line_start":2893,"line_end":2893,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193688,"byte_end":193693,"line_start":2894,"line_end":2894,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193698,"byte_end":193705,"line_start":2895,"line_end":2895,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194125,"byte_end":194131,"line_start":2910,"line_end":2910,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut)","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" A vacant entry.","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193761,"byte_end":193780,"line_start":2897,"line_end":2897,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193785,"byte_end":193788,"line_start":2898,"line_end":2898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193793,"byte_end":193807,"line_start":2899,"line_end":2899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193812,"byte_end":193815,"line_start":2900,"line_end":2900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193820,"byte_end":193827,"line_start":2901,"line_end":2901,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::{hash_map::RawEntryMut, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193832,"byte_end":193884,"line_start":2902,"line_end":2902,"column_start":5,"column_end":57}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193889,"byte_end":193942,"line_start":2903,"line_end":2903,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193947,"byte_end":193950,"line_start":2904,"line_end":2904,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193955,"byte_end":194000,"line_start":2905,"line_end":2905,"column_start":5,"column_end":50}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194005,"byte_end":194056,"line_start":2906,"line_end":2906,"column_start":5,"column_end":56}},{"value":"/     RawEntryMut::Vacant(_) => { }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194061,"byte_end":194098,"line_start":2907,"line_end":2907,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194103,"byte_end":194108,"line_start":2908,"line_end":2908,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194113,"byte_end":194120,"line_start":2909,"line_end":2909,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193268,"byte_end":193279,"line_start":2882,"line_end":2882,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"pub enum RawEntryMut<'a, K, V, S, A: Allocator + Clone = Global> {\n    Occupied(RawOccupiedEntryMut),\n    Vacant(RawVacantEntryMut),\n}","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":969}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190431,"byte_end":190511,"line_start":2798,"line_end":2798,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190512,"byte_end":190515,"line_start":2799,"line_end":2799,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level version of [`Entry`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190516,"byte_end":190563,"line_start":2800,"line_end":2800,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190564,"byte_end":190567,"line_start":2801,"line_end":2801,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190568,"byte_end":190651,"line_start":2802,"line_end":2802,"column_start":1,"column_end":84}},{"value":"/ then calling one of the methods of that [`RawEntryBuilderMut`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190652,"byte_end":190719,"line_start":2803,"line_end":2803,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190720,"byte_end":190723,"line_start":2804,"line_end":2804,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190724,"byte_end":190760,"line_start":2805,"line_end":2805,"column_start":1,"column_end":37}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190761,"byte_end":190791,"line_start":2806,"line_end":2806,"column_start":1,"column_end":31}},{"value":"/ [`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190792,"byte_end":190855,"line_start":2807,"line_end":2807,"column_start":1,"column_end":64}},{"value":"/ [`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190856,"byte_end":190914,"line_start":2808,"line_end":2808,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190915,"byte_end":190918,"line_start":2809,"line_end":2809,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190919,"byte_end":190933,"line_start":2810,"line_end":2810,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190934,"byte_end":190937,"line_start":2811,"line_end":2811,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190938,"byte_end":190945,"line_start":2812,"line_end":2812,"column_start":1,"column_end":8}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190946,"byte_end":190986,"line_start":2813,"line_end":2813,"column_start":1,"column_end":41}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut, RawOccupiedEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":190987,"byte_end":191060,"line_start":2814,"line_end":2814,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191061,"byte_end":191064,"line_start":2815,"line_end":2815,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191065,"byte_end":191098,"line_start":2816,"line_end":2816,"column_start":1,"column_end":34}},{"value":"/ map.extend([('a', 1), ('b', 2), ('c', 3)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191099,"byte_end":191146,"line_start":2817,"line_end":2817,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191147,"byte_end":191176,"line_start":2818,"line_end":2818,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191177,"byte_end":191180,"line_start":2819,"line_end":2819,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191181,"byte_end":191270,"line_start":2820,"line_end":2820,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191271,"byte_end":191302,"line_start":2821,"line_end":2821,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191303,"byte_end":191355,"line_start":2822,"line_end":2822,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191356,"byte_end":191385,"line_start":2823,"line_end":2823,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191386,"byte_end":191408,"line_start":2824,"line_end":2824,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191409,"byte_end":191414,"line_start":2825,"line_end":2825,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191415,"byte_end":191418,"line_start":2826,"line_end":2826,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191419,"byte_end":191447,"line_start":2827,"line_end":2827,"column_start":1,"column_end":29}},{"value":"/ let raw: RawEntryMut<_, _, _> = map.raw_entry_mut().from_key(&'a');","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191448,"byte_end":191519,"line_start":2828,"line_end":2828,"column_start":1,"column_end":72}},{"value":"/ let _raw_o: RawOccupiedEntryMut<_, _, _> = raw.insert('a', 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191520,"byte_end":191587,"line_start":2829,"line_end":2829,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191588,"byte_end":191617,"line_start":2830,"line_end":2830,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191618,"byte_end":191621,"line_start":2831,"line_end":2831,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191622,"byte_end":191653,"line_start":2832,"line_end":2832,"column_start":1,"column_end":32}},{"value":"/ map.raw_entry_mut().from_key(&'d').insert('d', 40);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191654,"byte_end":191709,"line_start":2833,"line_end":2833,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191710,"byte_end":191739,"line_start":2834,"line_end":2834,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191740,"byte_end":191743,"line_start":2835,"line_end":2835,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191744,"byte_end":191775,"line_start":2836,"line_end":2836,"column_start":1,"column_end":32}},{"value":"/ let hash = compute_hash(map.hasher(), &'b');","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191776,"byte_end":191824,"line_start":2837,"line_end":2837,"column_start":1,"column_end":49}},{"value":"/ let kv = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191825,"byte_end":191841,"line_start":2838,"line_end":2838,"column_start":1,"column_end":17}},{"value":"/     .raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191842,"byte_end":191866,"line_start":2839,"line_end":2839,"column_start":1,"column_end":25}},{"value":"/     .from_key_hashed_nocheck(hash, &'b')","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191867,"byte_end":191911,"line_start":2840,"line_end":2840,"column_start":1,"column_end":45}},{"value":"/     .or_insert('b', 20);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191912,"byte_end":191940,"line_start":2841,"line_end":2841,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(kv, (&mut 'b', &mut 2));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191941,"byte_end":191980,"line_start":2842,"line_end":2842,"column_start":1,"column_end":40}},{"value":"/ *kv.1 = 20;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191981,"byte_end":191996,"line_start":2843,"line_end":2843,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":191997,"byte_end":192026,"line_start":2844,"line_end":2844,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192027,"byte_end":192030,"line_start":2845,"line_end":2845,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (or_insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192031,"byte_end":192065,"line_start":2846,"line_end":2846,"column_start":1,"column_end":35}},{"value":"/ let hash = compute_hash(map.hasher(), &'e');","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192066,"byte_end":192114,"line_start":2847,"line_end":2847,"column_start":1,"column_end":49}},{"value":"/ let kv = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192115,"byte_end":192131,"line_start":2848,"line_end":2848,"column_start":1,"column_end":17}},{"value":"/     .raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192132,"byte_end":192156,"line_start":2849,"line_end":2849,"column_start":1,"column_end":25}},{"value":"/     .from_key_hashed_nocheck(hash, &'e')","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192157,"byte_end":192201,"line_start":2850,"line_end":2850,"column_start":1,"column_end":45}},{"value":"/     .or_insert('e', 50);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192202,"byte_end":192230,"line_start":2851,"line_end":2851,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(kv, (&mut 'e', &mut 50));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192231,"byte_end":192271,"line_start":2852,"line_end":2852,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(map.len(), 5);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192272,"byte_end":192301,"line_start":2853,"line_end":2853,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192302,"byte_end":192305,"line_start":2854,"line_end":2854,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert_with)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192306,"byte_end":192342,"line_start":2855,"line_end":2855,"column_start":1,"column_end":37}},{"value":"/ let hash = compute_hash(map.hasher(), &'c');","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192343,"byte_end":192391,"line_start":2856,"line_end":2856,"column_start":1,"column_end":49}},{"value":"/ let kv = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192392,"byte_end":192408,"line_start":2857,"line_end":2857,"column_start":1,"column_end":17}},{"value":"/     .raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192409,"byte_end":192433,"line_start":2858,"line_end":2858,"column_start":1,"column_end":25}},{"value":"/     .from_hash(hash, |q| q == &'c')","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192434,"byte_end":192473,"line_start":2859,"line_end":2859,"column_start":1,"column_end":40}},{"value":"/     .or_insert_with(|| ('c', 30));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192474,"byte_end":192512,"line_start":2860,"line_end":2860,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(kv, (&mut 'c', &mut 3));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192513,"byte_end":192552,"line_start":2861,"line_end":2861,"column_start":1,"column_end":40}},{"value":"/ *kv.1 = 30;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192553,"byte_end":192568,"line_start":2862,"line_end":2862,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(map.len(), 5);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192569,"byte_end":192598,"line_start":2863,"line_end":2863,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192599,"byte_end":192602,"line_start":2864,"line_end":2864,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (or_insert_with)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192603,"byte_end":192642,"line_start":2865,"line_end":2865,"column_start":1,"column_end":40}},{"value":"/ let hash = compute_hash(map.hasher(), &'f');","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192643,"byte_end":192691,"line_start":2866,"line_end":2866,"column_start":1,"column_end":49}},{"value":"/ let kv = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192692,"byte_end":192708,"line_start":2867,"line_end":2867,"column_start":1,"column_end":17}},{"value":"/     .raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192709,"byte_end":192733,"line_start":2868,"line_end":2868,"column_start":1,"column_end":25}},{"value":"/     .from_hash(hash, |q| q == &'f')","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192734,"byte_end":192773,"line_start":2869,"line_end":2869,"column_start":1,"column_end":40}},{"value":"/     .or_insert_with(|| ('f', 60));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192774,"byte_end":192812,"line_start":2870,"line_end":2870,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(kv, (&mut 'f', &mut 60));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192813,"byte_end":192853,"line_start":2871,"line_end":2871,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(map.len(), 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192854,"byte_end":192883,"line_start":2872,"line_end":2872,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192884,"byte_end":192887,"line_start":2873,"line_end":2873,"column_start":1,"column_end":4}},{"value":"/ println!(\"Our HashMap: {:?}\", map);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192888,"byte_end":192927,"line_start":2874,"line_end":2874,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192928,"byte_end":192931,"line_start":2875,"line_end":2875,"column_start":1,"column_end":4}},{"value":"/ let mut vec: Vec<_> = map.iter().map(|(&k, &v)| (k, v)).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":192932,"byte_end":193002,"line_start":2876,"line_end":2876,"column_start":1,"column_end":71}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193003,"byte_end":193071,"line_start":2877,"line_end":2877,"column_start":1,"column_end":69}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193072,"byte_end":193136,"line_start":2878,"line_end":2878,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193137,"byte_end":193161,"line_start":2879,"line_end":2879,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [('a', 10), ('b', 20), ('c', 30), ('d', 40), ('e', 50), ('f', 60)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193162,"byte_end":193250,"line_start":2880,"line_end":2880,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":193251,"byte_end":193258,"line_start":2881,"line_end":2881,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196134,"byte_end":196153,"line_start":2973,"line_end":2973,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194171,"byte_end":194220,"line_start":2913,"line_end":2913,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194221,"byte_end":194264,"line_start":2914,"line_end":2914,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194265,"byte_end":194268,"line_start":2915,"line_end":2915,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194269,"byte_end":194311,"line_start":2916,"line_end":2916,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194312,"byte_end":194315,"line_start":2917,"line_end":2917,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194316,"byte_end":194330,"line_start":2918,"line_end":2918,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194331,"byte_end":194334,"line_start":2919,"line_end":2919,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194335,"byte_end":194342,"line_start":2920,"line_end":2920,"column_start":1,"column_end":8}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194343,"byte_end":194383,"line_start":2921,"line_end":2921,"column_start":1,"column_end":41}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut, RawOccupiedEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194384,"byte_end":194457,"line_start":2922,"line_end":2922,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194458,"byte_end":194461,"line_start":2923,"line_end":2923,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194462,"byte_end":194495,"line_start":2924,"line_end":2924,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194496,"byte_end":194546,"line_start":2925,"line_end":2925,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194547,"byte_end":194550,"line_start":2926,"line_end":2926,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194551,"byte_end":194640,"line_start":2927,"line_end":2927,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194641,"byte_end":194672,"line_start":2928,"line_end":2928,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194673,"byte_end":194725,"line_start":2929,"line_end":2929,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194726,"byte_end":194755,"line_start":2930,"line_end":2930,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194756,"byte_end":194778,"line_start":2931,"line_end":2931,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194779,"byte_end":194784,"line_start":2932,"line_end":2932,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194785,"byte_end":194788,"line_start":2933,"line_end":2933,"column_start":1,"column_end":4}},{"value":"/ let _raw_o: RawOccupiedEntryMut<_, _, _> = map.raw_entry_mut().from_key(&\"a\").insert(\"a\", 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194789,"byte_end":194888,"line_start":2934,"line_end":2934,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194889,"byte_end":194918,"line_start":2935,"line_end":2935,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194919,"byte_end":194922,"line_start":2936,"line_end":2936,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert and update)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194923,"byte_end":194962,"line_start":2937,"line_end":2937,"column_start":1,"column_end":40}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":194963,"byte_end":195009,"line_start":2938,"line_end":2938,"column_start":1,"column_end":47}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195010,"byte_end":195059,"line_start":2939,"line_end":2939,"column_start":1,"column_end":50}},{"value":"/     RawEntryMut::Occupied(mut view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195060,"byte_end":195104,"line_start":2940,"line_end":2940,"column_start":1,"column_end":45}},{"value":"/         assert_eq!(view.get(), &100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195105,"byte_end":195146,"line_start":2941,"line_end":2941,"column_start":1,"column_end":42}},{"value":"/         let v = view.get_mut();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195147,"byte_end":195182,"line_start":2942,"line_end":2942,"column_start":1,"column_end":36}},{"value":"/         let new_v = (*v) * 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195183,"byte_end":195217,"line_start":2943,"line_end":2943,"column_start":1,"column_end":35}},{"value":"/         *v = new_v;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195218,"byte_end":195241,"line_start":2944,"line_end":2944,"column_start":1,"column_end":24}},{"value":"/         assert_eq!(view.insert(1111), 1000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195242,"byte_end":195290,"line_start":2945,"line_end":2945,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195291,"byte_end":195300,"line_start":2946,"line_end":2946,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195301,"byte_end":195306,"line_start":2947,"line_end":2947,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195307,"byte_end":195310,"line_start":2948,"line_end":2948,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map[&\"a\"], 1111);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195311,"byte_end":195343,"line_start":2949,"line_end":2949,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195344,"byte_end":195373,"line_start":2950,"line_end":2950,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195374,"byte_end":195377,"line_start":2951,"line_end":2951,"column_start":1,"column_end":4}},{"value":"/ // Existing key (take)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195378,"byte_end":195404,"line_start":2952,"line_end":2952,"column_start":1,"column_end":27}},{"value":"/ let hash = compute_hash(map.hasher(), &\"c\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195405,"byte_end":195453,"line_start":2953,"line_end":2953,"column_start":1,"column_end":49}},{"value":"/ match map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"c\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195454,"byte_end":195521,"line_start":2954,"line_end":2954,"column_start":1,"column_end":68}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195522,"byte_end":195571,"line_start":2955,"line_end":2955,"column_start":1,"column_end":50}},{"value":"/     RawEntryMut::Occupied(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195572,"byte_end":195612,"line_start":2956,"line_end":2956,"column_start":1,"column_end":41}},{"value":"/         assert_eq!(view.remove_entry(), (\"c\", 30));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195613,"byte_end":195668,"line_start":2957,"line_end":2957,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195669,"byte_end":195678,"line_start":2958,"line_end":2958,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195679,"byte_end":195684,"line_start":2959,"line_end":2959,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.raw_entry().from_key(&\"c\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195685,"byte_end":195738,"line_start":2960,"line_end":2960,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195739,"byte_end":195768,"line_start":2961,"line_end":2961,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195769,"byte_end":195772,"line_start":2962,"line_end":2962,"column_start":1,"column_end":4}},{"value":"/ let hash = compute_hash(map.hasher(), &\"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195773,"byte_end":195821,"line_start":2963,"line_end":2963,"column_start":1,"column_end":49}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| *q == \"b\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195822,"byte_end":195884,"line_start":2964,"line_end":2964,"column_start":1,"column_end":63}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195885,"byte_end":195934,"line_start":2965,"line_end":2965,"column_start":1,"column_end":50}},{"value":"/     RawEntryMut::Occupied(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195935,"byte_end":195975,"line_start":2966,"line_end":2966,"column_start":1,"column_end":41}},{"value":"/         assert_eq!(view.remove_entry(), (\"b\", 20));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":195976,"byte_end":196031,"line_start":2967,"line_end":2967,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196032,"byte_end":196041,"line_start":2968,"line_end":2968,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196042,"byte_end":196047,"line_start":2969,"line_end":2969,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.get(&\"b\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196048,"byte_end":196084,"line_start":2970,"line_end":2970,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(map.len(), 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196085,"byte_end":196114,"line_start":2971,"line_end":2971,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196115,"byte_end":196122,"line_start":2972,"line_end":2972,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198235,"byte_end":198252,"line_start":3044,"line_end":3044,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196597,"byte_end":196643,"line_start":2996,"line_end":2996,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196644,"byte_end":196687,"line_start":2997,"line_end":2997,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196688,"byte_end":196691,"line_start":2998,"line_end":2998,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196692,"byte_end":196734,"line_start":2999,"line_end":2999,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196735,"byte_end":196738,"line_start":3000,"line_end":3000,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196739,"byte_end":196753,"line_start":3001,"line_end":3001,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196754,"byte_end":196757,"line_start":3002,"line_end":3002,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196758,"byte_end":196765,"line_start":3003,"line_end":3003,"column_start":1,"column_end":8}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196766,"byte_end":196806,"line_start":3004,"line_end":3004,"column_start":1,"column_end":41}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut, RawVacantEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196807,"byte_end":196878,"line_start":3005,"line_end":3005,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196879,"byte_end":196882,"line_start":3006,"line_end":3006,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::<&str, i32>::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196883,"byte_end":196929,"line_start":3007,"line_end":3007,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196930,"byte_end":196933,"line_start":3008,"line_end":3008,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196934,"byte_end":197023,"line_start":3009,"line_end":3009,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197024,"byte_end":197055,"line_start":3010,"line_end":3010,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197056,"byte_end":197108,"line_start":3011,"line_end":3011,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197109,"byte_end":197138,"line_start":3012,"line_end":3012,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197139,"byte_end":197161,"line_start":3013,"line_end":3013,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197162,"byte_end":197167,"line_start":3014,"line_end":3014,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197168,"byte_end":197171,"line_start":3015,"line_end":3015,"column_start":1,"column_end":4}},{"value":"/ let raw_v: RawVacantEntryMut<_, _, _> = match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197172,"byte_end":197258,"line_start":3016,"line_end":3016,"column_start":1,"column_end":87}},{"value":"/     RawEntryMut::Vacant(view) => view,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197259,"byte_end":197301,"line_start":3017,"line_end":3017,"column_start":1,"column_end":43}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197302,"byte_end":197353,"line_start":3018,"line_end":3018,"column_start":1,"column_end":52}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197354,"byte_end":197360,"line_start":3019,"line_end":3019,"column_start":1,"column_end":7}},{"value":"/ raw_v.insert(\"a\", 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197361,"byte_end":197387,"line_start":3020,"line_end":3020,"column_start":1,"column_end":27}},{"value":"/ assert!(map[&\"a\"] == 10 && map.len() == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197388,"byte_end":197435,"line_start":3021,"line_end":3021,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197436,"byte_end":197439,"line_start":3022,"line_end":3022,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert and update)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197440,"byte_end":197482,"line_start":3023,"line_end":3023,"column_start":1,"column_end":43}},{"value":"/ let hash = compute_hash(map.hasher(), &\"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197483,"byte_end":197531,"line_start":3024,"line_end":3024,"column_start":1,"column_end":49}},{"value":"/ match map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"b\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197532,"byte_end":197599,"line_start":3025,"line_end":3025,"column_start":1,"column_end":68}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197600,"byte_end":197651,"line_start":3026,"line_end":3026,"column_start":1,"column_end":52}},{"value":"/     RawEntryMut::Vacant(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197652,"byte_end":197690,"line_start":3027,"line_end":3027,"column_start":1,"column_end":39}},{"value":"/         let (k, value) = view.insert(\"b\", 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197691,"byte_end":197740,"line_start":3028,"line_end":3028,"column_start":1,"column_end":50}},{"value":"/         assert_eq!((*k, *value), (\"b\", 2));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197741,"byte_end":197788,"line_start":3029,"line_end":3029,"column_start":1,"column_end":48}},{"value":"/         *value = 20;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197789,"byte_end":197813,"line_start":3030,"line_end":3030,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197814,"byte_end":197823,"line_start":3031,"line_end":3031,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197824,"byte_end":197829,"line_start":3032,"line_end":3032,"column_start":1,"column_end":6}},{"value":"/ assert!(map[&\"b\"] == 20 && map.len() == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197830,"byte_end":197877,"line_start":3033,"line_end":3033,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197878,"byte_end":197881,"line_start":3034,"line_end":3034,"column_start":1,"column_end":4}},{"value":"/ let hash = compute_hash(map.hasher(), &\"c\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197882,"byte_end":197930,"line_start":3035,"line_end":3035,"column_start":1,"column_end":49}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| *q == \"c\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197931,"byte_end":197993,"line_start":3036,"line_end":3036,"column_start":1,"column_end":63}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":197994,"byte_end":198045,"line_start":3037,"line_end":3037,"column_start":1,"column_end":52}},{"value":"/     RawEntryMut::Vacant(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198046,"byte_end":198084,"line_start":3038,"line_end":3038,"column_start":1,"column_end":39}},{"value":"/         assert_eq!(view.insert(\"c\", 30), (&mut \"c\", &mut 30));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198085,"byte_end":198151,"line_start":3039,"line_end":3039,"column_start":1,"column_end":67}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198152,"byte_end":198161,"line_start":3040,"line_end":3040,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198162,"byte_end":198167,"line_start":3041,"line_end":3041,"column_start":1,"column_end":6}},{"value":"/ assert!(map[&\"c\"] == 30 && map.len() == 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198168,"byte_end":198215,"line_start":3042,"line_end":3042,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198216,"byte_end":198223,"line_start":3043,"line_end":3043,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199530,"byte_end":199545,"line_start":3083,"line_end":3083,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":1005}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198367,"byte_end":198451,"line_start":3049,"line_end":3049,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198452,"byte_end":198455,"line_start":3050,"line_end":3050,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry`] docs for usage examples.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198456,"byte_end":198515,"line_start":3051,"line_end":3051,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198516,"byte_end":198519,"line_start":3052,"line_end":3052,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198520,"byte_end":198584,"line_start":3053,"line_end":3053,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198585,"byte_end":198588,"line_start":3054,"line_end":3054,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198589,"byte_end":198603,"line_start":3055,"line_end":3055,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198604,"byte_end":198607,"line_start":3056,"line_end":3056,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198608,"byte_end":198615,"line_start":3057,"line_end":3057,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryBuilder};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198616,"byte_end":198672,"line_start":3058,"line_end":3058,"column_start":1,"column_end":57}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198673,"byte_end":198713,"line_start":3059,"line_end":3059,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198714,"byte_end":198717,"line_start":3060,"line_end":3060,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198718,"byte_end":198751,"line_start":3061,"line_end":3061,"column_start":1,"column_end":34}},{"value":"/ map.extend([(1, 10), (2, 20), (3, 30)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198752,"byte_end":198796,"line_start":3062,"line_end":3062,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198797,"byte_end":198800,"line_start":3063,"line_end":3063,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198801,"byte_end":198890,"line_start":3064,"line_end":3064,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198891,"byte_end":198922,"line_start":3065,"line_end":3065,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198923,"byte_end":198975,"line_start":3066,"line_end":3066,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":198976,"byte_end":199005,"line_start":3067,"line_end":3067,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199006,"byte_end":199028,"line_start":3068,"line_end":3068,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199029,"byte_end":199034,"line_start":3069,"line_end":3069,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199035,"byte_end":199038,"line_start":3070,"line_end":3070,"column_start":1,"column_end":4}},{"value":"/ for k in 0..6 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199039,"byte_end":199058,"line_start":3071,"line_end":3071,"column_start":1,"column_end":20}},{"value":"/     let hash = compute_hash(map.hasher(), &k);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199059,"byte_end":199109,"line_start":3072,"line_end":3072,"column_start":1,"column_end":51}},{"value":"/     let v = map.get(&k).cloned();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199110,"byte_end":199147,"line_start":3073,"line_end":3073,"column_start":1,"column_end":38}},{"value":"/     let kv = v.as_ref().map(|v| (&k, v));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199148,"byte_end":199193,"line_start":3074,"line_end":3074,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199194,"byte_end":199197,"line_start":3075,"line_end":3075,"column_start":1,"column_end":4}},{"value":"/     println!(\"Key: {} and value: {:?}\", k, v);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199198,"byte_end":199248,"line_start":3076,"line_end":3076,"column_start":1,"column_end":51}},{"value":"/     let builder: RawEntryBuilder<_, _, _> = map.raw_entry();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199249,"byte_end":199313,"line_start":3077,"line_end":3077,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(builder.from_key(&k), kv);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199314,"byte_end":199359,"line_start":3078,"line_end":3078,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(map.raw_entry().from_hash(hash, |q| *q == k), kv);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199360,"byte_end":199429,"line_start":3079,"line_end":3079,"column_start":1,"column_end":70}},{"value":"/     assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &k), kv);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199430,"byte_end":199504,"line_start":3080,"line_end":3080,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199505,"byte_end":199510,"line_start":3081,"line_end":3081,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199511,"byte_end":199518,"line_start":3082,"line_end":3082,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200218,"byte_end":200226,"line_start":3103,"line_end":3103,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> RawEntryMut where S: BuildHasher,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199710,"byte_end":199757,"line_start":3088,"line_end":3088,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199762,"byte_end":199765,"line_start":3089,"line_end":3089,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199770,"byte_end":199784,"line_start":3090,"line_end":3090,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199789,"byte_end":199792,"line_start":3091,"line_end":3091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199797,"byte_end":199804,"line_start":3092,"line_end":3092,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199809,"byte_end":199861,"line_start":3093,"line_end":3093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199866,"byte_end":199869,"line_start":3094,"line_end":3094,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199874,"byte_end":199927,"line_start":3095,"line_end":3095,"column_start":5,"column_end":58}},{"value":"/ let key = \"a\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199932,"byte_end":199950,"line_start":3096,"line_end":3096,"column_start":5,"column_end":23}},{"value":"/ let entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_key(&key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199955,"byte_end":200033,"line_start":3097,"line_end":3097,"column_start":5,"column_end":83}},{"value":"/ entry.insert(key, 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200038,"byte_end":200065,"line_start":3098,"line_end":3098,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200070,"byte_end":200101,"line_start":3099,"line_end":3099,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200106,"byte_end":200113,"line_start":3100,"line_end":3100,"column_start":5,"column_end":12}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200167,"byte_end":200206,"line_start":3102,"line_end":3102,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201362,"byte_end":201385,"line_start":3137,"line_end":3137,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q) -> RawEntryMut where\nK: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key and its hash.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200491,"byte_end":200551,"line_start":3113,"line_end":3113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200556,"byte_end":200559,"line_start":3114,"line_end":3114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200564,"byte_end":200578,"line_start":3115,"line_end":3115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200583,"byte_end":200586,"line_start":3116,"line_end":3116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200591,"byte_end":200598,"line_start":3117,"line_end":3117,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200603,"byte_end":200643,"line_start":3118,"line_end":3118,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200648,"byte_end":200700,"line_start":3119,"line_end":3119,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200705,"byte_end":200708,"line_start":3120,"line_end":3120,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200713,"byte_end":200802,"line_start":3121,"line_end":3121,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200807,"byte_end":200838,"line_start":3122,"line_end":3122,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200843,"byte_end":200895,"line_start":3123,"line_end":3123,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200900,"byte_end":200929,"line_start":3124,"line_end":3124,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200934,"byte_end":200956,"line_start":3125,"line_end":3125,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200961,"byte_end":200966,"line_start":3126,"line_end":3126,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200971,"byte_end":200974,"line_start":3127,"line_end":3127,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":200979,"byte_end":201032,"line_start":3128,"line_end":3128,"column_start":5,"column_end":58}},{"value":"/ let key = \"a\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201037,"byte_end":201055,"line_start":3129,"line_end":3129,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201060,"byte_end":201108,"line_start":3130,"line_end":3130,"column_start":5,"column_end":53}},{"value":"/ let entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_key_hashed_nocheck(hash, &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201113,"byte_end":201212,"line_start":3131,"line_end":3131,"column_start":5,"column_end":104}},{"value":"/ entry.insert(key, 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201217,"byte_end":201244,"line_start":3132,"line_end":3132,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201249,"byte_end":201280,"line_start":3133,"line_end":3133,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201285,"byte_end":201292,"line_start":3134,"line_end":3134,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201297,"byte_end":201306,"line_start":3135,"line_end":3135,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201311,"byte_end":201350,"line_start":3136,"line_end":3136,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202550,"byte_end":202559,"line_start":3171,"line_end":3171,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> RawEntryMut where for<'b> F: FnMut(&'b K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash and matching function.","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given hash and matching function.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201639,"byte_end":201709,"line_start":3147,"line_end":3147,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201714,"byte_end":201717,"line_start":3148,"line_end":3148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201722,"byte_end":201736,"line_start":3149,"line_end":3149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201741,"byte_end":201744,"line_start":3150,"line_end":3150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201749,"byte_end":201756,"line_start":3151,"line_end":3151,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201761,"byte_end":201801,"line_start":3152,"line_end":3152,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201806,"byte_end":201858,"line_start":3153,"line_end":3153,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201863,"byte_end":201866,"line_start":3154,"line_end":3154,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201871,"byte_end":201960,"line_start":3155,"line_end":3155,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201965,"byte_end":201996,"line_start":3156,"line_end":3156,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202001,"byte_end":202053,"line_start":3157,"line_end":3157,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202058,"byte_end":202087,"line_start":3158,"line_end":3158,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202092,"byte_end":202114,"line_start":3159,"line_end":3159,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202119,"byte_end":202124,"line_start":3160,"line_end":3160,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202129,"byte_end":202132,"line_start":3161,"line_end":3161,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202137,"byte_end":202190,"line_start":3162,"line_end":3162,"column_start":5,"column_end":58}},{"value":"/ let key = \"a\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202195,"byte_end":202213,"line_start":3163,"line_end":3163,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202218,"byte_end":202266,"line_start":3164,"line_end":3164,"column_start":5,"column_end":53}},{"value":"/ let entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_hash(hash, |k| k == &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202271,"byte_end":202365,"line_start":3165,"line_end":3165,"column_start":5,"column_end":99}},{"value":"/ entry.insert(key, 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202370,"byte_end":202397,"line_start":3166,"line_end":3166,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202402,"byte_end":202433,"line_start":3167,"line_end":3167,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202438,"byte_end":202445,"line_start":3168,"line_end":3168,"column_start":5,"column_end":12}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":202499,"byte_end":202538,"line_start":3170,"line_end":3170,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203860,"byte_end":203868,"line_start":3211,"line_end":3211,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> Option<(&'a K, &'a V)> where\nS: BuildHasher, K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an immutable entry by key.","sig":null,"attributes":[{"value":"/ Access an immutable entry by key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203453,"byte_end":203490,"line_start":3198,"line_end":3198,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203495,"byte_end":203498,"line_start":3199,"line_end":3199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203503,"byte_end":203517,"line_start":3200,"line_end":3200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203522,"byte_end":203525,"line_start":3201,"line_end":3201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203530,"byte_end":203537,"line_start":3202,"line_end":3202,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203542,"byte_end":203569,"line_start":3203,"line_end":3203,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203574,"byte_end":203577,"line_start":3204,"line_end":3204,"column_start":5,"column_end":8}},{"value":"/ let map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203582,"byte_end":203648,"line_start":3205,"line_end":3205,"column_start":5,"column_end":71}},{"value":"/ let key = \"a\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203653,"byte_end":203671,"line_start":3206,"line_end":3206,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(map.raw_entry().from_key(&key), Some((&\"a\", &100)));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203676,"byte_end":203743,"line_start":3207,"line_end":3207,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203748,"byte_end":203755,"line_start":3208,"line_end":3208,"column_start":5,"column_end":12}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203809,"byte_end":203848,"line_start":3210,"line_end":3210,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204935,"byte_end":204958,"line_start":3243,"line_end":3243,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q)\n-> Option<(&'a K, &'a V)> where K: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an immutable entry by a key and its hash.","sig":null,"attributes":[{"value":"/ Access an immutable entry by a key and its hash.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204128,"byte_end":204180,"line_start":3221,"line_end":3221,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204185,"byte_end":204188,"line_start":3222,"line_end":3222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204193,"byte_end":204207,"line_start":3223,"line_end":3223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204212,"byte_end":204215,"line_start":3224,"line_end":3224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204220,"byte_end":204227,"line_start":3225,"line_end":3225,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204232,"byte_end":204272,"line_start":3226,"line_end":3226,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204277,"byte_end":204304,"line_start":3227,"line_end":3227,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204309,"byte_end":204312,"line_start":3228,"line_end":3228,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204317,"byte_end":204406,"line_start":3229,"line_end":3229,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204411,"byte_end":204442,"line_start":3230,"line_end":3230,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204447,"byte_end":204499,"line_start":3231,"line_end":3231,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204504,"byte_end":204533,"line_start":3232,"line_end":3232,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204538,"byte_end":204560,"line_start":3233,"line_end":3233,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204565,"byte_end":204570,"line_start":3234,"line_end":3234,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204575,"byte_end":204578,"line_start":3235,"line_end":3235,"column_start":5,"column_end":8}},{"value":"/ let map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204583,"byte_end":204649,"line_start":3236,"line_end":3236,"column_start":5,"column_end":71}},{"value":"/ let key = \"a\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204654,"byte_end":204672,"line_start":3237,"line_end":3237,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204677,"byte_end":204725,"line_start":3238,"line_end":3238,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &key), Some((&\"a\", &100)));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204730,"byte_end":204818,"line_start":3239,"line_end":3239,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204823,"byte_end":204830,"line_start":3240,"line_end":3240,"column_start":5,"column_end":12}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":204884,"byte_end":204923,"line_start":3242,"line_end":3242,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206279,"byte_end":206288,"line_start":3284,"line_end":3284,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> Option<(&'a K, &'a V)> where F: FnMut(&K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Access an immutable entry by hash and matching function.","sig":null,"attributes":[{"value":"/ Access an immutable entry by hash and matching function.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205469,"byte_end":205529,"line_start":3262,"line_end":3262,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205534,"byte_end":205537,"line_start":3263,"line_end":3263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205542,"byte_end":205556,"line_start":3264,"line_end":3264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205561,"byte_end":205564,"line_start":3265,"line_end":3265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205569,"byte_end":205576,"line_start":3266,"line_end":3266,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205581,"byte_end":205621,"line_start":3267,"line_end":3267,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205626,"byte_end":205653,"line_start":3268,"line_end":3268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205658,"byte_end":205661,"line_start":3269,"line_end":3269,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205666,"byte_end":205755,"line_start":3270,"line_end":3270,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205760,"byte_end":205791,"line_start":3271,"line_end":3271,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205796,"byte_end":205848,"line_start":3272,"line_end":3272,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205853,"byte_end":205882,"line_start":3273,"line_end":3273,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205887,"byte_end":205909,"line_start":3274,"line_end":3274,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205914,"byte_end":205919,"line_start":3275,"line_end":3275,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205924,"byte_end":205927,"line_start":3276,"line_end":3276,"column_start":5,"column_end":8}},{"value":"/ let map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":205932,"byte_end":205998,"line_start":3277,"line_end":3277,"column_start":5,"column_end":71}},{"value":"/ let key = \"a\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206003,"byte_end":206021,"line_start":3278,"line_end":3278,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206026,"byte_end":206074,"line_start":3279,"line_end":3279,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(map.raw_entry().from_hash(hash, |k| k == &key), Some((&\"a\", &100)));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206079,"byte_end":206162,"line_start":3280,"line_end":3280,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206167,"byte_end":206174,"line_start":3281,"line_end":3281,"column_start":5,"column_end":12}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206228,"byte_end":206267,"line_start":3283,"line_end":3283,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206957,"byte_end":206963,"line_start":3306,"line_end":3306,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"pub fn insert(Self, K, V) -> RawOccupiedEntryMut where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns a RawOccupiedEntryMut.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206513,"byte_end":206580,"line_start":3293,"line_end":3293,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206585,"byte_end":206588,"line_start":3294,"line_end":3294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206593,"byte_end":206607,"line_start":3295,"line_end":3295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206612,"byte_end":206615,"line_start":3296,"line_end":3296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206620,"byte_end":206627,"line_start":3297,"line_end":3297,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206632,"byte_end":206659,"line_start":3298,"line_end":3298,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206664,"byte_end":206667,"line_start":3299,"line_end":3299,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206672,"byte_end":206725,"line_start":3300,"line_end":3300,"column_start":5,"column_end":58}},{"value":"/ let entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206730,"byte_end":206814,"line_start":3301,"line_end":3301,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206819,"byte_end":206822,"line_start":3302,"line_end":3302,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.remove_entry(), (\"horseyland\", 37));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206827,"byte_end":206884,"line_start":3303,"line_end":3303,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206889,"byte_end":206896,"line_start":3304,"line_end":3304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207946,"byte_end":207955,"line_start":3337,"line_end":3337,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"pub fn or_insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207323,"byte_end":207405,"line_start":3320,"line_end":3320,"column_start":5,"column_end":87}},{"value":"/ mutable references to the key and value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207410,"byte_end":207467,"line_start":3321,"line_end":3321,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207472,"byte_end":207475,"line_start":3322,"line_end":3322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207480,"byte_end":207494,"line_start":3323,"line_end":3323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207499,"byte_end":207502,"line_start":3324,"line_end":3324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207507,"byte_end":207514,"line_start":3325,"line_end":3325,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207519,"byte_end":207546,"line_start":3326,"line_end":3326,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207551,"byte_end":207554,"line_start":3327,"line_end":3327,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207559,"byte_end":207612,"line_start":3328,"line_end":3328,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207617,"byte_end":207620,"line_start":3329,"line_end":3329,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207625,"byte_end":207697,"line_start":3330,"line_end":3330,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207702,"byte_end":207738,"line_start":3331,"line_end":3331,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207743,"byte_end":207746,"line_start":3332,"line_end":3332,"column_start":5,"column_end":8}},{"value":"/ *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207751,"byte_end":207832,"line_start":3333,"line_end":3333,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207837,"byte_end":207873,"line_start":3334,"line_end":3334,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":207878,"byte_end":207885,"line_start":3335,"line_end":3335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208859,"byte_end":208873,"line_start":3365,"line_end":3365,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> (&'a mut K, &'a mut V) where F: FnOnce()\n-> (K, V), K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208269,"byte_end":208362,"line_start":3348,"line_end":3348,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208367,"byte_end":208436,"line_start":3349,"line_end":3349,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208441,"byte_end":208444,"line_start":3350,"line_end":3350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208449,"byte_end":208463,"line_start":3351,"line_end":3351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208468,"byte_end":208471,"line_start":3352,"line_end":3352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208476,"byte_end":208483,"line_start":3353,"line_end":3353,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208488,"byte_end":208515,"line_start":3354,"line_end":3354,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208520,"byte_end":208523,"line_start":3355,"line_end":3355,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208528,"byte_end":208584,"line_start":3356,"line_end":3356,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208589,"byte_end":208592,"line_start":3357,"line_end":3357,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208597,"byte_end":208662,"line_start":3358,"line_end":3358,"column_start":5,"column_end":70}},{"value":"/     (\"poneyland\", \"hoho\".to_string())","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208667,"byte_end":208708,"line_start":3359,"line_end":3359,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208713,"byte_end":208720,"line_start":3360,"line_end":3360,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208725,"byte_end":208728,"line_start":3361,"line_end":3361,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208733,"byte_end":208786,"line_start":3362,"line_end":3362,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":208791,"byte_end":208798,"line_start":3363,"line_end":3363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209969,"byte_end":209979,"line_start":3403,"line_end":3403,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut K, &mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209252,"byte_end":209320,"line_start":3380,"line_end":3380,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209325,"byte_end":209360,"line_start":3381,"line_end":3381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209365,"byte_end":209368,"line_start":3382,"line_end":3382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209373,"byte_end":209387,"line_start":3383,"line_end":3383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209392,"byte_end":209395,"line_start":3384,"line_end":3384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209400,"byte_end":209407,"line_start":3385,"line_end":3385,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209412,"byte_end":209439,"line_start":3386,"line_end":3386,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209444,"byte_end":209447,"line_start":3387,"line_end":3387,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209452,"byte_end":209505,"line_start":3388,"line_end":3388,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209510,"byte_end":209513,"line_start":3389,"line_end":3389,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209518,"byte_end":209541,"line_start":3390,"line_end":3390,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209546,"byte_end":209575,"line_start":3391,"line_end":3391,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209580,"byte_end":209619,"line_start":3392,"line_end":3392,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209624,"byte_end":209659,"line_start":3393,"line_end":3393,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209664,"byte_end":209701,"line_start":3394,"line_end":3394,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209706,"byte_end":209709,"line_start":3395,"line_end":3395,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209714,"byte_end":209737,"line_start":3396,"line_end":3396,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209742,"byte_end":209771,"line_start":3397,"line_end":3397,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209776,"byte_end":209815,"line_start":3398,"line_end":3398,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209820,"byte_end":209854,"line_start":3399,"line_end":3399,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209859,"byte_end":209896,"line_start":3400,"line_end":3400,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":209901,"byte_end":209908,"line_start":3401,"line_end":3401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212065,"byte_end":212087,"line_start":3475,"line_end":3475,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<RawEntryMut>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210400,"byte_end":210470,"line_start":3419,"line_end":3419,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210475,"byte_end":210544,"line_start":3420,"line_end":3420,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210549,"byte_end":210582,"line_start":3421,"line_end":3421,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210587,"byte_end":210590,"line_start":3422,"line_end":3422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210595,"byte_end":210609,"line_start":3423,"line_end":3423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210614,"byte_end":210617,"line_start":3424,"line_end":3424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210622,"byte_end":210629,"line_start":3425,"line_end":3425,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210634,"byte_end":210661,"line_start":3426,"line_end":3426,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::RawEntryMut;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210666,"byte_end":210707,"line_start":3427,"line_end":3427,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210712,"byte_end":210715,"line_start":3428,"line_end":3428,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210720,"byte_end":210773,"line_start":3429,"line_end":3429,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210778,"byte_end":210781,"line_start":3430,"line_end":3430,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210786,"byte_end":210805,"line_start":3431,"line_end":3431,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210810,"byte_end":210834,"line_start":3432,"line_end":3432,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210839,"byte_end":210869,"line_start":3433,"line_end":3433,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210874,"byte_end":210925,"line_start":3434,"line_end":3434,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210930,"byte_end":210933,"line_start":3435,"line_end":3435,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210938,"byte_end":210955,"line_start":3436,"line_end":3436,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":210960,"byte_end":210997,"line_start":3437,"line_end":3437,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211002,"byte_end":211047,"line_start":3438,"line_end":3438,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211052,"byte_end":211057,"line_start":3439,"line_end":3439,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211062,"byte_end":211065,"line_start":3440,"line_end":3440,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211070,"byte_end":211102,"line_start":3441,"line_end":3441,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211107,"byte_end":211110,"line_start":3442,"line_end":3442,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211115,"byte_end":211134,"line_start":3443,"line_end":3443,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211139,"byte_end":211163,"line_start":3444,"line_end":3444,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211168,"byte_end":211198,"line_start":3445,"line_end":3445,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211203,"byte_end":211243,"line_start":3446,"line_end":3446,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211248,"byte_end":211288,"line_start":3447,"line_end":3447,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211293,"byte_end":211323,"line_start":3448,"line_end":3448,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211328,"byte_end":211351,"line_start":3449,"line_end":3449,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211356,"byte_end":211367,"line_start":3450,"line_end":3450,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211372,"byte_end":211375,"line_start":3451,"line_end":3451,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211380,"byte_end":211397,"line_start":3452,"line_end":3452,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Occupied(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211402,"byte_end":211439,"line_start":3453,"line_end":3453,"column_start":5,"column_end":42}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211444,"byte_end":211490,"line_start":3454,"line_end":3454,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211495,"byte_end":211532,"line_start":3455,"line_end":3455,"column_start":5,"column_end":42}},{"value":"/     },","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211537,"byte_end":211547,"line_start":3456,"line_end":3456,"column_start":5,"column_end":15}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211552,"byte_end":211595,"line_start":3457,"line_end":3457,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211600,"byte_end":211605,"line_start":3458,"line_end":3458,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211610,"byte_end":211613,"line_start":3459,"line_end":3459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211618,"byte_end":211655,"line_start":3460,"line_end":3460,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211660,"byte_end":211663,"line_start":3461,"line_end":3461,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211668,"byte_end":211687,"line_start":3462,"line_end":3462,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211692,"byte_end":211716,"line_start":3463,"line_end":3463,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211721,"byte_end":211751,"line_start":3464,"line_end":3464,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211756,"byte_end":211803,"line_start":3465,"line_end":3465,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211808,"byte_end":211811,"line_start":3466,"line_end":3466,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211816,"byte_end":211833,"line_start":3467,"line_end":3467,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211838,"byte_end":211875,"line_start":3468,"line_end":3468,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211880,"byte_end":211925,"line_start":3469,"line_end":3469,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211930,"byte_end":211935,"line_start":3470,"line_end":3470,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211940,"byte_end":211943,"line_start":3471,"line_end":3471,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211948,"byte_end":211992,"line_start":3472,"line_end":3472,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":211997,"byte_end":212004,"line_start":3473,"line_end":3473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212893,"byte_end":212896,"line_start":3502,"line_end":3502,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212405,"byte_end":212450,"line_start":3487,"line_end":3487,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212455,"byte_end":212458,"line_start":3488,"line_end":3488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212463,"byte_end":212477,"line_start":3489,"line_end":3489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212482,"byte_end":212485,"line_start":3490,"line_end":3490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212490,"byte_end":212497,"line_start":3491,"line_end":3491,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212502,"byte_end":212554,"line_start":3492,"line_end":3492,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212559,"byte_end":212562,"line_start":3493,"line_end":3493,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212567,"byte_end":212637,"line_start":3494,"line_end":3494,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212642,"byte_end":212645,"line_start":3495,"line_end":3495,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212650,"byte_end":212696,"line_start":3496,"line_end":3496,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212701,"byte_end":212744,"line_start":3497,"line_end":3497,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.key(), &\"a\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212749,"byte_end":212810,"line_start":3498,"line_end":3498,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212815,"byte_end":212820,"line_start":3499,"line_end":3499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212825,"byte_end":212832,"line_start":3500,"line_end":3500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213895,"byte_end":213902,"line_start":3533,"line_end":3533,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"pub fn key_mut(&mut Self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212964,"byte_end":213017,"line_start":3506,"line_end":3506,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213022,"byte_end":213025,"line_start":3507,"line_end":3507,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213030,"byte_end":213044,"line_start":3508,"line_end":3508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213049,"byte_end":213052,"line_start":3509,"line_end":3509,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213057,"byte_end":213064,"line_start":3510,"line_end":3510,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213069,"byte_end":213121,"line_start":3511,"line_end":3511,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213126,"byte_end":213146,"line_start":3512,"line_end":3512,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213151,"byte_end":213154,"line_start":3513,"line_end":3513,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213159,"byte_end":213190,"line_start":3514,"line_end":3514,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213195,"byte_end":213226,"line_start":3515,"line_end":3515,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213231,"byte_end":213234,"line_start":3516,"line_end":3516,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213239,"byte_end":213296,"line_start":3517,"line_end":3517,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213301,"byte_end":213337,"line_start":3518,"line_end":3518,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213342,"byte_end":213345,"line_start":3519,"line_end":3519,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213350,"byte_end":213384,"line_start":3520,"line_end":3520,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213389,"byte_end":213469,"line_start":3521,"line_end":3521,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213474,"byte_end":213477,"line_start":3522,"line_end":3522,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213482,"byte_end":213532,"line_start":3523,"line_end":3523,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213537,"byte_end":213580,"line_start":3524,"line_end":3524,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213585,"byte_end":213626,"line_start":3525,"line_end":3525,"column_start":5,"column_end":46}},{"value":"/         *o.key_mut() = key_two.clone();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213631,"byte_end":213674,"line_start":3526,"line_end":3526,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213679,"byte_end":213688,"line_start":3527,"line_end":3527,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213693,"byte_end":213698,"line_start":3528,"line_end":3528,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&key_two], 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213703,"byte_end":213737,"line_start":3529,"line_end":3529,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213742,"byte_end":213822,"line_start":3530,"line_end":3530,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213827,"byte_end":213834,"line_start":3531,"line_end":3531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215033,"byte_end":215041,"line_start":3567,"line_end":3567,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"pub fn into_key(Self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to the key in the entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":213982,"byte_end":214053,"line_start":3537,"line_end":3537,"column_start":5,"column_end":76}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214058,"byte_end":214102,"line_start":3538,"line_end":3538,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214107,"byte_end":214110,"line_start":3539,"line_end":3539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214115,"byte_end":214129,"line_start":3540,"line_end":3540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214134,"byte_end":214137,"line_start":3541,"line_end":3541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214142,"byte_end":214149,"line_start":3542,"line_end":3542,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214154,"byte_end":214206,"line_start":3543,"line_end":3543,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214211,"byte_end":214231,"line_start":3544,"line_end":3544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214236,"byte_end":214239,"line_start":3545,"line_end":3545,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214244,"byte_end":214275,"line_start":3546,"line_end":3546,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214280,"byte_end":214311,"line_start":3547,"line_end":3547,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214316,"byte_end":214319,"line_start":3548,"line_end":3548,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214324,"byte_end":214381,"line_start":3549,"line_end":3549,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214386,"byte_end":214422,"line_start":3550,"line_end":3550,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214427,"byte_end":214430,"line_start":3551,"line_end":3551,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214435,"byte_end":214469,"line_start":3552,"line_end":3552,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214474,"byte_end":214554,"line_start":3553,"line_end":3553,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214559,"byte_end":214562,"line_start":3554,"line_end":3554,"column_start":5,"column_end":8}},{"value":"/ let inside_key: &mut Rc<&str>;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214567,"byte_end":214601,"line_start":3555,"line_end":3555,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214606,"byte_end":214609,"line_start":3556,"line_end":3556,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214614,"byte_end":214664,"line_start":3557,"line_end":3557,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214669,"byte_end":214712,"line_start":3558,"line_end":3558,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => inside_key = o.into_key(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214717,"byte_end":214779,"line_start":3559,"line_end":3559,"column_start":5,"column_end":67}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214784,"byte_end":214789,"line_start":3560,"line_end":3560,"column_start":5,"column_end":10}},{"value":"/ *inside_key = key_two.clone();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214794,"byte_end":214828,"line_start":3561,"line_end":3561,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214833,"byte_end":214836,"line_start":3562,"line_end":3562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_two], 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214841,"byte_end":214875,"line_start":3563,"line_end":3563,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214880,"byte_end":214960,"line_start":3564,"line_end":3564,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":214965,"byte_end":214972,"line_start":3565,"line_end":3565,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215610,"byte_end":215613,"line_start":3586,"line_end":3586,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215119,"byte_end":215166,"line_start":3571,"line_end":3571,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215171,"byte_end":215174,"line_start":3572,"line_end":3572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215179,"byte_end":215193,"line_start":3573,"line_end":3573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215198,"byte_end":215201,"line_start":3574,"line_end":3574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215206,"byte_end":215213,"line_start":3575,"line_end":3575,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215218,"byte_end":215270,"line_start":3576,"line_end":3576,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215275,"byte_end":215278,"line_start":3577,"line_end":3577,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215283,"byte_end":215353,"line_start":3578,"line_end":3578,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215358,"byte_end":215361,"line_start":3579,"line_end":3579,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215366,"byte_end":215412,"line_start":3580,"line_end":3580,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215417,"byte_end":215460,"line_start":3581,"line_end":3581,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.get(), &100),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215465,"byte_end":215527,"line_start":3582,"line_end":3582,"column_start":5,"column_end":67}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215532,"byte_end":215537,"line_start":3583,"line_end":3583,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215542,"byte_end":215549,"line_start":3584,"line_end":3584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216355,"byte_end":216363,"line_start":3611,"line_end":3611,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215681,"byte_end":215762,"line_start":3590,"line_end":3590,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215767,"byte_end":215811,"line_start":3591,"line_end":3591,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215816,"byte_end":215819,"line_start":3592,"line_end":3592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215824,"byte_end":215838,"line_start":3593,"line_end":3593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215843,"byte_end":215846,"line_start":3594,"line_end":3594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215851,"byte_end":215858,"line_start":3595,"line_end":3595,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215863,"byte_end":215915,"line_start":3596,"line_end":3596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215920,"byte_end":215923,"line_start":3597,"line_end":3597,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":215928,"byte_end":215998,"line_start":3598,"line_end":3598,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216003,"byte_end":216006,"line_start":3599,"line_end":3599,"column_start":5,"column_end":8}},{"value":"/ let value: &mut u32;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216011,"byte_end":216035,"line_start":3600,"line_end":3600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216040,"byte_end":216043,"line_start":3601,"line_end":3601,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216048,"byte_end":216094,"line_start":3602,"line_end":3602,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216099,"byte_end":216142,"line_start":3603,"line_end":3603,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => value = o.into_mut(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216147,"byte_end":216204,"line_start":3604,"line_end":3604,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216209,"byte_end":216214,"line_start":3605,"line_end":3605,"column_start":5,"column_end":10}},{"value":"/ *value += 900;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216219,"byte_end":216237,"line_start":3606,"line_end":3606,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216242,"byte_end":216245,"line_start":3607,"line_end":3607,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"a\"], 1000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216250,"byte_end":216282,"line_start":3608,"line_end":3608,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216287,"byte_end":216294,"line_start":3609,"line_end":3609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216983,"byte_end":216990,"line_start":3632,"line_end":3632,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216441,"byte_end":216496,"line_start":3615,"line_end":3615,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216501,"byte_end":216504,"line_start":3616,"line_end":3616,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216509,"byte_end":216523,"line_start":3617,"line_end":3617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216528,"byte_end":216531,"line_start":3618,"line_end":3618,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216536,"byte_end":216543,"line_start":3619,"line_end":3619,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216548,"byte_end":216600,"line_start":3620,"line_end":3620,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216605,"byte_end":216608,"line_start":3621,"line_end":3621,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216613,"byte_end":216683,"line_start":3622,"line_end":3622,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216688,"byte_end":216691,"line_start":3623,"line_end":3623,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216696,"byte_end":216742,"line_start":3624,"line_end":3624,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216747,"byte_end":216790,"line_start":3625,"line_end":3625,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => *o.get_mut() += 900,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216795,"byte_end":216855,"line_start":3626,"line_end":3626,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216860,"byte_end":216865,"line_start":3627,"line_end":3627,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216870,"byte_end":216873,"line_start":3628,"line_end":3628,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"a\"], 1000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216878,"byte_end":216910,"line_start":3629,"line_end":3629,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":216915,"byte_end":216922,"line_start":3630,"line_end":3630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217587,"byte_end":217600,"line_start":3651,"line_end":3651,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"pub fn get_key_value(&Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key and value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217070,"byte_end":217125,"line_start":3636,"line_end":3636,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217130,"byte_end":217133,"line_start":3637,"line_end":3637,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217138,"byte_end":217152,"line_start":3638,"line_end":3638,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217157,"byte_end":217160,"line_start":3639,"line_end":3639,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217165,"byte_end":217172,"line_start":3640,"line_end":3640,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217177,"byte_end":217229,"line_start":3641,"line_end":3641,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217234,"byte_end":217237,"line_start":3642,"line_end":3642,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217242,"byte_end":217312,"line_start":3643,"line_end":3643,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217317,"byte_end":217320,"line_start":3644,"line_end":3644,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217325,"byte_end":217371,"line_start":3645,"line_end":3645,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217376,"byte_end":217419,"line_start":3646,"line_end":3646,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.get_key_value(), (&\"a\", &100)),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217424,"byte_end":217504,"line_start":3647,"line_end":3647,"column_start":5,"column_end":85}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217509,"byte_end":217514,"line_start":3648,"line_end":3648,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217519,"byte_end":217526,"line_start":3649,"line_end":3649,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218795,"byte_end":218812,"line_start":3687,"line_end":3687,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"pub fn get_key_value_mut(&mut Self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key and value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217745,"byte_end":217808,"line_start":3658,"line_end":3658,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217813,"byte_end":217816,"line_start":3659,"line_end":3659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217821,"byte_end":217835,"line_start":3660,"line_end":3660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217840,"byte_end":217843,"line_start":3661,"line_end":3661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217848,"byte_end":217855,"line_start":3662,"line_end":3662,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217860,"byte_end":217912,"line_start":3663,"line_end":3663,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217917,"byte_end":217937,"line_start":3664,"line_end":3664,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217942,"byte_end":217945,"line_start":3665,"line_end":3665,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217950,"byte_end":217981,"line_start":3666,"line_end":3666,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":217986,"byte_end":218017,"line_start":3667,"line_end":3667,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218022,"byte_end":218025,"line_start":3668,"line_end":3668,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218030,"byte_end":218087,"line_start":3669,"line_end":3669,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218092,"byte_end":218128,"line_start":3670,"line_end":3670,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218133,"byte_end":218136,"line_start":3671,"line_end":3671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218141,"byte_end":218175,"line_start":3672,"line_end":3672,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218180,"byte_end":218260,"line_start":3673,"line_end":3673,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218265,"byte_end":218268,"line_start":3674,"line_end":3674,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218273,"byte_end":218323,"line_start":3675,"line_end":3675,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218328,"byte_end":218371,"line_start":3676,"line_end":3676,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218376,"byte_end":218417,"line_start":3677,"line_end":3677,"column_start":5,"column_end":46}},{"value":"/         let (inside_key, inside_value) = o.get_key_value_mut();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218422,"byte_end":218489,"line_start":3678,"line_end":3678,"column_start":5,"column_end":72}},{"value":"/         *inside_key = key_two.clone();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218494,"byte_end":218536,"line_start":3679,"line_end":3679,"column_start":5,"column_end":47}},{"value":"/         *inside_value = 100;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218541,"byte_end":218573,"line_start":3680,"line_end":3680,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218578,"byte_end":218587,"line_start":3681,"line_end":3681,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218592,"byte_end":218597,"line_start":3682,"line_end":3682,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&key_two], 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218602,"byte_end":218637,"line_start":3683,"line_end":3683,"column_start":5,"column_end":40}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218642,"byte_end":218722,"line_start":3684,"line_end":3684,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218727,"byte_end":218734,"line_start":3685,"line_end":3685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220215,"byte_end":220229,"line_start":3728,"line_end":3728,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"pub fn into_key_value(Self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the key and value in the entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":218981,"byte_end":219070,"line_start":3694,"line_end":3694,"column_start":5,"column_end":94}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219075,"byte_end":219119,"line_start":3695,"line_end":3695,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219124,"byte_end":219127,"line_start":3696,"line_end":3696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219132,"byte_end":219146,"line_start":3697,"line_end":3697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219151,"byte_end":219154,"line_start":3698,"line_end":3698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219159,"byte_end":219166,"line_start":3699,"line_end":3699,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219171,"byte_end":219223,"line_start":3700,"line_end":3700,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219228,"byte_end":219248,"line_start":3701,"line_end":3701,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219253,"byte_end":219256,"line_start":3702,"line_end":3702,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219261,"byte_end":219292,"line_start":3703,"line_end":3703,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219297,"byte_end":219328,"line_start":3704,"line_end":3704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219333,"byte_end":219336,"line_start":3705,"line_end":3705,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219341,"byte_end":219398,"line_start":3706,"line_end":3706,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219403,"byte_end":219439,"line_start":3707,"line_end":3707,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219444,"byte_end":219447,"line_start":3708,"line_end":3708,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219452,"byte_end":219486,"line_start":3709,"line_end":3709,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219491,"byte_end":219571,"line_start":3710,"line_end":3710,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219576,"byte_end":219579,"line_start":3711,"line_end":3711,"column_start":5,"column_end":8}},{"value":"/ let inside_key: &mut Rc<&str>;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219584,"byte_end":219618,"line_start":3712,"line_end":3712,"column_start":5,"column_end":39}},{"value":"/ let inside_value: &mut u32;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219623,"byte_end":219654,"line_start":3713,"line_end":3713,"column_start":5,"column_end":36}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219659,"byte_end":219709,"line_start":3714,"line_end":3714,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219714,"byte_end":219757,"line_start":3715,"line_end":3715,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219762,"byte_end":219799,"line_start":3716,"line_end":3716,"column_start":5,"column_end":42}},{"value":"/         let tuple = o.into_key_value();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219804,"byte_end":219847,"line_start":3717,"line_end":3717,"column_start":5,"column_end":48}},{"value":"/         inside_key = tuple.0;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219852,"byte_end":219885,"line_start":3718,"line_end":3718,"column_start":5,"column_end":38}},{"value":"/         inside_value = tuple.1;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219890,"byte_end":219925,"line_start":3719,"line_end":3719,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219930,"byte_end":219939,"line_start":3720,"line_end":3720,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219944,"byte_end":219949,"line_start":3721,"line_end":3721,"column_start":5,"column_end":10}},{"value":"/ *inside_key = key_two.clone();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219954,"byte_end":219988,"line_start":3722,"line_end":3722,"column_start":5,"column_end":39}},{"value":"/ *inside_value = 100;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":219993,"byte_end":220017,"line_start":3723,"line_end":3723,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map[&key_two], 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220022,"byte_end":220057,"line_start":3724,"line_end":3724,"column_start":5,"column_end":40}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220062,"byte_end":220142,"line_start":3725,"line_end":3725,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220147,"byte_end":220154,"line_start":3726,"line_end":3726,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220965,"byte_end":220971,"line_start":3752,"line_end":3752,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220399,"byte_end":220466,"line_start":3735,"line_end":3735,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220471,"byte_end":220474,"line_start":3736,"line_end":3736,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220479,"byte_end":220493,"line_start":3737,"line_end":3737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220498,"byte_end":220501,"line_start":3738,"line_end":3738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220506,"byte_end":220513,"line_start":3739,"line_end":3739,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220518,"byte_end":220570,"line_start":3740,"line_end":3740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220575,"byte_end":220578,"line_start":3741,"line_end":3741,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220583,"byte_end":220653,"line_start":3742,"line_end":3742,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220658,"byte_end":220661,"line_start":3743,"line_end":3743,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220666,"byte_end":220712,"line_start":3744,"line_end":3744,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220717,"byte_end":220760,"line_start":3745,"line_end":3745,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => assert_eq!(o.insert(1000), 100),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220765,"byte_end":220837,"line_start":3746,"line_end":3746,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220842,"byte_end":220847,"line_start":3747,"line_end":3747,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220852,"byte_end":220855,"line_start":3748,"line_end":3748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"a\"], 1000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220860,"byte_end":220892,"line_start":3749,"line_end":3749,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":220897,"byte_end":220904,"line_start":3750,"line_end":3750,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222070,"byte_end":222080,"line_start":3784,"line_end":3784,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"pub fn insert_key(&mut Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221055,"byte_end":221122,"line_start":3756,"line_end":3756,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221127,"byte_end":221130,"line_start":3757,"line_end":3757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221135,"byte_end":221149,"line_start":3758,"line_end":3758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221154,"byte_end":221157,"line_start":3759,"line_end":3759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221162,"byte_end":221169,"line_start":3760,"line_end":3760,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221174,"byte_end":221226,"line_start":3761,"line_end":3761,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221231,"byte_end":221251,"line_start":3762,"line_end":3762,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221256,"byte_end":221259,"line_start":3763,"line_end":3763,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221264,"byte_end":221295,"line_start":3764,"line_end":3764,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221300,"byte_end":221331,"line_start":3765,"line_end":3765,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221336,"byte_end":221339,"line_start":3766,"line_end":3766,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221344,"byte_end":221401,"line_start":3767,"line_end":3767,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221406,"byte_end":221442,"line_start":3768,"line_end":3768,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221447,"byte_end":221450,"line_start":3769,"line_end":3769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221455,"byte_end":221489,"line_start":3770,"line_end":3770,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221494,"byte_end":221574,"line_start":3771,"line_end":3771,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221579,"byte_end":221582,"line_start":3772,"line_end":3772,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221587,"byte_end":221637,"line_start":3773,"line_end":3773,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221642,"byte_end":221685,"line_start":3774,"line_end":3774,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221690,"byte_end":221731,"line_start":3775,"line_end":3775,"column_start":5,"column_end":46}},{"value":"/         let old_key = o.insert_key(key_two.clone());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221736,"byte_end":221792,"line_start":3776,"line_end":3776,"column_start":5,"column_end":61}},{"value":"/         assert!(Rc::ptr_eq(&old_key, &key_one));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221797,"byte_end":221849,"line_start":3777,"line_end":3777,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221854,"byte_end":221863,"line_start":3778,"line_end":3778,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221868,"byte_end":221873,"line_start":3779,"line_end":3779,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&key_two], 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221878,"byte_end":221912,"line_start":3780,"line_end":3780,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":221917,"byte_end":221997,"line_start":3781,"line_end":3781,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222002,"byte_end":222009,"line_start":3782,"line_end":3782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222700,"byte_end":222706,"line_start":3804,"line_end":3804,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222160,"byte_end":222213,"line_start":3788,"line_end":3788,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222218,"byte_end":222221,"line_start":3789,"line_end":3789,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222226,"byte_end":222240,"line_start":3790,"line_end":3790,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222245,"byte_end":222248,"line_start":3791,"line_end":3791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222253,"byte_end":222260,"line_start":3792,"line_end":3792,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222265,"byte_end":222317,"line_start":3793,"line_end":3793,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222322,"byte_end":222325,"line_start":3794,"line_end":3794,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222330,"byte_end":222400,"line_start":3795,"line_end":3795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222405,"byte_end":222408,"line_start":3796,"line_end":3796,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222413,"byte_end":222459,"line_start":3797,"line_end":3797,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222464,"byte_end":222507,"line_start":3798,"line_end":3798,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.remove(), 100),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222512,"byte_end":222576,"line_start":3799,"line_end":3799,"column_start":5,"column_end":69}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222581,"byte_end":222586,"line_start":3800,"line_end":3800,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.get(&\"a\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222591,"byte_end":222627,"line_start":3801,"line_end":3801,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222632,"byte_end":222639,"line_start":3802,"line_end":3802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223318,"byte_end":223330,"line_start":3824,"line_end":3824,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222761,"byte_end":222818,"line_start":3808,"line_end":3808,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222823,"byte_end":222826,"line_start":3809,"line_end":3809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222831,"byte_end":222845,"line_start":3810,"line_end":3810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222850,"byte_end":222853,"line_start":3811,"line_end":3811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222858,"byte_end":222865,"line_start":3812,"line_end":3812,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222870,"byte_end":222922,"line_start":3813,"line_end":3813,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222927,"byte_end":222930,"line_start":3814,"line_end":3814,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":222935,"byte_end":223005,"line_start":3815,"line_end":3815,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223010,"byte_end":223013,"line_start":3816,"line_end":3816,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223018,"byte_end":223064,"line_start":3817,"line_end":3817,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223069,"byte_end":223112,"line_start":3818,"line_end":3818,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.remove_entry(), (\"a\", 100)),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223117,"byte_end":223194,"line_start":3819,"line_end":3819,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223199,"byte_end":223204,"line_start":3820,"line_end":3820,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.get(&\"a\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223209,"byte_end":223245,"line_start":3821,"line_end":3821,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223250,"byte_end":223257,"line_start":3822,"line_end":3822,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224618,"byte_end":224636,"line_start":3862,"line_end":3862,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<RawOccupiedEntryMut>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> RawEntryMut where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223408,"byte_end":223478,"line_start":3828,"line_end":3828,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223483,"byte_end":223544,"line_start":3829,"line_end":3829,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223549,"byte_end":223582,"line_start":3830,"line_end":3830,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223587,"byte_end":223590,"line_start":3831,"line_end":3831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223595,"byte_end":223609,"line_start":3832,"line_end":3832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223614,"byte_end":223617,"line_start":3833,"line_end":3833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223622,"byte_end":223629,"line_start":3834,"line_end":3834,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223634,"byte_end":223686,"line_start":3835,"line_end":3835,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223691,"byte_end":223694,"line_start":3836,"line_end":3836,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223699,"byte_end":223769,"line_start":3837,"line_end":3837,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223774,"byte_end":223777,"line_start":3838,"line_end":3838,"column_start":5,"column_end":8}},{"value":"/ let raw_entry = match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223782,"byte_end":223844,"line_start":3839,"line_end":3839,"column_start":5,"column_end":67}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223849,"byte_end":223892,"line_start":3840,"line_end":3840,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => o.replace_entry_with(|k, v| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223897,"byte_end":223962,"line_start":3841,"line_end":3841,"column_start":5,"column_end":70}},{"value":"/         assert_eq!(k, &\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":223967,"byte_end":223999,"line_start":3842,"line_end":3842,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(v, 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224004,"byte_end":224035,"line_start":3843,"line_end":3843,"column_start":5,"column_end":36}},{"value":"/         Some(v + 900)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224040,"byte_end":224065,"line_start":3844,"line_end":3844,"column_start":5,"column_end":30}},{"value":"/     }),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224070,"byte_end":224081,"line_start":3845,"line_end":3845,"column_start":5,"column_end":16}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224086,"byte_end":224092,"line_start":3846,"line_end":3846,"column_start":5,"column_end":11}},{"value":"/ let raw_entry = match raw_entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224097,"byte_end":224134,"line_start":3847,"line_end":3847,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224139,"byte_end":224182,"line_start":3848,"line_end":3848,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => o.replace_entry_with(|k, v| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224187,"byte_end":224252,"line_start":3849,"line_end":3849,"column_start":5,"column_end":70}},{"value":"/         assert_eq!(k, &\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224257,"byte_end":224289,"line_start":3850,"line_end":3850,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(v, 1000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224294,"byte_end":224326,"line_start":3851,"line_end":3851,"column_start":5,"column_end":37}},{"value":"/         None","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224331,"byte_end":224347,"line_start":3852,"line_end":3852,"column_start":5,"column_end":21}},{"value":"/     }),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224352,"byte_end":224363,"line_start":3853,"line_end":3853,"column_start":5,"column_end":16}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224368,"byte_end":224374,"line_start":3854,"line_end":3854,"column_start":5,"column_end":11}},{"value":"/ match raw_entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224379,"byte_end":224400,"line_start":3855,"line_end":3855,"column_start":5,"column_end":26}},{"value":"/     RawEntryMut::Vacant(_) => { },","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224405,"byte_end":224443,"line_start":3856,"line_end":3856,"column_start":5,"column_end":43}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224448,"byte_end":224493,"line_start":3857,"line_end":3857,"column_start":5,"column_end":50}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224498,"byte_end":224504,"line_start":3858,"line_end":3858,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(map.get(&\"a\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224509,"byte_end":224545,"line_start":3859,"line_end":3859,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":224550,"byte_end":224557,"line_start":3860,"line_end":3860,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225977,"byte_end":225983,"line_start":3904,"line_end":3904,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"pub fn insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225356,"byte_end":225415,"line_start":3886,"line_end":3886,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225420,"byte_end":225462,"line_start":3887,"line_end":3887,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225467,"byte_end":225470,"line_start":3888,"line_end":3888,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225475,"byte_end":225489,"line_start":3889,"line_end":3889,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225494,"byte_end":225497,"line_start":3890,"line_end":3890,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225502,"byte_end":225509,"line_start":3891,"line_end":3891,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225514,"byte_end":225566,"line_start":3892,"line_end":3892,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225571,"byte_end":225574,"line_start":3893,"line_end":3893,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225579,"byte_end":225649,"line_start":3894,"line_end":3894,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225654,"byte_end":225657,"line_start":3895,"line_end":3895,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"c\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225662,"byte_end":225708,"line_start":3896,"line_end":3896,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225713,"byte_end":225758,"line_start":3897,"line_end":3897,"column_start":5,"column_end":50}},{"value":"/     RawEntryMut::Vacant(v) => assert_eq!(v.insert(\"c\", 300), (&mut \"c\", &mut 300)),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225763,"byte_end":225850,"line_start":3898,"line_end":3898,"column_start":5,"column_end":92}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225855,"byte_end":225860,"line_start":3899,"line_end":3899,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225865,"byte_end":225868,"line_start":3900,"line_end":3900,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"c\"], 300);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225873,"byte_end":225904,"line_start":3901,"line_end":3901,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225909,"byte_end":225916,"line_start":3902,"line_end":3902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227360,"byte_end":227381,"line_start":3945,"line_end":3945,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"pub fn insert_hashed_nocheck(Self, u64, K, V) -> (&'a mut K, &'a mut V) where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226225,"byte_end":226284,"line_start":3913,"line_end":3913,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226289,"byte_end":226331,"line_start":3914,"line_end":3914,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226336,"byte_end":226339,"line_start":3915,"line_end":3915,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226344,"byte_end":226358,"line_start":3916,"line_end":3916,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226363,"byte_end":226366,"line_start":3917,"line_end":3917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226371,"byte_end":226378,"line_start":3918,"line_end":3918,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226383,"byte_end":226423,"line_start":3919,"line_end":3919,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226428,"byte_end":226480,"line_start":3920,"line_end":3920,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226485,"byte_end":226488,"line_start":3921,"line_end":3921,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226493,"byte_end":226582,"line_start":3922,"line_end":3922,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226587,"byte_end":226618,"line_start":3923,"line_end":3923,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226623,"byte_end":226675,"line_start":3924,"line_end":3924,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226680,"byte_end":226709,"line_start":3925,"line_end":3925,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226714,"byte_end":226736,"line_start":3926,"line_end":3926,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226741,"byte_end":226746,"line_start":3927,"line_end":3927,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226751,"byte_end":226754,"line_start":3928,"line_end":3928,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226759,"byte_end":226829,"line_start":3929,"line_end":3929,"column_start":5,"column_end":75}},{"value":"/ let key = \"c\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226834,"byte_end":226852,"line_start":3930,"line_end":3930,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226857,"byte_end":226905,"line_start":3931,"line_end":3931,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226910,"byte_end":226913,"line_start":3932,"line_end":3932,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key_hashed_nocheck(hash, &key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226918,"byte_end":226985,"line_start":3933,"line_end":3933,"column_start":5,"column_end":72}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":226990,"byte_end":227035,"line_start":3934,"line_end":3934,"column_start":5,"column_end":50}},{"value":"/     RawEntryMut::Vacant(v) => assert_eq!(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227040,"byte_end":227085,"line_start":3935,"line_end":3935,"column_start":5,"column_end":50}},{"value":"/         v.insert_hashed_nocheck(hash, key, 300),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227090,"byte_end":227142,"line_start":3936,"line_end":3936,"column_start":5,"column_end":57}},{"value":"/         (&mut \"c\", &mut 300)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227147,"byte_end":227179,"line_start":3937,"line_end":3937,"column_start":5,"column_end":37}},{"value":"/     ),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227184,"byte_end":227194,"line_start":3938,"line_end":3938,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227199,"byte_end":227204,"line_start":3939,"line_end":3939,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227209,"byte_end":227212,"line_start":3940,"line_end":3940,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"c\"], 300);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227217,"byte_end":227248,"line_start":3941,"line_end":3941,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227253,"byte_end":227260,"line_start":3942,"line_end":3942,"column_start":5,"column_end":12}},{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227314,"byte_end":227348,"line_start":3944,"line_end":3944,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":229003,"byte_end":229021,"line_start":3995,"line_end":3995,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"pub fn insert_with_hasher<H>(Self, u64, K, V, H) -> (&'a mut K, &'a mut V)\nwhere H: Fn(&K) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.","sig":null,"attributes":[{"value":"/ Set the value of an entry with a custom hasher function.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227706,"byte_end":227766,"line_start":3958,"line_end":3958,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227771,"byte_end":227774,"line_start":3959,"line_end":3959,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227779,"byte_end":227793,"line_start":3960,"line_end":3960,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227798,"byte_end":227801,"line_start":3961,"line_end":3961,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227806,"byte_end":227813,"line_start":3962,"line_end":3962,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227818,"byte_end":227858,"line_start":3963,"line_end":3963,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227863,"byte_end":227915,"line_start":3964,"line_end":3964,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227920,"byte_end":227923,"line_start":3965,"line_end":3965,"column_start":5,"column_end":8}},{"value":"/ fn make_hasher<K, S>(hash_builder: &S) -> impl Fn(&K) -> u64 + '_","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":227928,"byte_end":227997,"line_start":3966,"line_end":3966,"column_start":5,"column_end":74}},{"value":"/ where","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228002,"byte_end":228011,"line_start":3967,"line_end":3967,"column_start":5,"column_end":14}},{"value":"/     K: Hash + ?Sized,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228016,"byte_end":228041,"line_start":3968,"line_end":3968,"column_start":5,"column_end":30}},{"value":"/     S: BuildHasher,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228046,"byte_end":228069,"line_start":3969,"line_end":3969,"column_start":5,"column_end":28}},{"value":"/ {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228074,"byte_end":228079,"line_start":3970,"line_end":3970,"column_start":5,"column_end":10}},{"value":"/     move |key: &K| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228084,"byte_end":228108,"line_start":3971,"line_end":3971,"column_start":5,"column_end":29}},{"value":"/         use core::hash::Hasher;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228113,"byte_end":228148,"line_start":3972,"line_end":3972,"column_start":5,"column_end":40}},{"value":"/         let mut state = hash_builder.build_hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228153,"byte_end":228209,"line_start":3973,"line_end":3973,"column_start":5,"column_end":61}},{"value":"/         key.hash(&mut state);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228214,"byte_end":228247,"line_start":3974,"line_end":3974,"column_start":5,"column_end":38}},{"value":"/         state.finish()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228252,"byte_end":228278,"line_start":3975,"line_end":3975,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228283,"byte_end":228292,"line_start":3976,"line_end":3976,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228297,"byte_end":228302,"line_start":3977,"line_end":3977,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228307,"byte_end":228310,"line_start":3978,"line_end":3978,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228315,"byte_end":228368,"line_start":3979,"line_end":3979,"column_start":5,"column_end":58}},{"value":"/ let key = \"a\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228373,"byte_end":228391,"line_start":3980,"line_end":3980,"column_start":5,"column_end":23}},{"value":"/ let hash_builder = map.hasher().clone();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228396,"byte_end":228440,"line_start":3981,"line_end":3981,"column_start":5,"column_end":49}},{"value":"/ let hash = make_hasher(&hash_builder)(&key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228445,"byte_end":228493,"line_start":3982,"line_end":3982,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228498,"byte_end":228501,"line_start":3983,"line_end":3983,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| q == &key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228506,"byte_end":228568,"line_start":3984,"line_end":3984,"column_start":5,"column_end":67}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228573,"byte_end":228618,"line_start":3985,"line_end":3985,"column_start":5,"column_end":50}},{"value":"/     RawEntryMut::Vacant(v) => assert_eq!(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228623,"byte_end":228668,"line_start":3986,"line_end":3986,"column_start":5,"column_end":50}},{"value":"/         v.insert_with_hasher(hash, key, 100, make_hasher(&hash_builder)),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228673,"byte_end":228750,"line_start":3987,"line_end":3987,"column_start":5,"column_end":82}},{"value":"/         (&mut \"a\", &mut 100)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228755,"byte_end":228787,"line_start":3988,"line_end":3988,"column_start":5,"column_end":37}},{"value":"/     ),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228792,"byte_end":228802,"line_start":3989,"line_end":3989,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228807,"byte_end":228812,"line_start":3990,"line_end":3990,"column_start":5,"column_end":10}},{"value":"/ map.extend([(\"b\", 200), (\"c\", 300), (\"d\", 400), (\"e\", 500), (\"f\", 600)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228817,"byte_end":228894,"line_start":3991,"line_end":3991,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228899,"byte_end":228930,"line_start":3992,"line_end":3992,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":228935,"byte_end":228942,"line_start":3993,"line_end":3993,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233079,"byte_end":233087,"line_start":4127,"line_end":4127,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":" An occupied entry.","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232737,"byte_end":232759,"line_start":4114,"line_end":4114,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232764,"byte_end":232767,"line_start":4115,"line_end":4115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232772,"byte_end":232786,"line_start":4116,"line_end":4116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232791,"byte_end":232794,"line_start":4117,"line_end":4117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232799,"byte_end":232806,"line_start":4118,"line_end":4118,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232811,"byte_end":232857,"line_start":4119,"line_end":4119,"column_start":5,"column_end":51}},{"value":"/ let mut map: HashMap<_, _> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232862,"byte_end":232927,"line_start":4120,"line_end":4120,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232932,"byte_end":232935,"line_start":4121,"line_end":4121,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232940,"byte_end":232966,"line_start":4122,"line_end":4122,"column_start":5,"column_end":31}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232971,"byte_end":233014,"line_start":4123,"line_end":4123,"column_start":5,"column_end":48}},{"value":"/     Entry::Occupied(_) => { }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233019,"byte_end":233052,"line_start":4124,"line_end":4124,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233057,"byte_end":233062,"line_start":4125,"line_end":4125,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233067,"byte_end":233074,"line_start":4126,"line_end":4126,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233452,"byte_end":233458,"line_start":4142,"line_end":4142,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":" A vacant entry.","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233125,"byte_end":233144,"line_start":4129,"line_end":4129,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233149,"byte_end":233152,"line_start":4130,"line_end":4130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233157,"byte_end":233171,"line_start":4131,"line_end":4131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233176,"byte_end":233179,"line_start":4132,"line_end":4132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233184,"byte_end":233191,"line_start":4133,"line_end":4133,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233196,"byte_end":233242,"line_start":4134,"line_end":4134,"column_start":5,"column_end":51}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233247,"byte_end":233300,"line_start":4135,"line_end":4135,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233305,"byte_end":233308,"line_start":4136,"line_end":4136,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233313,"byte_end":233339,"line_start":4137,"line_end":4137,"column_start":5,"column_end":31}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233344,"byte_end":233389,"line_start":4138,"line_end":4138,"column_start":5,"column_end":50}},{"value":"/     Entry::Vacant(_) => { }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233394,"byte_end":233425,"line_start":4139,"line_end":4139,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233430,"byte_end":233435,"line_start":4140,"line_end":4140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233440,"byte_end":233447,"line_start":4141,"line_end":4141,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232668,"byte_end":232673,"line_start":4110,"line_end":4110,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a, K, V, S, A = Global> where A: Allocator + Clone {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1132}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231194,"byte_end":231274,"line_start":4067,"line_end":4067,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231275,"byte_end":231278,"line_start":4068,"line_end":4068,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashMap`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231279,"byte_end":231351,"line_start":4069,"line_end":4069,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231352,"byte_end":231355,"line_start":4070,"line_end":4070,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231356,"byte_end":231392,"line_start":4071,"line_end":4071,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashMap.html#method.entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231393,"byte_end":231440,"line_start":4072,"line_end":4072,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231441,"byte_end":231444,"line_start":4073,"line_end":4073,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231445,"byte_end":231459,"line_start":4074,"line_end":4074,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231460,"byte_end":231463,"line_start":4075,"line_end":4075,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231464,"byte_end":231471,"line_start":4076,"line_end":4076,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap, OccupiedEntry};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231472,"byte_end":231533,"line_start":4077,"line_end":4077,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231534,"byte_end":231537,"line_start":4078,"line_end":4078,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231538,"byte_end":231571,"line_start":4079,"line_end":4079,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231572,"byte_end":231622,"line_start":4080,"line_end":4080,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231623,"byte_end":231652,"line_start":4081,"line_end":4081,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231653,"byte_end":231656,"line_start":4082,"line_end":4082,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231657,"byte_end":231685,"line_start":4083,"line_end":4083,"column_start":1,"column_end":29}},{"value":"/ let entry: Entry<_, _, _> = map.entry(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231686,"byte_end":231733,"line_start":4084,"line_end":4084,"column_start":1,"column_end":48}},{"value":"/ let _raw_o: OccupiedEntry<_, _, _> = entry.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231734,"byte_end":231791,"line_start":4085,"line_end":4085,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231792,"byte_end":231821,"line_start":4086,"line_end":4086,"column_start":1,"column_end":30}},{"value":"/ // Nonexistent key (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231822,"byte_end":231853,"line_start":4087,"line_end":4087,"column_start":1,"column_end":32}},{"value":"/ map.entry(\"d\").insert(4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231854,"byte_end":231883,"line_start":4088,"line_end":4088,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231884,"byte_end":231887,"line_start":4089,"line_end":4089,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231888,"byte_end":231919,"line_start":4090,"line_end":4090,"column_start":1,"column_end":32}},{"value":"/ let v = map.entry(\"b\").or_insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231920,"byte_end":231960,"line_start":4091,"line_end":4091,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(std::mem::replace(v, 2), 20);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231961,"byte_end":232005,"line_start":4092,"line_end":4092,"column_start":1,"column_end":45}},{"value":"/ // Nonexistent key (or_insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232006,"byte_end":232040,"line_start":4093,"line_end":4093,"column_start":1,"column_end":35}},{"value":"/ map.entry(\"e\").or_insert(5);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232041,"byte_end":232073,"line_start":4094,"line_end":4094,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232074,"byte_end":232077,"line_start":4095,"line_end":4095,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert_with)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232078,"byte_end":232114,"line_start":4096,"line_end":4096,"column_start":1,"column_end":37}},{"value":"/ let v = map.entry(\"c\").or_insert_with(|| 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232115,"byte_end":232163,"line_start":4097,"line_end":4097,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(std::mem::replace(v, 3), 30);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232164,"byte_end":232208,"line_start":4098,"line_end":4098,"column_start":1,"column_end":45}},{"value":"/ // Nonexistent key (or_insert_with)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232209,"byte_end":232248,"line_start":4099,"line_end":4099,"column_start":1,"column_end":40}},{"value":"/ map.entry(\"f\").or_insert_with(|| 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232249,"byte_end":232289,"line_start":4100,"line_end":4100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232290,"byte_end":232293,"line_start":4101,"line_end":4101,"column_start":1,"column_end":4}},{"value":"/ println!(\"Our HashMap: {:?}\", map);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232294,"byte_end":232333,"line_start":4102,"line_end":4102,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232334,"byte_end":232337,"line_start":4103,"line_end":4103,"column_start":1,"column_end":4}},{"value":"/ let mut vec: Vec<_> = map.iter().map(|(&k, &v)| (k, v)).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232338,"byte_end":232408,"line_start":4104,"line_end":4104,"column_start":1,"column_end":71}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232409,"byte_end":232477,"line_start":4105,"line_end":4105,"column_start":1,"column_end":69}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232478,"byte_end":232542,"line_start":4106,"line_end":4106,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232543,"byte_end":232567,"line_start":4107,"line_end":4107,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3), (\"d\", 4), (\"e\", 5), (\"f\", 6)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232568,"byte_end":232650,"line_start":4108,"line_end":4108,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":232651,"byte_end":232658,"line_start":4109,"line_end":4109,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234929,"byte_end":234942,"line_start":4194,"line_end":4194,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233838,"byte_end":233887,"line_start":4154,"line_end":4154,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233888,"byte_end":233925,"line_start":4155,"line_end":4155,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233926,"byte_end":233929,"line_start":4156,"line_end":4156,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233930,"byte_end":233960,"line_start":4157,"line_end":4157,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233961,"byte_end":233964,"line_start":4158,"line_end":4158,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233965,"byte_end":233979,"line_start":4159,"line_end":4159,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233980,"byte_end":233983,"line_start":4160,"line_end":4160,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233984,"byte_end":233991,"line_start":4161,"line_end":4161,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap, OccupiedEntry};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233992,"byte_end":234053,"line_start":4162,"line_end":4162,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234054,"byte_end":234057,"line_start":4163,"line_end":4163,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234058,"byte_end":234091,"line_start":4164,"line_end":4164,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234092,"byte_end":234142,"line_start":4165,"line_end":4165,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234143,"byte_end":234146,"line_start":4166,"line_end":4166,"column_start":1,"column_end":4}},{"value":"/ let _entry_o: OccupiedEntry<_, _, _> = map.entry(\"a\").insert(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234147,"byte_end":234217,"line_start":4167,"line_end":4167,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234218,"byte_end":234247,"line_start":4168,"line_end":4168,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234248,"byte_end":234251,"line_start":4169,"line_end":4169,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert and update)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234252,"byte_end":234291,"line_start":4170,"line_end":4170,"column_start":1,"column_end":40}},{"value":"/ match map.entry(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234292,"byte_end":234318,"line_start":4171,"line_end":4171,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234319,"byte_end":234362,"line_start":4172,"line_end":4172,"column_start":1,"column_end":44}},{"value":"/     Entry::Occupied(mut view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234363,"byte_end":234401,"line_start":4173,"line_end":4173,"column_start":1,"column_end":39}},{"value":"/         assert_eq!(view.get(), &100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234402,"byte_end":234443,"line_start":4174,"line_end":4174,"column_start":1,"column_end":42}},{"value":"/         let v = view.get_mut();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234444,"byte_end":234479,"line_start":4175,"line_end":4175,"column_start":1,"column_end":36}},{"value":"/         *v *= 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234480,"byte_end":234501,"line_start":4176,"line_end":4176,"column_start":1,"column_end":22}},{"value":"/         assert_eq!(view.insert(1111), 1000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234502,"byte_end":234550,"line_start":4177,"line_end":4177,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234551,"byte_end":234560,"line_start":4178,"line_end":4178,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234561,"byte_end":234566,"line_start":4179,"line_end":4179,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234567,"byte_end":234570,"line_start":4180,"line_end":4180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map[&\"a\"], 1111);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234571,"byte_end":234603,"line_start":4181,"line_end":4181,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234604,"byte_end":234633,"line_start":4182,"line_end":4182,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234634,"byte_end":234637,"line_start":4183,"line_end":4183,"column_start":1,"column_end":4}},{"value":"/ // Existing key (take)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234638,"byte_end":234664,"line_start":4184,"line_end":4184,"column_start":1,"column_end":27}},{"value":"/ match map.entry(\"c\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234665,"byte_end":234691,"line_start":4185,"line_end":4185,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234692,"byte_end":234735,"line_start":4186,"line_end":4186,"column_start":1,"column_end":44}},{"value":"/     Entry::Occupied(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234736,"byte_end":234770,"line_start":4187,"line_end":4187,"column_start":1,"column_end":35}},{"value":"/         assert_eq!(view.remove_entry(), (\"c\", 30));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234771,"byte_end":234826,"line_start":4188,"line_end":4188,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234827,"byte_end":234836,"line_start":4189,"line_end":4189,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234837,"byte_end":234842,"line_start":4190,"line_end":4190,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.get(&\"c\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234843,"byte_end":234879,"line_start":4191,"line_end":4191,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234880,"byte_end":234909,"line_start":4192,"line_end":4192,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":234910,"byte_end":234917,"line_start":4193,"line_end":4193,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236515,"byte_end":236526,"line_start":4257,"line_end":4257,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235688,"byte_end":235734,"line_start":4227,"line_end":4227,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235735,"byte_end":235772,"line_start":4228,"line_end":4228,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235773,"byte_end":235776,"line_start":4229,"line_end":4229,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235777,"byte_end":235807,"line_start":4230,"line_end":4230,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235808,"byte_end":235811,"line_start":4231,"line_end":4231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235812,"byte_end":235826,"line_start":4232,"line_end":4232,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235827,"byte_end":235830,"line_start":4233,"line_end":4233,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235831,"byte_end":235838,"line_start":4234,"line_end":4234,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap, VacantEntry};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235839,"byte_end":235898,"line_start":4235,"line_end":4235,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235899,"byte_end":235902,"line_start":4236,"line_end":4236,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::<&str, i32>::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235903,"byte_end":235949,"line_start":4237,"line_end":4237,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235950,"byte_end":235953,"line_start":4238,"line_end":4238,"column_start":1,"column_end":4}},{"value":"/ let entry_v: VacantEntry<_, _, _> = match map.entry(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235954,"byte_end":236016,"line_start":4239,"line_end":4239,"column_start":1,"column_end":63}},{"value":"/     Entry::Vacant(view) => view,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236017,"byte_end":236053,"line_start":4240,"line_end":4240,"column_start":1,"column_end":37}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236054,"byte_end":236099,"line_start":4241,"line_end":4241,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236100,"byte_end":236106,"line_start":4242,"line_end":4242,"column_start":1,"column_end":7}},{"value":"/ entry_v.insert(10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236107,"byte_end":236130,"line_start":4243,"line_end":4243,"column_start":1,"column_end":24}},{"value":"/ assert!(map[&\"a\"] == 10 && map.len() == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236131,"byte_end":236178,"line_start":4244,"line_end":4244,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236179,"byte_end":236182,"line_start":4245,"line_end":4245,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert and update)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236183,"byte_end":236225,"line_start":4246,"line_end":4246,"column_start":1,"column_end":43}},{"value":"/ match map.entry(\"b\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236226,"byte_end":236252,"line_start":4247,"line_end":4247,"column_start":1,"column_end":27}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236253,"byte_end":236298,"line_start":4248,"line_end":4248,"column_start":1,"column_end":46}},{"value":"/     Entry::Vacant(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236299,"byte_end":236331,"line_start":4249,"line_end":4249,"column_start":1,"column_end":33}},{"value":"/         let value = view.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236332,"byte_end":236371,"line_start":4250,"line_end":4250,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*value, 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236372,"byte_end":236406,"line_start":4251,"line_end":4251,"column_start":1,"column_end":35}},{"value":"/         *value = 20;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236407,"byte_end":236431,"line_start":4252,"line_end":4252,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236432,"byte_end":236441,"line_start":4253,"line_end":4253,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236442,"byte_end":236447,"line_start":4254,"line_end":4254,"column_start":1,"column_end":6}},{"value":"/ assert!(map[&\"b\"] == 20 && map.len() == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236448,"byte_end":236495,"line_start":4255,"line_end":4255,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236496,"byte_end":236503,"line_start":4256,"line_end":4256,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239206,"byte_end":239214,"line_start":4338,"line_end":4338,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::EntryRef::Occupied","value":"EntryRef::Occupied(OccupiedEntryRef)","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" An occupied entry.","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238833,"byte_end":238855,"line_start":4325,"line_end":4325,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238860,"byte_end":238863,"line_start":4326,"line_end":4326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238868,"byte_end":238882,"line_start":4327,"line_end":4327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238887,"byte_end":238890,"line_start":4328,"line_end":4328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238895,"byte_end":238902,"line_start":4329,"line_end":4329,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238907,"byte_end":238956,"line_start":4330,"line_end":4330,"column_start":5,"column_end":54}},{"value":"/ let mut map: HashMap<_, _> = [(\"a\".to_owned(), 100), (\"b\".into(), 200)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238961,"byte_end":239044,"line_start":4331,"line_end":4331,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239049,"byte_end":239052,"line_start":4332,"line_end":4332,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239057,"byte_end":239087,"line_start":4333,"line_end":4333,"column_start":5,"column_end":35}},{"value":"/     EntryRef::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239092,"byte_end":239138,"line_start":4334,"line_end":4334,"column_start":5,"column_end":51}},{"value":"/     EntryRef::Occupied(_) => { }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239143,"byte_end":239179,"line_start":4335,"line_end":4335,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239184,"byte_end":239189,"line_start":4336,"line_end":4336,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239194,"byte_end":239201,"line_start":4337,"line_end":4337,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239604,"byte_end":239610,"line_start":4353,"line_end":4353,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::EntryRef::Vacant","value":"EntryRef::Vacant(VacantEntryRef)","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" A vacant entry.","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239262,"byte_end":239281,"line_start":4340,"line_end":4340,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239286,"byte_end":239289,"line_start":4341,"line_end":4341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239294,"byte_end":239308,"line_start":4342,"line_end":4342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239313,"byte_end":239316,"line_start":4343,"line_end":4343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239321,"byte_end":239328,"line_start":4344,"line_end":4344,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239333,"byte_end":239382,"line_start":4345,"line_end":4345,"column_start":5,"column_end":54}},{"value":"/ let mut map: HashMap<String, i32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239387,"byte_end":239442,"line_start":4346,"line_end":4346,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239447,"byte_end":239450,"line_start":4347,"line_end":4347,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239455,"byte_end":239485,"line_start":4348,"line_end":4348,"column_start":5,"column_end":35}},{"value":"/     EntryRef::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239490,"byte_end":239538,"line_start":4349,"line_end":4349,"column_start":5,"column_end":53}},{"value":"/     EntryRef::Vacant(_) => { }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239543,"byte_end":239577,"line_start":4350,"line_end":4350,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239582,"byte_end":239587,"line_start":4351,"line_end":4351,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239592,"byte_end":239599,"line_start":4352,"line_end":4352,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238746,"byte_end":238754,"line_start":4321,"line_end":4321,"column_start":10,"column_end":18},"name":"EntryRef","qualname":"::map::EntryRef","value":"pub enum EntryRef<'a, 'b, K, Q: ?Sized, V, S, A = Global> where A: Allocator +\n    Clone {\n    Occupied(OccupiedEntryRef),\n    Vacant(VacantEntryRef),\n}","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1193}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied,\n with any borrowed form of the map's key type.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236862,"byte_end":236942,"line_start":4269,"line_end":4269,"column_start":1,"column_end":81}},{"value":"/ with any borrowed form of the map's key type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236943,"byte_end":236992,"line_start":4270,"line_end":4270,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236993,"byte_end":236996,"line_start":4271,"line_end":4271,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236997,"byte_end":237000,"line_start":4272,"line_end":4272,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry_ref`] method on [`HashMap`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237001,"byte_end":237077,"line_start":4273,"line_end":4273,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237078,"byte_end":237081,"line_start":4274,"line_end":4274,"column_start":1,"column_end":4}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form of the map's key type *must* match those","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237082,"byte_end":237167,"line_start":4275,"line_end":4275,"column_start":1,"column_end":86}},{"value":"/ for the key type. It also require that key may be constructed from the borrowed","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237168,"byte_end":237251,"line_start":4276,"line_end":4276,"column_start":1,"column_end":84}},{"value":"/ form through the [`From`] trait.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237252,"byte_end":237288,"line_start":4277,"line_end":4277,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237289,"byte_end":237292,"line_start":4278,"line_end":4278,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237293,"byte_end":237329,"line_start":4279,"line_end":4279,"column_start":1,"column_end":37}},{"value":"/ [`entry_ref`]: struct.HashMap.html#method.entry_ref","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237330,"byte_end":237385,"line_start":4280,"line_end":4280,"column_start":1,"column_end":56}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237386,"byte_end":237445,"line_start":4281,"line_end":4281,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237446,"byte_end":237510,"line_start":4282,"line_end":4282,"column_start":1,"column_end":65}},{"value":"/ [`From`]: https://doc.rust-lang.org/std/convert/trait.From.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237511,"byte_end":237578,"line_start":4283,"line_end":4283,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237579,"byte_end":237582,"line_start":4284,"line_end":4284,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237583,"byte_end":237597,"line_start":4285,"line_end":4285,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237598,"byte_end":237601,"line_start":4286,"line_end":4286,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237602,"byte_end":237609,"line_start":4287,"line_end":4287,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap, OccupiedEntryRef};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237610,"byte_end":237677,"line_start":4288,"line_end":4288,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237678,"byte_end":237681,"line_start":4289,"line_end":4289,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237682,"byte_end":237715,"line_start":4290,"line_end":4290,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\".to_owned(), 10), (\"b\".into(), 20), (\"c\".into(), 30)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237716,"byte_end":237791,"line_start":4291,"line_end":4291,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237792,"byte_end":237821,"line_start":4292,"line_end":4292,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237822,"byte_end":237825,"line_start":4293,"line_end":4293,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237826,"byte_end":237854,"line_start":4294,"line_end":4294,"column_start":1,"column_end":29}},{"value":"/ let key = String::from(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237855,"byte_end":237887,"line_start":4295,"line_end":4295,"column_start":1,"column_end":33}},{"value":"/ let entry: EntryRef<_, _, _, _> = map.entry_ref(&key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237888,"byte_end":237946,"line_start":4296,"line_end":4296,"column_start":1,"column_end":59}},{"value":"/ let _raw_o: OccupiedEntryRef<_, _, _, _> = entry.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":237947,"byte_end":238010,"line_start":4297,"line_end":4297,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238011,"byte_end":238040,"line_start":4298,"line_end":4298,"column_start":1,"column_end":30}},{"value":"/ // Nonexistent key (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238041,"byte_end":238072,"line_start":4299,"line_end":4299,"column_start":1,"column_end":32}},{"value":"/ map.entry_ref(\"d\").insert(4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238073,"byte_end":238106,"line_start":4300,"line_end":4300,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238107,"byte_end":238110,"line_start":4301,"line_end":4301,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238111,"byte_end":238142,"line_start":4302,"line_end":4302,"column_start":1,"column_end":32}},{"value":"/ let v = map.entry_ref(\"b\").or_insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238143,"byte_end":238187,"line_start":4303,"line_end":4303,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(std::mem::replace(v, 2), 20);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238188,"byte_end":238232,"line_start":4304,"line_end":4304,"column_start":1,"column_end":45}},{"value":"/ // Nonexistent key (or_insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238233,"byte_end":238267,"line_start":4305,"line_end":4305,"column_start":1,"column_end":35}},{"value":"/ map.entry_ref(\"e\").or_insert(5);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238268,"byte_end":238304,"line_start":4306,"line_end":4306,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238305,"byte_end":238308,"line_start":4307,"line_end":4307,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert_with)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238309,"byte_end":238345,"line_start":4308,"line_end":4308,"column_start":1,"column_end":37}},{"value":"/ let v = map.entry_ref(\"c\").or_insert_with(|| 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238346,"byte_end":238398,"line_start":4309,"line_end":4309,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(std::mem::replace(v, 3), 30);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238399,"byte_end":238443,"line_start":4310,"line_end":4310,"column_start":1,"column_end":45}},{"value":"/ // Nonexistent key (or_insert_with)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238444,"byte_end":238483,"line_start":4311,"line_end":4311,"column_start":1,"column_end":40}},{"value":"/ map.entry_ref(\"f\").or_insert_with(|| 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238484,"byte_end":238528,"line_start":4312,"line_end":4312,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238529,"byte_end":238532,"line_start":4313,"line_end":4313,"column_start":1,"column_end":4}},{"value":"/ println!(\"Our HashMap: {:?}\", map);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238533,"byte_end":238572,"line_start":4314,"line_end":4314,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238573,"byte_end":238576,"line_start":4315,"line_end":4315,"column_start":1,"column_end":4}},{"value":"/ for (key, value) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().zip(1..=6) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238577,"byte_end":238656,"line_start":4316,"line_end":4316,"column_start":1,"column_end":80}},{"value":"/     assert_eq!(map[key], value)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238657,"byte_end":238692,"line_start":4317,"line_end":4317,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238693,"byte_end":238698,"line_start":4318,"line_end":4318,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.len(), 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238699,"byte_end":238728,"line_start":4319,"line_end":4319,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":238729,"byte_end":238736,"line_start":4320,"line_end":4320,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241813,"byte_end":241829,"line_start":4434,"line_end":4434,"column_start":12,"column_end":28},"name":"OccupiedEntryRef","qualname":"::map::OccupiedEntryRef","value":"OccupiedEntryRef {  }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`EntryRef`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240609,"byte_end":240658,"line_start":4393,"line_end":4393,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`EntryRef`] enum.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240659,"byte_end":240699,"line_start":4394,"line_end":4394,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240700,"byte_end":240703,"line_start":4395,"line_end":4395,"column_start":1,"column_end":4}},{"value":"/ [`EntryRef`]: enum.EntryRef.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240704,"byte_end":240740,"line_start":4396,"line_end":4396,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240741,"byte_end":240744,"line_start":4397,"line_end":4397,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240745,"byte_end":240759,"line_start":4398,"line_end":4398,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240760,"byte_end":240763,"line_start":4399,"line_end":4399,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240764,"byte_end":240771,"line_start":4400,"line_end":4400,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap, OccupiedEntryRef};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240772,"byte_end":240839,"line_start":4401,"line_end":4401,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240840,"byte_end":240843,"line_start":4402,"line_end":4402,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240844,"byte_end":240877,"line_start":4403,"line_end":4403,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\".to_owned(), 10), (\"b\".into(), 20), (\"c\".into(), 30)]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240878,"byte_end":240953,"line_start":4404,"line_end":4404,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240954,"byte_end":240957,"line_start":4405,"line_end":4405,"column_start":1,"column_end":4}},{"value":"/ let key = String::from(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240958,"byte_end":240990,"line_start":4406,"line_end":4406,"column_start":1,"column_end":33}},{"value":"/ let _entry_o: OccupiedEntryRef<_, _, _, _> = map.entry_ref(&key).insert(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240991,"byte_end":241072,"line_start":4407,"line_end":4407,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241073,"byte_end":241102,"line_start":4408,"line_end":4408,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241103,"byte_end":241106,"line_start":4409,"line_end":4409,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert and update)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241107,"byte_end":241146,"line_start":4410,"line_end":4410,"column_start":1,"column_end":40}},{"value":"/ match map.entry_ref(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241147,"byte_end":241177,"line_start":4411,"line_end":4411,"column_start":1,"column_end":31}},{"value":"/     EntryRef::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241178,"byte_end":241224,"line_start":4412,"line_end":4412,"column_start":1,"column_end":47}},{"value":"/     EntryRef::Occupied(mut view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241225,"byte_end":241266,"line_start":4413,"line_end":4413,"column_start":1,"column_end":42}},{"value":"/         assert_eq!(view.get(), &100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241267,"byte_end":241308,"line_start":4414,"line_end":4414,"column_start":1,"column_end":42}},{"value":"/         let v = view.get_mut();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241309,"byte_end":241344,"line_start":4415,"line_end":4415,"column_start":1,"column_end":36}},{"value":"/         *v *= 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241345,"byte_end":241366,"line_start":4416,"line_end":4416,"column_start":1,"column_end":22}},{"value":"/         assert_eq!(view.insert(1111), 1000);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241367,"byte_end":241415,"line_start":4417,"line_end":4417,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241416,"byte_end":241425,"line_start":4418,"line_end":4418,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241426,"byte_end":241431,"line_start":4419,"line_end":4419,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241432,"byte_end":241435,"line_start":4420,"line_end":4420,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map[\"a\"], 1111);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241436,"byte_end":241467,"line_start":4421,"line_end":4421,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241468,"byte_end":241497,"line_start":4422,"line_end":4422,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241498,"byte_end":241501,"line_start":4423,"line_end":4423,"column_start":1,"column_end":4}},{"value":"/ // Existing key (take)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241502,"byte_end":241528,"line_start":4424,"line_end":4424,"column_start":1,"column_end":27}},{"value":"/ match map.entry_ref(\"c\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241529,"byte_end":241559,"line_start":4425,"line_end":4425,"column_start":1,"column_end":31}},{"value":"/     EntryRef::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241560,"byte_end":241606,"line_start":4426,"line_end":4426,"column_start":1,"column_end":47}},{"value":"/     EntryRef::Occupied(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241607,"byte_end":241644,"line_start":4427,"line_end":4427,"column_start":1,"column_end":38}},{"value":"/         assert_eq!(view.remove_entry(), (\"c\".to_owned(), 30));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241645,"byte_end":241711,"line_start":4428,"line_end":4428,"column_start":1,"column_end":67}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241712,"byte_end":241721,"line_start":4429,"line_end":4429,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241722,"byte_end":241727,"line_start":4430,"line_end":4430,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.get(\"c\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241728,"byte_end":241763,"line_start":4431,"line_end":4431,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241764,"byte_end":241793,"line_start":4432,"line_end":4432,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":241794,"byte_end":241801,"line_start":4433,"line_end":4433,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243603,"byte_end":243617,"line_start":4501,"line_end":4501,"column_start":12,"column_end":26},"name":"VacantEntryRef","qualname":"::map::VacantEntryRef","value":"VacantEntryRef {  }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`EntryRef`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242735,"byte_end":242781,"line_start":4471,"line_end":4471,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`EntryRef`] enum.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242782,"byte_end":242822,"line_start":4472,"line_end":4472,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242823,"byte_end":242826,"line_start":4473,"line_end":4473,"column_start":1,"column_end":4}},{"value":"/ [`EntryRef`]: enum.EntryRef.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242827,"byte_end":242863,"line_start":4474,"line_end":4474,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242864,"byte_end":242867,"line_start":4475,"line_end":4475,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242868,"byte_end":242882,"line_start":4476,"line_end":4476,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242883,"byte_end":242886,"line_start":4477,"line_end":4477,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242887,"byte_end":242894,"line_start":4478,"line_end":4478,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap, VacantEntryRef};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242895,"byte_end":242960,"line_start":4479,"line_end":4479,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242961,"byte_end":242964,"line_start":4480,"line_end":4480,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::<String, i32>::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242965,"byte_end":243013,"line_start":4481,"line_end":4481,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243014,"byte_end":243017,"line_start":4482,"line_end":4482,"column_start":1,"column_end":4}},{"value":"/ let entry_v: VacantEntryRef<_, _, _, _> = match map.entry_ref(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243018,"byte_end":243090,"line_start":4483,"line_end":4483,"column_start":1,"column_end":73}},{"value":"/     EntryRef::Vacant(view) => view,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243091,"byte_end":243130,"line_start":4484,"line_end":4484,"column_start":1,"column_end":40}},{"value":"/     EntryRef::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243131,"byte_end":243179,"line_start":4485,"line_end":4485,"column_start":1,"column_end":49}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243180,"byte_end":243186,"line_start":4486,"line_end":4486,"column_start":1,"column_end":7}},{"value":"/ entry_v.insert(10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243187,"byte_end":243210,"line_start":4487,"line_end":4487,"column_start":1,"column_end":24}},{"value":"/ assert!(map[\"a\"] == 10 && map.len() == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243211,"byte_end":243257,"line_start":4488,"line_end":4488,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243258,"byte_end":243261,"line_start":4489,"line_end":4489,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert and update)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243262,"byte_end":243304,"line_start":4490,"line_end":4490,"column_start":1,"column_end":43}},{"value":"/ match map.entry_ref(\"b\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243305,"byte_end":243335,"line_start":4491,"line_end":4491,"column_start":1,"column_end":31}},{"value":"/     EntryRef::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243336,"byte_end":243384,"line_start":4492,"line_end":4492,"column_start":1,"column_end":49}},{"value":"/     EntryRef::Vacant(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243385,"byte_end":243420,"line_start":4493,"line_end":4493,"column_start":1,"column_end":36}},{"value":"/         let value = view.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243421,"byte_end":243460,"line_start":4494,"line_end":4494,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*value, 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243461,"byte_end":243495,"line_start":4495,"line_end":4495,"column_start":1,"column_end":35}},{"value":"/         *value = 20;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243496,"byte_end":243520,"line_start":4496,"line_end":4496,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243521,"byte_end":243530,"line_start":4497,"line_end":4497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243531,"byte_end":243536,"line_start":4498,"line_end":4498,"column_start":1,"column_end":6}},{"value":"/ assert!(map[\"b\"] == 20 && map.len() == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243537,"byte_end":243583,"line_start":4499,"line_end":4499,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243584,"byte_end":243591,"line_start":4500,"line_end":4500,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244874,"byte_end":244887,"line_start":4539,"line_end":4539,"column_start":12,"column_end":25},"name":"OccupiedError","qualname":"::map::OccupiedError","value":"OccupiedError { entry, value }","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"decl_id":null,"docs":" The error returned by [`try_insert`](HashMap::try_insert) when the key already exists.","sig":null,"attributes":[{"value":"/ The error returned by [`try_insert`](HashMap::try_insert) when the key already exists.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244026,"byte_end":244116,"line_start":4515,"line_end":4515,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244117,"byte_end":244120,"line_start":4516,"line_end":4516,"column_start":1,"column_end":4}},{"value":"/ Contains the occupied entry, and the value that was not inserted.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244121,"byte_end":244190,"line_start":4517,"line_end":4517,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244191,"byte_end":244194,"line_start":4518,"line_end":4518,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244195,"byte_end":244209,"line_start":4519,"line_end":4519,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244210,"byte_end":244213,"line_start":4520,"line_end":4520,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244214,"byte_end":244221,"line_start":4521,"line_end":4521,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{HashMap, OccupiedError};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244222,"byte_end":244276,"line_start":4522,"line_end":4522,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244277,"byte_end":244280,"line_start":4523,"line_end":4523,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<_, _> = [(\"a\", 10), (\"b\", 20)].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244281,"byte_end":244344,"line_start":4524,"line_end":4524,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244345,"byte_end":244348,"line_start":4525,"line_end":4525,"column_start":1,"column_end":4}},{"value":"/ // try_insert method returns mutable reference to the value if keys are vacant,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244349,"byte_end":244432,"line_start":4526,"line_end":4526,"column_start":1,"column_end":84}},{"value":"/ // but if the map did have key present, nothing is updated, and the provided","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244433,"byte_end":244513,"line_start":4527,"line_end":4527,"column_start":1,"column_end":81}},{"value":"/ // value is returned inside `Err(_)` variant","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244514,"byte_end":244562,"line_start":4528,"line_end":4528,"column_start":1,"column_end":49}},{"value":"/ match map.try_insert(\"a\", 100) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244563,"byte_end":244599,"line_start":4529,"line_end":4529,"column_start":1,"column_end":37}},{"value":"/     Err(OccupiedError { mut entry, value }) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244600,"byte_end":244652,"line_start":4530,"line_end":4530,"column_start":1,"column_end":53}},{"value":"/         assert_eq!(entry.key(), &\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244653,"byte_end":244695,"line_start":4531,"line_end":4531,"column_start":1,"column_end":43}},{"value":"/         assert_eq!(value, 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244696,"byte_end":244731,"line_start":4532,"line_end":4532,"column_start":1,"column_end":36}},{"value":"/         assert_eq!(entry.insert(100), 10)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244732,"byte_end":244777,"line_start":4533,"line_end":4533,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244778,"byte_end":244787,"line_start":4534,"line_end":4534,"column_start":1,"column_end":10}},{"value":"/     _ => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244788,"byte_end":244816,"line_start":4535,"line_end":4535,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244817,"byte_end":244822,"line_start":4536,"line_end":4536,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244823,"byte_end":244854,"line_start":4537,"line_end":4537,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244855,"byte_end":244862,"line_start":4538,"line_end":4538,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244998,"byte_end":245003,"line_start":4541,"line_end":4541,"column_start":9,"column_end":14},"name":"entry","qualname":"::map::OccupiedError::entry","value":"map::OccupiedEntry<'a, K, V, S, A>","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" The entry in the map that was already occupied.\n","sig":null,"attributes":[{"value":"/ The entry in the map that was already occupied.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":244938,"byte_end":244989,"line_start":4540,"line_end":4540,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":245126,"byte_end":245131,"line_start":4543,"line_end":4543,"column_start":9,"column_end":14},"name":"value","qualname":"::map::OccupiedError::value","value":"V","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" The value which was not inserted, because the entry was already occupied.\n","sig":null,"attributes":[{"value":"/ The value which was not inserted, because the entry was already occupied.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":245040,"byte_end":245117,"line_start":4542,"line_end":4542,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255444,"byte_end":255450,"line_start":4885,"line_end":4885,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"pub fn insert(Self, V) -> OccupiedEntry where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255052,"byte_end":255114,"line_start":4872,"line_end":4872,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255119,"byte_end":255122,"line_start":4873,"line_end":4873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255127,"byte_end":255141,"line_start":4874,"line_end":4874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255146,"byte_end":255149,"line_start":4875,"line_end":4875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255154,"byte_end":255161,"line_start":4876,"line_end":4876,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255166,"byte_end":255193,"line_start":4877,"line_end":4877,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255198,"byte_end":255201,"line_start":4878,"line_end":4878,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255206,"byte_end":255259,"line_start":4879,"line_end":4879,"column_start":5,"column_end":58}},{"value":"/ let entry = map.entry(\"horseyland\").insert(37);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255264,"byte_end":255315,"line_start":4880,"line_end":4880,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255320,"byte_end":255323,"line_start":4881,"line_end":4881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), &\"horseyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255328,"byte_end":255371,"line_start":4882,"line_end":4882,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255376,"byte_end":255383,"line_start":4883,"line_end":4883,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256380,"byte_end":256389,"line_start":4918,"line_end":4918,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255779,"byte_end":255861,"line_start":4899,"line_end":4899,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255866,"byte_end":255916,"line_start":4900,"line_end":4900,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255921,"byte_end":255924,"line_start":4901,"line_end":4901,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255929,"byte_end":255943,"line_start":4902,"line_end":4902,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255948,"byte_end":255951,"line_start":4903,"line_end":4903,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255956,"byte_end":255963,"line_start":4904,"line_end":4904,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255968,"byte_end":255995,"line_start":4905,"line_end":4905,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256000,"byte_end":256003,"line_start":4906,"line_end":4906,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256008,"byte_end":256061,"line_start":4907,"line_end":4907,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256066,"byte_end":256069,"line_start":4908,"line_end":4908,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256074,"byte_end":256096,"line_start":4909,"line_end":4909,"column_start":5,"column_end":27}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256101,"byte_end":256141,"line_start":4910,"line_end":4910,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256146,"byte_end":256182,"line_start":4911,"line_end":4911,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256187,"byte_end":256190,"line_start":4912,"line_end":4912,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256195,"byte_end":256214,"line_start":4913,"line_end":4913,"column_start":5,"column_end":24}},{"value":"/ *map.entry(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256219,"byte_end":256266,"line_start":4914,"line_end":4914,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256271,"byte_end":256307,"line_start":4915,"line_end":4915,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256312,"byte_end":256319,"line_start":4916,"line_end":4916,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257275,"byte_end":257289,"line_start":4948,"line_end":4948,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256635,"byte_end":256728,"line_start":4929,"line_end":4929,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256733,"byte_end":256795,"line_start":4930,"line_end":4930,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256800,"byte_end":256803,"line_start":4931,"line_end":4931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256808,"byte_end":256822,"line_start":4932,"line_end":4932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256827,"byte_end":256830,"line_start":4933,"line_end":4933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256835,"byte_end":256842,"line_start":4934,"line_end":4934,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256847,"byte_end":256874,"line_start":4935,"line_end":4935,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256879,"byte_end":256882,"line_start":4936,"line_end":4936,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256887,"byte_end":256940,"line_start":4937,"line_end":4937,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256945,"byte_end":256948,"line_start":4938,"line_end":4938,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256953,"byte_end":256975,"line_start":4939,"line_end":4939,"column_start":5,"column_end":27}},{"value":"/ map.entry(\"poneyland\").or_insert_with(|| 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":256980,"byte_end":257028,"line_start":4940,"line_end":4940,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257033,"byte_end":257069,"line_start":4941,"line_end":4941,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257074,"byte_end":257077,"line_start":4942,"line_end":4942,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257082,"byte_end":257101,"line_start":4943,"line_end":4943,"column_start":5,"column_end":24}},{"value":"/ *map.entry(\"poneyland\").or_insert_with(|| 10) *= 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257106,"byte_end":257161,"line_start":4944,"line_end":4944,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257166,"byte_end":257202,"line_start":4945,"line_end":4945,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257207,"byte_end":257214,"line_start":4946,"line_end":4946,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258538,"byte_end":258556,"line_start":4982,"line_end":4982,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&K) -> V>(Self, F) -> &'a mut V where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function.\n This method allows for generating key-derived values for insertion by providing the default\n function a reference to the key that was moved during the `.entry(key)` method call.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257555,"byte_end":257650,"line_start":4959,"line_end":4959,"column_start":5,"column_end":100}},{"value":"/ This method allows for generating key-derived values for insertion by providing the default","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257655,"byte_end":257750,"line_start":4960,"line_end":4960,"column_start":5,"column_end":100}},{"value":"/ function a reference to the key that was moved during the `.entry(key)` method call.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257755,"byte_end":257843,"line_start":4961,"line_end":4961,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257848,"byte_end":257851,"line_start":4962,"line_end":4962,"column_start":5,"column_end":8}},{"value":"/ The reference to the moved key is provided so that cloning or copying the key is","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257856,"byte_end":257940,"line_start":4963,"line_end":4963,"column_start":5,"column_end":89}},{"value":"/ unnecessary, unlike with `.or_insert_with(|| ... )`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":257945,"byte_end":258001,"line_start":4964,"line_end":4964,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258006,"byte_end":258009,"line_start":4965,"line_end":4965,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258014,"byte_end":258028,"line_start":4966,"line_end":4966,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258033,"byte_end":258036,"line_start":4967,"line_end":4967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258041,"byte_end":258048,"line_start":4968,"line_end":4968,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258053,"byte_end":258080,"line_start":4969,"line_end":4969,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258085,"byte_end":258088,"line_start":4970,"line_end":4970,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, usize> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258093,"byte_end":258148,"line_start":4971,"line_end":4971,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258153,"byte_end":258156,"line_start":4972,"line_end":4972,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258161,"byte_end":258183,"line_start":4973,"line_end":4973,"column_start":5,"column_end":27}},{"value":"/ map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258188,"byte_end":258261,"line_start":4974,"line_end":4974,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258266,"byte_end":258302,"line_start":4975,"line_end":4975,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258307,"byte_end":258310,"line_start":4976,"line_end":4976,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258315,"byte_end":258334,"line_start":4977,"line_end":4977,"column_start":5,"column_end":24}},{"value":"/ *map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count() * 10) *= 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258339,"byte_end":258423,"line_start":4978,"line_end":4978,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(map[\"poneyland\"], 18);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258428,"byte_end":258465,"line_start":4979,"line_end":4979,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258470,"byte_end":258477,"line_start":4980,"line_end":4980,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259387,"byte_end":259390,"line_start":5011,"line_end":5011,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258901,"byte_end":258945,"line_start":4996,"line_end":4996,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258950,"byte_end":258953,"line_start":4997,"line_end":4997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258958,"byte_end":258972,"line_start":4998,"line_end":4998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258977,"byte_end":258980,"line_start":4999,"line_end":4999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258985,"byte_end":258992,"line_start":5000,"line_end":5000,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":258997,"byte_end":259024,"line_start":5001,"line_end":5001,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259029,"byte_end":259032,"line_start":5002,"line_end":5002,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259037,"byte_end":259090,"line_start":5003,"line_end":5003,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259095,"byte_end":259135,"line_start":5004,"line_end":5004,"column_start":5,"column_end":45}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259140,"byte_end":259159,"line_start":5005,"line_end":5005,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259164,"byte_end":259223,"line_start":5006,"line_end":5006,"column_start":5,"column_end":64}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259228,"byte_end":259250,"line_start":5007,"line_end":5007,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map.entry(\"horseland\").key(), &\"horseland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259255,"byte_end":259314,"line_start":5008,"line_end":5008,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259319,"byte_end":259326,"line_start":5009,"line_end":5009,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260179,"byte_end":260189,"line_start":5039,"line_end":5039,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259557,"byte_end":259625,"line_start":5018,"line_end":5018,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259630,"byte_end":259665,"line_start":5019,"line_end":5019,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259670,"byte_end":259673,"line_start":5020,"line_end":5020,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259678,"byte_end":259692,"line_start":5021,"line_end":5021,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259697,"byte_end":259700,"line_start":5022,"line_end":5022,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259705,"byte_end":259712,"line_start":5023,"line_end":5023,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259717,"byte_end":259744,"line_start":5024,"line_end":5024,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259749,"byte_end":259752,"line_start":5025,"line_end":5025,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259757,"byte_end":259810,"line_start":5026,"line_end":5026,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259815,"byte_end":259818,"line_start":5027,"line_end":5027,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259823,"byte_end":259849,"line_start":5028,"line_end":5028,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259854,"byte_end":259889,"line_start":5029,"line_end":5029,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259894,"byte_end":259916,"line_start":5030,"line_end":5030,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259921,"byte_end":259958,"line_start":5031,"line_end":5031,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259963,"byte_end":259966,"line_start":5032,"line_end":5032,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":259971,"byte_end":259997,"line_start":5033,"line_end":5033,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260002,"byte_end":260037,"line_start":5034,"line_end":5034,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260042,"byte_end":260064,"line_start":5035,"line_end":5035,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260069,"byte_end":260106,"line_start":5036,"line_end":5036,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260111,"byte_end":260118,"line_start":5037,"line_end":5037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262109,"byte_end":262131,"line_start":5107,"line_end":5107,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<Entry>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260489,"byte_end":260559,"line_start":5052,"line_end":5052,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260564,"byte_end":260633,"line_start":5053,"line_end":5053,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260638,"byte_end":260671,"line_start":5054,"line_end":5054,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260676,"byte_end":260679,"line_start":5055,"line_end":5055,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260684,"byte_end":260698,"line_start":5056,"line_end":5056,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260703,"byte_end":260706,"line_start":5057,"line_end":5057,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260711,"byte_end":260718,"line_start":5058,"line_end":5058,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260723,"byte_end":260750,"line_start":5059,"line_end":5059,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260755,"byte_end":260790,"line_start":5060,"line_end":5060,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260795,"byte_end":260798,"line_start":5061,"line_end":5061,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260803,"byte_end":260856,"line_start":5062,"line_end":5062,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260861,"byte_end":260864,"line_start":5063,"line_end":5063,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260869,"byte_end":260888,"line_start":5064,"line_end":5064,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260893,"byte_end":260920,"line_start":5065,"line_end":5065,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260925,"byte_end":260976,"line_start":5066,"line_end":5066,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260981,"byte_end":260984,"line_start":5067,"line_end":5067,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":260989,"byte_end":261006,"line_start":5068,"line_end":5068,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261011,"byte_end":261040,"line_start":5069,"line_end":5069,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261045,"byte_end":261091,"line_start":5070,"line_end":5070,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261096,"byte_end":261105,"line_start":5071,"line_end":5071,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261110,"byte_end":261149,"line_start":5072,"line_end":5072,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261154,"byte_end":261159,"line_start":5073,"line_end":5073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261164,"byte_end":261167,"line_start":5074,"line_end":5074,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261172,"byte_end":261204,"line_start":5075,"line_end":5075,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261209,"byte_end":261212,"line_start":5076,"line_end":5076,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261217,"byte_end":261236,"line_start":5077,"line_end":5077,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261241,"byte_end":261268,"line_start":5078,"line_end":5078,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261273,"byte_end":261313,"line_start":5079,"line_end":5079,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261318,"byte_end":261358,"line_start":5080,"line_end":5080,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261363,"byte_end":261393,"line_start":5081,"line_end":5081,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261398,"byte_end":261421,"line_start":5082,"line_end":5082,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261426,"byte_end":261437,"line_start":5083,"line_end":5083,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261442,"byte_end":261445,"line_start":5084,"line_end":5084,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261450,"byte_end":261467,"line_start":5085,"line_end":5085,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261472,"byte_end":261503,"line_start":5086,"line_end":5086,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261508,"byte_end":261554,"line_start":5087,"line_end":5087,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261559,"byte_end":261596,"line_start":5088,"line_end":5088,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261601,"byte_end":261610,"line_start":5089,"line_end":5089,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261615,"byte_end":261652,"line_start":5090,"line_end":5090,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261657,"byte_end":261662,"line_start":5091,"line_end":5091,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261667,"byte_end":261670,"line_start":5092,"line_end":5092,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261675,"byte_end":261712,"line_start":5093,"line_end":5093,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261717,"byte_end":261720,"line_start":5094,"line_end":5094,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261725,"byte_end":261744,"line_start":5095,"line_end":5095,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261749,"byte_end":261776,"line_start":5096,"line_end":5096,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261781,"byte_end":261828,"line_start":5097,"line_end":5097,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261833,"byte_end":261836,"line_start":5098,"line_end":5098,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261841,"byte_end":261858,"line_start":5099,"line_end":5099,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => assert_eq!(e.key(), &\"poneyland\"),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261863,"byte_end":261925,"line_start":5100,"line_end":5100,"column_start":5,"column_end":67}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261930,"byte_end":261969,"line_start":5101,"line_end":5101,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261974,"byte_end":261979,"line_start":5102,"line_end":5102,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261984,"byte_end":261987,"line_start":5103,"line_end":5103,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":261992,"byte_end":262036,"line_start":5104,"line_end":5104,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262041,"byte_end":262048,"line_start":5105,"line_end":5105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263078,"byte_end":263088,"line_start":5139,"line_end":5139,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262432,"byte_end":262508,"line_start":5119,"line_end":5119,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262513,"byte_end":262575,"line_start":5120,"line_end":5120,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262580,"byte_end":262583,"line_start":5121,"line_end":5121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262588,"byte_end":262602,"line_start":5122,"line_end":5122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262607,"byte_end":262610,"line_start":5123,"line_end":5123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262615,"byte_end":262622,"line_start":5124,"line_end":5124,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262627,"byte_end":262654,"line_start":5125,"line_end":5125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262659,"byte_end":262662,"line_start":5126,"line_end":5126,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262667,"byte_end":262728,"line_start":5127,"line_end":5127,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262733,"byte_end":262736,"line_start":5128,"line_end":5128,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262741,"byte_end":262763,"line_start":5129,"line_end":5129,"column_start":5,"column_end":27}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262768,"byte_end":262808,"line_start":5130,"line_end":5130,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262813,"byte_end":262852,"line_start":5131,"line_end":5131,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262857,"byte_end":262860,"line_start":5132,"line_end":5132,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"horseland\", Some(3));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262865,"byte_end":262902,"line_start":5133,"line_end":5133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262907,"byte_end":262910,"line_start":5134,"line_end":5134,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262915,"byte_end":262934,"line_start":5135,"line_end":5135,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(map.entry(\"horseland\").or_default(), &mut Some(3));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262939,"byte_end":263005,"line_start":5136,"line_end":5136,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263010,"byte_end":263017,"line_start":5137,"line_end":5137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263911,"byte_end":263914,"line_start":5168,"line_end":5168,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263407,"byte_end":263452,"line_start":5152,"line_end":5152,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263457,"byte_end":263460,"line_start":5153,"line_end":5153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263465,"byte_end":263479,"line_start":5154,"line_end":5154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263484,"byte_end":263487,"line_start":5155,"line_end":5155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263492,"byte_end":263499,"line_start":5156,"line_end":5156,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263504,"byte_end":263550,"line_start":5157,"line_end":5157,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263555,"byte_end":263558,"line_start":5158,"line_end":5158,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263563,"byte_end":263616,"line_start":5159,"line_end":5159,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263621,"byte_end":263662,"line_start":5160,"line_end":5160,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263667,"byte_end":263670,"line_start":5161,"line_end":5161,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263675,"byte_end":263709,"line_start":5162,"line_end":5162,"column_start":5,"column_end":39}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263714,"byte_end":263751,"line_start":5163,"line_end":5163,"column_start":5,"column_end":42}},{"value":"/     Entry::Occupied(entry) => assert_eq!(entry.key(), &\"poneyland\"),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263756,"byte_end":263828,"line_start":5164,"line_end":5164,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263833,"byte_end":263838,"line_start":5165,"line_end":5165,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263843,"byte_end":263850,"line_start":5166,"line_end":5166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264941,"byte_end":264953,"line_start":5198,"line_end":5198,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263982,"byte_end":264039,"line_start":5172,"line_end":5172,"column_start":5,"column_end":62}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264044,"byte_end":264085,"line_start":5173,"line_end":5173,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264090,"byte_end":264093,"line_start":5174,"line_end":5174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264098,"byte_end":264112,"line_start":5175,"line_end":5175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264117,"byte_end":264120,"line_start":5176,"line_end":5176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264125,"byte_end":264132,"line_start":5177,"line_end":5177,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264137,"byte_end":264164,"line_start":5178,"line_end":5178,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264169,"byte_end":264204,"line_start":5179,"line_end":5179,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264209,"byte_end":264212,"line_start":5180,"line_end":5180,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264217,"byte_end":264270,"line_start":5181,"line_end":5181,"column_start":5,"column_end":58}},{"value":"/ // The map is empty","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264275,"byte_end":264298,"line_start":5182,"line_end":5182,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264303,"byte_end":264354,"line_start":5183,"line_end":5183,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264359,"byte_end":264362,"line_start":5184,"line_end":5184,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264367,"byte_end":264408,"line_start":5185,"line_end":5185,"column_start":5,"column_end":46}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264413,"byte_end":264461,"line_start":5186,"line_end":5186,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264466,"byte_end":264469,"line_start":5187,"line_end":5187,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264474,"byte_end":264530,"line_start":5188,"line_end":5188,"column_start":5,"column_end":61}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264535,"byte_end":264579,"line_start":5189,"line_end":5189,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(o.remove_entry(), (\"poneyland\", 12));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264584,"byte_end":264640,"line_start":5190,"line_end":5190,"column_start":5,"column_end":61}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264645,"byte_end":264650,"line_start":5191,"line_end":5191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264655,"byte_end":264658,"line_start":5192,"line_end":5192,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264663,"byte_end":264716,"line_start":5193,"line_end":5193,"column_start":5,"column_end":58}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264721,"byte_end":264791,"line_start":5194,"line_end":5194,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264796,"byte_end":264868,"line_start":5195,"line_end":5195,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":264873,"byte_end":264880,"line_start":5196,"line_end":5196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265555,"byte_end":265558,"line_start":5219,"line_end":5219,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265037,"byte_end":265084,"line_start":5202,"line_end":5202,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265089,"byte_end":265092,"line_start":5203,"line_end":5203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265097,"byte_end":265111,"line_start":5204,"line_end":5204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265116,"byte_end":265119,"line_start":5205,"line_end":5205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265124,"byte_end":265131,"line_start":5206,"line_end":5206,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265136,"byte_end":265163,"line_start":5207,"line_end":5207,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265168,"byte_end":265203,"line_start":5208,"line_end":5208,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265208,"byte_end":265211,"line_start":5209,"line_end":5209,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265216,"byte_end":265269,"line_start":5210,"line_end":5210,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265274,"byte_end":265315,"line_start":5211,"line_end":5211,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265320,"byte_end":265323,"line_start":5212,"line_end":5212,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265328,"byte_end":265362,"line_start":5213,"line_end":5213,"column_start":5,"column_end":39}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265367,"byte_end":265404,"line_start":5214,"line_end":5214,"column_start":5,"column_end":42}},{"value":"/     Entry::Occupied(entry) => assert_eq!(entry.get(), &12),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265409,"byte_end":265472,"line_start":5215,"line_end":5215,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265477,"byte_end":265482,"line_start":5216,"line_end":5216,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265487,"byte_end":265494,"line_start":5217,"line_end":5217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266518,"byte_end":266525,"line_start":5251,"line_end":5251,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265626,"byte_end":265681,"line_start":5223,"line_end":5223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265686,"byte_end":265689,"line_start":5224,"line_end":5224,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265694,"byte_end":265766,"line_start":5225,"line_end":5225,"column_start":5,"column_end":77}},{"value":"/ destruction of the `Entry` value, see [`into_mut`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265771,"byte_end":265826,"line_start":5226,"line_end":5226,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265831,"byte_end":265834,"line_start":5227,"line_end":5227,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265839,"byte_end":265873,"line_start":5228,"line_end":5228,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265878,"byte_end":265881,"line_start":5229,"line_end":5229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265886,"byte_end":265900,"line_start":5230,"line_end":5230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265905,"byte_end":265908,"line_start":5231,"line_end":5231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265913,"byte_end":265920,"line_start":5232,"line_end":5232,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265925,"byte_end":265952,"line_start":5233,"line_end":5233,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265957,"byte_end":265992,"line_start":5234,"line_end":5234,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":265997,"byte_end":266000,"line_start":5235,"line_end":5235,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266005,"byte_end":266058,"line_start":5236,"line_end":5236,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266063,"byte_end":266104,"line_start":5237,"line_end":5237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266109,"byte_end":266112,"line_start":5238,"line_end":5238,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266117,"byte_end":266154,"line_start":5239,"line_end":5239,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266159,"byte_end":266219,"line_start":5240,"line_end":5240,"column_start":5,"column_end":65}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266224,"byte_end":266251,"line_start":5241,"line_end":5241,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266256,"byte_end":266289,"line_start":5242,"line_end":5242,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266294,"byte_end":266297,"line_start":5243,"line_end":5243,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266302,"byte_end":266354,"line_start":5244,"line_end":5244,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266359,"byte_end":266385,"line_start":5245,"line_end":5245,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266390,"byte_end":266395,"line_start":5246,"line_end":5246,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266400,"byte_end":266403,"line_start":5247,"line_end":5247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266408,"byte_end":266445,"line_start":5248,"line_end":5248,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266450,"byte_end":266457,"line_start":5249,"line_end":5249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267466,"byte_end":267474,"line_start":5282,"line_end":5282,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266605,"byte_end":266686,"line_start":5255,"line_end":5255,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266691,"byte_end":266735,"line_start":5256,"line_end":5256,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266740,"byte_end":266743,"line_start":5257,"line_end":5257,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntry`, see [`get_mut`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266748,"byte_end":266824,"line_start":5258,"line_end":5258,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266829,"byte_end":266832,"line_start":5259,"line_end":5259,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266837,"byte_end":266869,"line_start":5260,"line_end":5260,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266874,"byte_end":266877,"line_start":5261,"line_end":5261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266882,"byte_end":266896,"line_start":5262,"line_end":5262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266901,"byte_end":266904,"line_start":5263,"line_end":5263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266909,"byte_end":266916,"line_start":5264,"line_end":5264,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266921,"byte_end":266967,"line_start":5265,"line_end":5265,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266972,"byte_end":266975,"line_start":5266,"line_end":5266,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":266980,"byte_end":267033,"line_start":5267,"line_end":5267,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267038,"byte_end":267079,"line_start":5268,"line_end":5268,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267084,"byte_end":267087,"line_start":5269,"line_end":5269,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267092,"byte_end":267129,"line_start":5270,"line_end":5270,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267134,"byte_end":267137,"line_start":5271,"line_end":5271,"column_start":5,"column_end":8}},{"value":"/ let value: &mut u32;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267142,"byte_end":267166,"line_start":5272,"line_end":5272,"column_start":5,"column_end":29}},{"value":"/ match map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267171,"byte_end":267205,"line_start":5273,"line_end":5273,"column_start":5,"column_end":39}},{"value":"/     Entry::Occupied(entry) => value = entry.into_mut(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267210,"byte_end":267269,"line_start":5274,"line_end":5274,"column_start":5,"column_end":64}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267274,"byte_end":267311,"line_start":5275,"line_end":5275,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267316,"byte_end":267321,"line_start":5276,"line_end":5276,"column_start":5,"column_end":10}},{"value":"/ *value += 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267326,"byte_end":267343,"line_start":5277,"line_end":5277,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267348,"byte_end":267351,"line_start":5278,"line_end":5278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267356,"byte_end":267393,"line_start":5279,"line_end":5279,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267398,"byte_end":267405,"line_start":5280,"line_end":5280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268098,"byte_end":268104,"line_start":5304,"line_end":5304,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267552,"byte_end":267619,"line_start":5286,"line_end":5286,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267624,"byte_end":267627,"line_start":5287,"line_end":5287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267632,"byte_end":267646,"line_start":5288,"line_end":5288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267651,"byte_end":267654,"line_start":5289,"line_end":5289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267659,"byte_end":267666,"line_start":5290,"line_end":5290,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267671,"byte_end":267698,"line_start":5291,"line_end":5291,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267703,"byte_end":267738,"line_start":5292,"line_end":5292,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267743,"byte_end":267746,"line_start":5293,"line_end":5293,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267751,"byte_end":267804,"line_start":5294,"line_end":5294,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267809,"byte_end":267850,"line_start":5295,"line_end":5295,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267855,"byte_end":267858,"line_start":5296,"line_end":5296,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267863,"byte_end":267923,"line_start":5297,"line_end":5297,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267928,"byte_end":267965,"line_start":5298,"line_end":5298,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267970,"byte_end":267975,"line_start":5299,"line_end":5299,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267980,"byte_end":267983,"line_start":5300,"line_end":5300,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":267988,"byte_end":268025,"line_start":5301,"line_end":5301,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268030,"byte_end":268037,"line_start":5302,"line_end":5302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269073,"byte_end":269079,"line_start":5333,"line_end":5333,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268188,"byte_end":268241,"line_start":5308,"line_end":5308,"column_start":5,"column_end":58}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268246,"byte_end":268287,"line_start":5309,"line_end":5309,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268292,"byte_end":268295,"line_start":5310,"line_end":5310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268300,"byte_end":268314,"line_start":5311,"line_end":5311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268319,"byte_end":268322,"line_start":5312,"line_end":5312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268327,"byte_end":268334,"line_start":5313,"line_end":5313,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268339,"byte_end":268366,"line_start":5314,"line_end":5314,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268371,"byte_end":268406,"line_start":5315,"line_end":5315,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268411,"byte_end":268414,"line_start":5316,"line_end":5316,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268419,"byte_end":268472,"line_start":5317,"line_end":5317,"column_start":5,"column_end":58}},{"value":"/ // The map is empty","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268477,"byte_end":268500,"line_start":5318,"line_end":5318,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268505,"byte_end":268556,"line_start":5319,"line_end":5319,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268561,"byte_end":268564,"line_start":5320,"line_end":5320,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268569,"byte_end":268610,"line_start":5321,"line_end":5321,"column_start":5,"column_end":46}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268615,"byte_end":268663,"line_start":5322,"line_end":5322,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268668,"byte_end":268671,"line_start":5323,"line_end":5323,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268676,"byte_end":268732,"line_start":5324,"line_end":5324,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268737,"byte_end":268772,"line_start":5325,"line_end":5325,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268777,"byte_end":268782,"line_start":5326,"line_end":5326,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268787,"byte_end":268790,"line_start":5327,"line_end":5327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268795,"byte_end":268848,"line_start":5328,"line_end":5328,"column_start":5,"column_end":58}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268853,"byte_end":268923,"line_start":5329,"line_end":5329,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":268928,"byte_end":269000,"line_start":5330,"line_end":5330,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269005,"byte_end":269012,"line_start":5331,"line_end":5331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270385,"byte_end":270398,"line_start":5369,"line_end":5369,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269134,"byte_end":269226,"line_start":5337,"line_end":5337,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269231,"byte_end":269269,"line_start":5338,"line_end":5338,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269274,"byte_end":269277,"line_start":5339,"line_end":5339,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269282,"byte_end":269294,"line_start":5340,"line_end":5340,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269299,"byte_end":269302,"line_start":5341,"line_end":5341,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269307,"byte_end":269382,"line_start":5342,"line_end":5342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269387,"byte_end":269390,"line_start":5343,"line_end":5343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269395,"byte_end":269409,"line_start":5344,"line_end":5344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269414,"byte_end":269417,"line_start":5345,"line_end":5345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269422,"byte_end":269429,"line_start":5346,"line_end":5346,"column_start":5,"column_end":12}},{"value":"/  use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269434,"byte_end":269481,"line_start":5347,"line_end":5347,"column_start":5,"column_end":52}},{"value":"/  use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269486,"byte_end":269507,"line_start":5348,"line_end":5348,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269512,"byte_end":269515,"line_start":5349,"line_end":5349,"column_start":5,"column_end":8}},{"value":"/  let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269520,"byte_end":269580,"line_start":5350,"line_end":5350,"column_start":5,"column_end":65}},{"value":"/  let key_one = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269585,"byte_end":269639,"line_start":5351,"line_end":5351,"column_start":5,"column_end":59}},{"value":"/  let key_two = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269644,"byte_end":269698,"line_start":5352,"line_end":5352,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269703,"byte_end":269706,"line_start":5353,"line_end":5353,"column_start":5,"column_end":8}},{"value":"/  map.insert(key_one.clone(), 15);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269711,"byte_end":269748,"line_start":5354,"line_end":5354,"column_start":5,"column_end":42}},{"value":"/  assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269753,"byte_end":269834,"line_start":5355,"line_end":5355,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269839,"byte_end":269842,"line_start":5356,"line_end":5356,"column_start":5,"column_end":8}},{"value":"/  match map.entry(key_two.clone()) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269847,"byte_end":269886,"line_start":5357,"line_end":5357,"column_start":5,"column_end":44}},{"value":"/      Entry::Occupied(entry) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269891,"byte_end":269927,"line_start":5358,"line_end":5358,"column_start":5,"column_end":41}},{"value":"/          let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":269932,"byte_end":270015,"line_start":5359,"line_end":5359,"column_start":5,"column_end":88}},{"value":"/          assert!(Rc::ptr_eq(&key_one, &old_key) && old_value == 15);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270020,"byte_end":270092,"line_start":5360,"line_end":5360,"column_start":5,"column_end":77}},{"value":"/      }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270097,"byte_end":270107,"line_start":5361,"line_end":5361,"column_start":5,"column_end":15}},{"value":"/      Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270112,"byte_end":270150,"line_start":5362,"line_end":5362,"column_start":5,"column_end":43}},{"value":"/  }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270155,"byte_end":270161,"line_start":5363,"line_end":5363,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270166,"byte_end":270169,"line_start":5364,"line_end":5364,"column_start":5,"column_end":8}},{"value":"/  assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270174,"byte_end":270255,"line_start":5365,"line_end":5365,"column_start":5,"column_end":86}},{"value":"/  assert_eq!(map[&\"Stringthing\".to_owned()], 16);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270260,"byte_end":270312,"line_start":5366,"line_end":5366,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270317,"byte_end":270324,"line_start":5367,"line_end":5367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272309,"byte_end":272320,"line_start":5423,"line_end":5423,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"pub fn replace_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270648,"byte_end":270724,"line_start":5378,"line_end":5378,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270729,"byte_end":270732,"line_start":5379,"line_end":5379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270737,"byte_end":270749,"line_start":5380,"line_end":5380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270754,"byte_end":270757,"line_start":5381,"line_end":5381,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270762,"byte_end":270837,"line_start":5382,"line_end":5382,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270842,"byte_end":270845,"line_start":5383,"line_end":5383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270850,"byte_end":270864,"line_start":5384,"line_end":5384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270869,"byte_end":270872,"line_start":5385,"line_end":5385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270877,"byte_end":270884,"line_start":5386,"line_end":5386,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270889,"byte_end":270935,"line_start":5387,"line_end":5387,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270940,"byte_end":270960,"line_start":5388,"line_end":5388,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270965,"byte_end":270968,"line_start":5389,"line_end":5389,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, usize> = HashMap::with_capacity(6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":270973,"byte_end":271045,"line_start":5390,"line_end":5390,"column_start":5,"column_end":77}},{"value":"/ let mut keys_one: Vec<Rc<String>> = Vec::with_capacity(6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271050,"byte_end":271112,"line_start":5391,"line_end":5391,"column_start":5,"column_end":67}},{"value":"/ let mut keys_two: Vec<Rc<String>> = Vec::with_capacity(6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271117,"byte_end":271179,"line_start":5392,"line_end":5392,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271184,"byte_end":271187,"line_start":5393,"line_end":5393,"column_start":5,"column_end":8}},{"value":"/ for (value, key) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().enumerate() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271192,"byte_end":271272,"line_start":5394,"line_end":5394,"column_start":5,"column_end":85}},{"value":"/     let rc_key = Rc::new(key.to_owned());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271277,"byte_end":271322,"line_start":5395,"line_end":5395,"column_start":5,"column_end":50}},{"value":"/     keys_one.push(rc_key.clone());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271327,"byte_end":271365,"line_start":5396,"line_end":5396,"column_start":5,"column_end":43}},{"value":"/     map.insert(rc_key.clone(), value);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271370,"byte_end":271412,"line_start":5397,"line_end":5397,"column_start":5,"column_end":47}},{"value":"/     keys_two.push(Rc::new(key.to_owned()));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271417,"byte_end":271464,"line_start":5398,"line_end":5398,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271469,"byte_end":271474,"line_start":5399,"line_end":5399,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271479,"byte_end":271482,"line_start":5400,"line_end":5400,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271487,"byte_end":271499,"line_start":5401,"line_end":5401,"column_start":5,"column_end":17}},{"value":"/     keys_one.iter().all(|key| Rc::strong_count(key) == 2)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271504,"byte_end":271565,"line_start":5402,"line_end":5402,"column_start":5,"column_end":66}},{"value":"/         && keys_two.iter().all(|key| Rc::strong_count(key) == 1)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271570,"byte_end":271638,"line_start":5403,"line_end":5403,"column_start":5,"column_end":73}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271643,"byte_end":271649,"line_start":5404,"line_end":5404,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271654,"byte_end":271657,"line_start":5405,"line_end":5405,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &keys_two);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271662,"byte_end":271702,"line_start":5406,"line_end":5406,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271707,"byte_end":271710,"line_start":5407,"line_end":5407,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271715,"byte_end":271727,"line_start":5408,"line_end":5408,"column_start":5,"column_end":17}},{"value":"/     keys_one.iter().all(|key| Rc::strong_count(key) == 1)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271732,"byte_end":271793,"line_start":5409,"line_end":5409,"column_start":5,"column_end":66}},{"value":"/         && keys_two.iter().all(|key| Rc::strong_count(key) == 2)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271798,"byte_end":271866,"line_start":5410,"line_end":5410,"column_start":5,"column_end":73}},{"value":"/ );","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271871,"byte_end":271877,"line_start":5411,"line_end":5411,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271882,"byte_end":271885,"line_start":5412,"line_end":5412,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<String>, usize>, keys: &[Rc<String>]) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271890,"byte_end":271972,"line_start":5413,"line_end":5413,"column_start":5,"column_end":87}},{"value":"/     for key in keys {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":271977,"byte_end":272002,"line_start":5414,"line_end":5414,"column_start":5,"column_end":30}},{"value":"/         if let Entry::Occupied(entry) = map.entry(key.clone()) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272007,"byte_end":272075,"line_start":5415,"line_end":5415,"column_start":5,"column_end":73}},{"value":"/         // Replaces the entry's key with our version of it in `keys`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272080,"byte_end":272153,"line_start":5416,"line_end":5416,"column_start":5,"column_end":78}},{"value":"/             entry.replace_key();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272158,"byte_end":272194,"line_start":5417,"line_end":5417,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272199,"byte_end":272212,"line_start":5418,"line_end":5418,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272217,"byte_end":272226,"line_start":5419,"line_end":5419,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272231,"byte_end":272236,"line_start":5420,"line_end":5420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272241,"byte_end":272248,"line_start":5421,"line_end":5421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273964,"byte_end":273982,"line_start":5477,"line_end":5477,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntry>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> Entry where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272450,"byte_end":272520,"line_start":5428,"line_end":5428,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272525,"byte_end":272586,"line_start":5429,"line_end":5429,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272591,"byte_end":272624,"line_start":5430,"line_end":5430,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272629,"byte_end":272632,"line_start":5431,"line_end":5431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272637,"byte_end":272651,"line_start":5432,"line_end":5432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272656,"byte_end":272659,"line_start":5433,"line_end":5433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272664,"byte_end":272671,"line_start":5434,"line_end":5434,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272676,"byte_end":272703,"line_start":5435,"line_end":5435,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272708,"byte_end":272743,"line_start":5436,"line_end":5436,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272748,"byte_end":272751,"line_start":5437,"line_end":5437,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272756,"byte_end":272809,"line_start":5438,"line_end":5438,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272814,"byte_end":272846,"line_start":5439,"line_end":5439,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272851,"byte_end":272854,"line_start":5440,"line_end":5440,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272859,"byte_end":272905,"line_start":5441,"line_end":5441,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272910,"byte_end":272941,"line_start":5442,"line_end":5442,"column_start":5,"column_end":36}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272946,"byte_end":272987,"line_start":5443,"line_end":5443,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":272992,"byte_end":273036,"line_start":5444,"line_end":5444,"column_start":5,"column_end":49}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273041,"byte_end":273075,"line_start":5445,"line_end":5445,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273080,"byte_end":273107,"line_start":5446,"line_end":5446,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273112,"byte_end":273126,"line_start":5447,"line_end":5447,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273131,"byte_end":273140,"line_start":5448,"line_end":5448,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273145,"byte_end":273182,"line_start":5449,"line_end":5449,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273187,"byte_end":273193,"line_start":5450,"line_end":5450,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273198,"byte_end":273201,"line_start":5451,"line_end":5451,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273206,"byte_end":273223,"line_start":5452,"line_end":5452,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273228,"byte_end":273259,"line_start":5453,"line_end":5453,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273264,"byte_end":273310,"line_start":5454,"line_end":5454,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273315,"byte_end":273352,"line_start":5455,"line_end":5455,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273357,"byte_end":273366,"line_start":5456,"line_end":5456,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273371,"byte_end":273408,"line_start":5457,"line_end":5457,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273413,"byte_end":273418,"line_start":5458,"line_end":5458,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273423,"byte_end":273426,"line_start":5459,"line_end":5459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273431,"byte_end":273468,"line_start":5460,"line_end":5460,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273473,"byte_end":273476,"line_start":5461,"line_end":5461,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273481,"byte_end":273527,"line_start":5462,"line_end":5462,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273532,"byte_end":273598,"line_start":5463,"line_end":5463,"column_start":5,"column_end":71}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273603,"byte_end":273640,"line_start":5464,"line_end":5464,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273645,"byte_end":273651,"line_start":5465,"line_end":5465,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273656,"byte_end":273659,"line_start":5466,"line_end":5466,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273664,"byte_end":273681,"line_start":5467,"line_end":5467,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273686,"byte_end":273715,"line_start":5468,"line_end":5468,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273720,"byte_end":273766,"line_start":5469,"line_end":5469,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273771,"byte_end":273780,"line_start":5470,"line_end":5470,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273785,"byte_end":273824,"line_start":5471,"line_end":5471,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273829,"byte_end":273834,"line_start":5472,"line_end":5472,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273839,"byte_end":273842,"line_start":5473,"line_end":5473,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273847,"byte_end":273891,"line_start":5474,"line_end":5474,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":273896,"byte_end":273903,"line_start":5475,"line_end":5475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275273,"byte_end":275276,"line_start":5521,"line_end":5521,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":274883,"byte_end":274956,"line_start":5509,"line_end":5509,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":274961,"byte_end":274991,"line_start":5510,"line_end":5510,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":274996,"byte_end":274999,"line_start":5511,"line_end":5511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275004,"byte_end":275018,"line_start":5512,"line_end":5512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275023,"byte_end":275026,"line_start":5513,"line_end":5513,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275031,"byte_end":275038,"line_start":5514,"line_end":5514,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275043,"byte_end":275070,"line_start":5515,"line_end":5515,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275075,"byte_end":275078,"line_start":5516,"line_end":5516,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275083,"byte_end":275136,"line_start":5517,"line_end":5517,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275141,"byte_end":275200,"line_start":5518,"line_end":5518,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275205,"byte_end":275212,"line_start":5519,"line_end":5519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275760,"byte_end":275768,"line_start":5540,"line_end":5540,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275321,"byte_end":275351,"line_start":5525,"line_end":5525,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275356,"byte_end":275359,"line_start":5526,"line_end":5526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275364,"byte_end":275378,"line_start":5527,"line_end":5527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275383,"byte_end":275386,"line_start":5528,"line_end":5528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275391,"byte_end":275398,"line_start":5529,"line_end":5529,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275403,"byte_end":275449,"line_start":5530,"line_end":5530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275454,"byte_end":275457,"line_start":5531,"line_end":5531,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275462,"byte_end":275515,"line_start":5532,"line_end":5532,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275520,"byte_end":275523,"line_start":5533,"line_end":5533,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275528,"byte_end":275562,"line_start":5534,"line_end":5534,"column_start":5,"column_end":39}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275567,"byte_end":275606,"line_start":5535,"line_end":5535,"column_start":5,"column_end":44}},{"value":"/     Entry::Vacant(v) => assert_eq!(v.into_key(), \"poneyland\"),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275611,"byte_end":275677,"line_start":5536,"line_end":5536,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275682,"byte_end":275687,"line_start":5537,"line_end":5537,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275692,"byte_end":275699,"line_start":5538,"line_end":5538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276319,"byte_end":276325,"line_start":5561,"line_end":5561,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275810,"byte_end":275869,"line_start":5544,"line_end":5544,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275874,"byte_end":275916,"line_start":5545,"line_end":5545,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275921,"byte_end":275924,"line_start":5546,"line_end":5546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275929,"byte_end":275943,"line_start":5547,"line_end":5547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275948,"byte_end":275951,"line_start":5548,"line_end":5548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275956,"byte_end":275963,"line_start":5549,"line_end":5549,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":275968,"byte_end":275995,"line_start":5550,"line_end":5550,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276000,"byte_end":276035,"line_start":5551,"line_end":5551,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276040,"byte_end":276043,"line_start":5552,"line_end":5552,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276048,"byte_end":276101,"line_start":5553,"line_end":5553,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276106,"byte_end":276109,"line_start":5554,"line_end":5554,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = map.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276114,"byte_end":276168,"line_start":5555,"line_end":5555,"column_start":5,"column_end":59}},{"value":"/     o.insert(37);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276173,"byte_end":276194,"line_start":5556,"line_end":5556,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276199,"byte_end":276204,"line_start":5557,"line_end":5557,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276209,"byte_end":276246,"line_start":5558,"line_end":5558,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":276251,"byte_end":276258,"line_start":5559,"line_end":5559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277650,"byte_end":277656,"line_start":5609,"line_end":5609,"column_start":12,"column_end":18},"name":"insert","qualname":"<EntryRef>::insert","value":"pub fn insert(Self, V) -> OccupiedEntryRef where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntryRef.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntryRef.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277250,"byte_end":277315,"line_start":5596,"line_end":5596,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277320,"byte_end":277323,"line_start":5597,"line_end":5597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277328,"byte_end":277342,"line_start":5598,"line_end":5598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277347,"byte_end":277350,"line_start":5599,"line_end":5599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277355,"byte_end":277362,"line_start":5600,"line_end":5600,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277367,"byte_end":277394,"line_start":5601,"line_end":5601,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277399,"byte_end":277402,"line_start":5602,"line_end":5602,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277407,"byte_end":277462,"line_start":5603,"line_end":5603,"column_start":5,"column_end":60}},{"value":"/ let entry = map.entry_ref(\"horseyland\").insert(37);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277467,"byte_end":277522,"line_start":5604,"line_end":5604,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277527,"byte_end":277530,"line_start":5605,"line_end":5605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), \"horseyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277535,"byte_end":277577,"line_start":5606,"line_end":5606,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277582,"byte_end":277589,"line_start":5607,"line_end":5607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278626,"byte_end":278635,"line_start":5642,"line_end":5642,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<EntryRef>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278015,"byte_end":278097,"line_start":5623,"line_end":5623,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278102,"byte_end":278152,"line_start":5624,"line_end":5624,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278157,"byte_end":278160,"line_start":5625,"line_end":5625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278165,"byte_end":278179,"line_start":5626,"line_end":5626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278184,"byte_end":278187,"line_start":5627,"line_end":5627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278192,"byte_end":278199,"line_start":5628,"line_end":5628,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278204,"byte_end":278231,"line_start":5629,"line_end":5629,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278236,"byte_end":278239,"line_start":5630,"line_end":5630,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278244,"byte_end":278299,"line_start":5631,"line_end":5631,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278304,"byte_end":278307,"line_start":5632,"line_end":5632,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278312,"byte_end":278334,"line_start":5633,"line_end":5633,"column_start":5,"column_end":27}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278339,"byte_end":278383,"line_start":5634,"line_end":5634,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278388,"byte_end":278424,"line_start":5635,"line_end":5635,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278429,"byte_end":278432,"line_start":5636,"line_end":5636,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278437,"byte_end":278456,"line_start":5637,"line_end":5637,"column_start":5,"column_end":24}},{"value":"/ *map.entry_ref(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278461,"byte_end":278512,"line_start":5638,"line_end":5638,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278517,"byte_end":278553,"line_start":5639,"line_end":5639,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278558,"byte_end":278565,"line_start":5640,"line_end":5640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279551,"byte_end":279565,"line_start":5672,"line_end":5672,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<EntryRef>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V where K: Hash +\nFrom<&'b Q>, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278901,"byte_end":278994,"line_start":5653,"line_end":5653,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":278999,"byte_end":279061,"line_start":5654,"line_end":5654,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279066,"byte_end":279069,"line_start":5655,"line_end":5655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279074,"byte_end":279088,"line_start":5656,"line_end":5656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279093,"byte_end":279096,"line_start":5657,"line_end":5657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279101,"byte_end":279108,"line_start":5658,"line_end":5658,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279113,"byte_end":279140,"line_start":5659,"line_end":5659,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279145,"byte_end":279148,"line_start":5660,"line_end":5660,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279153,"byte_end":279208,"line_start":5661,"line_end":5661,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279213,"byte_end":279216,"line_start":5662,"line_end":5662,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279221,"byte_end":279243,"line_start":5663,"line_end":5663,"column_start":5,"column_end":27}},{"value":"/ map.entry_ref(\"poneyland\").or_insert_with(|| 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279248,"byte_end":279300,"line_start":5664,"line_end":5664,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279305,"byte_end":279341,"line_start":5665,"line_end":5665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279346,"byte_end":279349,"line_start":5666,"line_end":5666,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279354,"byte_end":279373,"line_start":5667,"line_end":5667,"column_start":5,"column_end":24}},{"value":"/ *map.entry_ref(\"poneyland\").or_insert_with(|| 10) *= 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279378,"byte_end":279437,"line_start":5668,"line_end":5668,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279442,"byte_end":279478,"line_start":5669,"line_end":5669,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279483,"byte_end":279490,"line_start":5670,"line_end":5670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280848,"byte_end":280866,"line_start":5706,"line_end":5706,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<EntryRef>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&Q) -> V>(Self, F) -> &'a mut V where\nK: Hash + Borrow<Q> + From<&'b Q>, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function.\n This method allows for generating key-derived values for insertion by providing the default\n function a reference to the key that was moved during the `.entry_ref(key)` method call.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279851,"byte_end":279946,"line_start":5683,"line_end":5683,"column_start":5,"column_end":100}},{"value":"/ This method allows for generating key-derived values for insertion by providing the default","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":279951,"byte_end":280046,"line_start":5684,"line_end":5684,"column_start":5,"column_end":100}},{"value":"/ function a reference to the key that was moved during the `.entry_ref(key)` method call.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280051,"byte_end":280143,"line_start":5685,"line_end":5685,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280148,"byte_end":280151,"line_start":5686,"line_end":5686,"column_start":5,"column_end":8}},{"value":"/ The reference to the moved key is provided so that cloning or copying the key is","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280156,"byte_end":280240,"line_start":5687,"line_end":5687,"column_start":5,"column_end":89}},{"value":"/ unnecessary, unlike with `.or_insert_with(|| ... )`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280245,"byte_end":280301,"line_start":5688,"line_end":5688,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280306,"byte_end":280309,"line_start":5689,"line_end":5689,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280314,"byte_end":280328,"line_start":5690,"line_end":5690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280333,"byte_end":280336,"line_start":5691,"line_end":5691,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280341,"byte_end":280348,"line_start":5692,"line_end":5692,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280353,"byte_end":280380,"line_start":5693,"line_end":5693,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280385,"byte_end":280388,"line_start":5694,"line_end":5694,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, usize> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280393,"byte_end":280450,"line_start":5695,"line_end":5695,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280455,"byte_end":280458,"line_start":5696,"line_end":5696,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280463,"byte_end":280485,"line_start":5697,"line_end":5697,"column_start":5,"column_end":27}},{"value":"/ map.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280490,"byte_end":280567,"line_start":5698,"line_end":5698,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280572,"byte_end":280608,"line_start":5699,"line_end":5699,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280613,"byte_end":280616,"line_start":5700,"line_end":5700,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280621,"byte_end":280640,"line_start":5701,"line_end":5701,"column_start":5,"column_end":24}},{"value":"/ *map.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count() * 10) *= 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280645,"byte_end":280733,"line_start":5702,"line_end":5702,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(map[\"poneyland\"], 18);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280738,"byte_end":280775,"line_start":5703,"line_end":5703,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":280780,"byte_end":280787,"line_start":5704,"line_end":5704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281748,"byte_end":281751,"line_start":5735,"line_end":5735,"column_start":12,"column_end":15},"name":"key","qualname":"<EntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281250,"byte_end":281294,"line_start":5720,"line_end":5720,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281299,"byte_end":281302,"line_start":5721,"line_end":5721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281307,"byte_end":281321,"line_start":5722,"line_end":5722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281326,"byte_end":281329,"line_start":5723,"line_end":5723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281334,"byte_end":281341,"line_start":5724,"line_end":5724,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281346,"byte_end":281373,"line_start":5725,"line_end":5725,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281378,"byte_end":281381,"line_start":5726,"line_end":5726,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281386,"byte_end":281441,"line_start":5727,"line_end":5727,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281446,"byte_end":281490,"line_start":5728,"line_end":5728,"column_start":5,"column_end":49}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281495,"byte_end":281514,"line_start":5729,"line_end":5729,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(map.entry_ref(\"poneyland\").key(), \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281519,"byte_end":281581,"line_start":5730,"line_end":5730,"column_start":5,"column_end":67}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281586,"byte_end":281608,"line_start":5731,"line_end":5731,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map.entry_ref(\"horseland\").key(), \"horseland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281613,"byte_end":281675,"line_start":5732,"line_end":5732,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281680,"byte_end":281687,"line_start":5733,"line_end":5733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282592,"byte_end":282602,"line_start":5766,"line_end":5766,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<EntryRef>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":281960,"byte_end":282028,"line_start":5745,"line_end":5745,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282033,"byte_end":282068,"line_start":5746,"line_end":5746,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282073,"byte_end":282076,"line_start":5747,"line_end":5747,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282081,"byte_end":282095,"line_start":5748,"line_end":5748,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282100,"byte_end":282103,"line_start":5749,"line_end":5749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282108,"byte_end":282115,"line_start":5750,"line_end":5750,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282120,"byte_end":282147,"line_start":5751,"line_end":5751,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282152,"byte_end":282155,"line_start":5752,"line_end":5752,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282160,"byte_end":282215,"line_start":5753,"line_end":5753,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282220,"byte_end":282223,"line_start":5754,"line_end":5754,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282228,"byte_end":282258,"line_start":5755,"line_end":5755,"column_start":5,"column_end":35}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282263,"byte_end":282298,"line_start":5756,"line_end":5756,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282303,"byte_end":282325,"line_start":5757,"line_end":5757,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282330,"byte_end":282367,"line_start":5758,"line_end":5758,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282372,"byte_end":282375,"line_start":5759,"line_end":5759,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282380,"byte_end":282410,"line_start":5760,"line_end":5760,"column_start":5,"column_end":35}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282415,"byte_end":282450,"line_start":5761,"line_end":5761,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282455,"byte_end":282477,"line_start":5762,"line_end":5762,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282482,"byte_end":282519,"line_start":5763,"line_end":5763,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282524,"byte_end":282531,"line_start":5764,"line_end":5764,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284577,"byte_end":284599,"line_start":5834,"line_end":5834,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<EntryRef>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&Q, V) ->\nOption<V>, K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282914,"byte_end":282984,"line_start":5779,"line_end":5779,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":282989,"byte_end":283058,"line_start":5780,"line_end":5780,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283063,"byte_end":283096,"line_start":5781,"line_end":5781,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283101,"byte_end":283104,"line_start":5782,"line_end":5782,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283109,"byte_end":283123,"line_start":5783,"line_end":5783,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283128,"byte_end":283131,"line_start":5784,"line_end":5784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283136,"byte_end":283143,"line_start":5785,"line_end":5785,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283148,"byte_end":283175,"line_start":5786,"line_end":5786,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283180,"byte_end":283218,"line_start":5787,"line_end":5787,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283223,"byte_end":283226,"line_start":5788,"line_end":5788,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283231,"byte_end":283286,"line_start":5789,"line_end":5789,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283291,"byte_end":283294,"line_start":5790,"line_end":5790,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283299,"byte_end":283318,"line_start":5791,"line_end":5791,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283323,"byte_end":283354,"line_start":5792,"line_end":5792,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283359,"byte_end":283410,"line_start":5793,"line_end":5793,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283415,"byte_end":283418,"line_start":5794,"line_end":5794,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283423,"byte_end":283440,"line_start":5795,"line_end":5795,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283445,"byte_end":283477,"line_start":5796,"line_end":5796,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283482,"byte_end":283527,"line_start":5797,"line_end":5797,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283532,"byte_end":283541,"line_start":5798,"line_end":5798,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283546,"byte_end":283588,"line_start":5799,"line_end":5799,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283593,"byte_end":283598,"line_start":5800,"line_end":5800,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283603,"byte_end":283606,"line_start":5801,"line_end":5801,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\".to_string(), 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283611,"byte_end":283655,"line_start":5802,"line_end":5802,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283660,"byte_end":283663,"line_start":5803,"line_end":5803,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283668,"byte_end":283687,"line_start":5804,"line_end":5804,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283692,"byte_end":283723,"line_start":5805,"line_end":5805,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283728,"byte_end":283768,"line_start":5806,"line_end":5806,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283773,"byte_end":283812,"line_start":5807,"line_end":5807,"column_start":5,"column_end":44}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283817,"byte_end":283847,"line_start":5808,"line_end":5808,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283852,"byte_end":283875,"line_start":5809,"line_end":5809,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283880,"byte_end":283891,"line_start":5810,"line_end":5810,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283896,"byte_end":283899,"line_start":5811,"line_end":5811,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283904,"byte_end":283921,"line_start":5812,"line_end":5812,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283926,"byte_end":283960,"line_start":5813,"line_end":5813,"column_start":5,"column_end":39}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":283965,"byte_end":284010,"line_start":5814,"line_end":5814,"column_start":5,"column_end":50}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284015,"byte_end":284052,"line_start":5815,"line_end":5815,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284057,"byte_end":284066,"line_start":5816,"line_end":5816,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284071,"byte_end":284111,"line_start":5817,"line_end":5817,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284116,"byte_end":284121,"line_start":5818,"line_end":5818,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284126,"byte_end":284129,"line_start":5819,"line_end":5819,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284134,"byte_end":284171,"line_start":5820,"line_end":5820,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284176,"byte_end":284179,"line_start":5821,"line_end":5821,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284184,"byte_end":284203,"line_start":5822,"line_end":5822,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284208,"byte_end":284239,"line_start":5823,"line_end":5823,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284244,"byte_end":284291,"line_start":5824,"line_end":5824,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284296,"byte_end":284299,"line_start":5825,"line_end":5825,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284304,"byte_end":284321,"line_start":5826,"line_end":5826,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => assert_eq!(e.key(), \"poneyland\"),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284326,"byte_end":284390,"line_start":5827,"line_end":5827,"column_start":5,"column_end":69}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284395,"byte_end":284437,"line_start":5828,"line_end":5828,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284442,"byte_end":284447,"line_start":5829,"line_end":5829,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284452,"byte_end":284455,"line_start":5830,"line_end":5830,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284460,"byte_end":284504,"line_start":5831,"line_end":5831,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284509,"byte_end":284516,"line_start":5832,"line_end":5832,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285621,"byte_end":285631,"line_start":5867,"line_end":5867,"column_start":12,"column_end":22},"name":"or_default","qualname":"<EntryRef>::or_default","value":"pub fn or_default(Self) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284953,"byte_end":285029,"line_start":5847,"line_end":5847,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285034,"byte_end":285096,"line_start":5848,"line_end":5848,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285101,"byte_end":285104,"line_start":5849,"line_end":5849,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285109,"byte_end":285123,"line_start":5850,"line_end":5850,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285128,"byte_end":285131,"line_start":5851,"line_end":5851,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285136,"byte_end":285143,"line_start":5852,"line_end":5852,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285148,"byte_end":285175,"line_start":5853,"line_end":5853,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285180,"byte_end":285183,"line_start":5854,"line_end":5854,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, Option<u32>> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285188,"byte_end":285251,"line_start":5855,"line_end":5855,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285256,"byte_end":285259,"line_start":5856,"line_end":5856,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285264,"byte_end":285286,"line_start":5857,"line_end":5857,"column_start":5,"column_end":27}},{"value":"/ map.entry_ref(\"poneyland\").or_default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285291,"byte_end":285335,"line_start":5858,"line_end":5858,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285340,"byte_end":285379,"line_start":5859,"line_end":5859,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285384,"byte_end":285387,"line_start":5860,"line_end":5860,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"horseland\".to_string(), Some(3));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285392,"byte_end":285441,"line_start":5861,"line_end":5861,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285446,"byte_end":285449,"line_start":5862,"line_end":5862,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285454,"byte_end":285473,"line_start":5863,"line_end":5863,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(map.entry_ref(\"horseland\").or_default(), &mut Some(3));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285478,"byte_end":285548,"line_start":5864,"line_end":5864,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285553,"byte_end":285560,"line_start":5865,"line_end":5865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286517,"byte_end":286520,"line_start":5896,"line_end":5896,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285995,"byte_end":286040,"line_start":5880,"line_end":5880,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286045,"byte_end":286048,"line_start":5881,"line_end":5881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286053,"byte_end":286067,"line_start":5882,"line_end":5882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286072,"byte_end":286075,"line_start":5883,"line_end":5883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286080,"byte_end":286087,"line_start":5884,"line_end":5884,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286092,"byte_end":286141,"line_start":5885,"line_end":5885,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286146,"byte_end":286149,"line_start":5886,"line_end":5886,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286154,"byte_end":286209,"line_start":5887,"line_end":5887,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286214,"byte_end":286259,"line_start":5888,"line_end":5888,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286264,"byte_end":286267,"line_start":5889,"line_end":5889,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286272,"byte_end":286310,"line_start":5890,"line_end":5890,"column_start":5,"column_end":43}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286315,"byte_end":286355,"line_start":5891,"line_end":5891,"column_start":5,"column_end":45}},{"value":"/     EntryRef::Occupied(entry) => assert_eq!(entry.key(), \"poneyland\"),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286360,"byte_end":286434,"line_start":5892,"line_end":5892,"column_start":5,"column_end":79}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286439,"byte_end":286444,"line_start":5893,"line_end":5893,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286449,"byte_end":286456,"line_start":5894,"line_end":5894,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287619,"byte_end":287631,"line_start":5929,"line_end":5929,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntryRef>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286633,"byte_end":286690,"line_start":5903,"line_end":5903,"column_start":5,"column_end":62}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286695,"byte_end":286736,"line_start":5904,"line_end":5904,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286741,"byte_end":286744,"line_start":5905,"line_end":5905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286749,"byte_end":286763,"line_start":5906,"line_end":5906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286768,"byte_end":286771,"line_start":5907,"line_end":5907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286776,"byte_end":286783,"line_start":5908,"line_end":5908,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286788,"byte_end":286815,"line_start":5909,"line_end":5909,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286820,"byte_end":286858,"line_start":5910,"line_end":5910,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286863,"byte_end":286866,"line_start":5911,"line_end":5911,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286871,"byte_end":286926,"line_start":5912,"line_end":5912,"column_start":5,"column_end":60}},{"value":"/ // The map is empty","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286931,"byte_end":286954,"line_start":5913,"line_end":5913,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":286959,"byte_end":287010,"line_start":5914,"line_end":5914,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287015,"byte_end":287018,"line_start":5915,"line_end":5915,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287023,"byte_end":287068,"line_start":5916,"line_end":5916,"column_start":5,"column_end":50}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287073,"byte_end":287121,"line_start":5917,"line_end":5917,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287126,"byte_end":287129,"line_start":5918,"line_end":5918,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287134,"byte_end":287197,"line_start":5919,"line_end":5919,"column_start":5,"column_end":68}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287202,"byte_end":287246,"line_start":5920,"line_end":5920,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(o.remove_entry(), (\"poneyland\".to_owned(), 12));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287251,"byte_end":287318,"line_start":5921,"line_end":5921,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287323,"byte_end":287328,"line_start":5922,"line_end":5922,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287333,"byte_end":287336,"line_start":5923,"line_end":5923,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287341,"byte_end":287394,"line_start":5924,"line_end":5924,"column_start":5,"column_end":58}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287399,"byte_end":287469,"line_start":5925,"line_end":5925,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287474,"byte_end":287546,"line_start":5926,"line_end":5926,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287551,"byte_end":287558,"line_start":5927,"line_end":5927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288252,"byte_end":288255,"line_start":5950,"line_end":5950,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntryRef>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287715,"byte_end":287762,"line_start":5933,"line_end":5933,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287767,"byte_end":287770,"line_start":5934,"line_end":5934,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287775,"byte_end":287789,"line_start":5935,"line_end":5935,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287794,"byte_end":287797,"line_start":5936,"line_end":5936,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287802,"byte_end":287809,"line_start":5937,"line_end":5937,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287814,"byte_end":287841,"line_start":5938,"line_end":5938,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287846,"byte_end":287884,"line_start":5939,"line_end":5939,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287889,"byte_end":287892,"line_start":5940,"line_end":5940,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287897,"byte_end":287952,"line_start":5941,"line_end":5941,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":287957,"byte_end":288002,"line_start":5942,"line_end":5942,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288007,"byte_end":288010,"line_start":5943,"line_end":5943,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288015,"byte_end":288053,"line_start":5944,"line_end":5944,"column_start":5,"column_end":43}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288058,"byte_end":288098,"line_start":5945,"line_end":5945,"column_start":5,"column_end":45}},{"value":"/     EntryRef::Occupied(entry) => assert_eq!(entry.get(), &12),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288103,"byte_end":288169,"line_start":5946,"line_end":5946,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288174,"byte_end":288179,"line_start":5947,"line_end":5947,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288184,"byte_end":288191,"line_start":5948,"line_end":5948,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289237,"byte_end":289244,"line_start":5982,"line_end":5982,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntryRef>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288323,"byte_end":288378,"line_start":5954,"line_end":5954,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288383,"byte_end":288386,"line_start":5955,"line_end":5955,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntryRef` which may outlive the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288391,"byte_end":288466,"line_start":5956,"line_end":5956,"column_start":5,"column_end":80}},{"value":"/ destruction of the `EntryRef` value, see [`into_mut`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288471,"byte_end":288529,"line_start":5957,"line_end":5957,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288534,"byte_end":288537,"line_start":5958,"line_end":5958,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288542,"byte_end":288576,"line_start":5959,"line_end":5959,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288581,"byte_end":288584,"line_start":5960,"line_end":5960,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288589,"byte_end":288603,"line_start":5961,"line_end":5961,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288608,"byte_end":288611,"line_start":5962,"line_end":5962,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288616,"byte_end":288623,"line_start":5963,"line_end":5963,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288628,"byte_end":288655,"line_start":5964,"line_end":5964,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288660,"byte_end":288698,"line_start":5965,"line_end":5965,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288703,"byte_end":288706,"line_start":5966,"line_end":5966,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288711,"byte_end":288766,"line_start":5967,"line_end":5967,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288771,"byte_end":288816,"line_start":5968,"line_end":5968,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288821,"byte_end":288824,"line_start":5969,"line_end":5969,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288829,"byte_end":288866,"line_start":5970,"line_end":5970,"column_start":5,"column_end":42}},{"value":"/ if let EntryRef::Occupied(mut o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288871,"byte_end":288938,"line_start":5971,"line_end":5971,"column_start":5,"column_end":72}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288943,"byte_end":288970,"line_start":5972,"line_end":5972,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":288975,"byte_end":289008,"line_start":5973,"line_end":5973,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289013,"byte_end":289016,"line_start":5974,"line_end":5974,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289021,"byte_end":289073,"line_start":5975,"line_end":5975,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289078,"byte_end":289104,"line_start":5976,"line_end":5976,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289109,"byte_end":289114,"line_start":5977,"line_end":5977,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289119,"byte_end":289122,"line_start":5978,"line_end":5978,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289127,"byte_end":289164,"line_start":5979,"line_end":5979,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289169,"byte_end":289176,"line_start":5980,"line_end":5980,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290160,"byte_end":290168,"line_start":6011,"line_end":6011,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntryRef>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntryRef into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntryRef into a mutable reference to the value in the entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289324,"byte_end":289408,"line_start":5986,"line_end":5986,"column_start":5,"column_end":89}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289413,"byte_end":289457,"line_start":5987,"line_end":5987,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289462,"byte_end":289465,"line_start":5988,"line_end":5988,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntryRef`, see [`get_mut`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289470,"byte_end":289549,"line_start":5989,"line_end":5989,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289554,"byte_end":289557,"line_start":5990,"line_end":5990,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289562,"byte_end":289594,"line_start":5991,"line_end":5991,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289599,"byte_end":289602,"line_start":5992,"line_end":5992,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289607,"byte_end":289621,"line_start":5993,"line_end":5993,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289626,"byte_end":289629,"line_start":5994,"line_end":5994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289634,"byte_end":289641,"line_start":5995,"line_end":5995,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289646,"byte_end":289695,"line_start":5996,"line_end":5996,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289700,"byte_end":289703,"line_start":5997,"line_end":5997,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289708,"byte_end":289763,"line_start":5998,"line_end":5998,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289768,"byte_end":289813,"line_start":5999,"line_end":5999,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289818,"byte_end":289821,"line_start":6000,"line_end":6000,"column_start":5,"column_end":8}},{"value":"/ let value: &mut u32;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289826,"byte_end":289850,"line_start":6001,"line_end":6001,"column_start":5,"column_end":29}},{"value":"/ match map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289855,"byte_end":289893,"line_start":6002,"line_end":6002,"column_start":5,"column_end":43}},{"value":"/     EntryRef::Occupied(entry) => value = entry.into_mut(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289898,"byte_end":289960,"line_start":6003,"line_end":6003,"column_start":5,"column_end":67}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":289965,"byte_end":290005,"line_start":6004,"line_end":6004,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290010,"byte_end":290015,"line_start":6005,"line_end":6005,"column_start":5,"column_end":10}},{"value":"/ *value += 10;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290020,"byte_end":290037,"line_start":6006,"line_end":6006,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290042,"byte_end":290045,"line_start":6007,"line_end":6007,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290050,"byte_end":290087,"line_start":6008,"line_end":6008,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290092,"byte_end":290099,"line_start":6009,"line_end":6009,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290808,"byte_end":290814,"line_start":6033,"line_end":6033,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntryRef>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290246,"byte_end":290313,"line_start":6015,"line_end":6015,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290318,"byte_end":290321,"line_start":6016,"line_end":6016,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290326,"byte_end":290340,"line_start":6017,"line_end":6017,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290345,"byte_end":290348,"line_start":6018,"line_end":6018,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290353,"byte_end":290360,"line_start":6019,"line_end":6019,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290365,"byte_end":290392,"line_start":6020,"line_end":6020,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290397,"byte_end":290435,"line_start":6021,"line_end":6021,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290440,"byte_end":290443,"line_start":6022,"line_end":6022,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290448,"byte_end":290503,"line_start":6023,"line_end":6023,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290508,"byte_end":290553,"line_start":6024,"line_end":6024,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290558,"byte_end":290561,"line_start":6025,"line_end":6025,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(mut o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290566,"byte_end":290633,"line_start":6026,"line_end":6026,"column_start":5,"column_end":72}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290638,"byte_end":290675,"line_start":6027,"line_end":6027,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290680,"byte_end":290685,"line_start":6028,"line_end":6028,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290690,"byte_end":290693,"line_start":6029,"line_end":6029,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290698,"byte_end":290735,"line_start":6030,"line_end":6030,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290740,"byte_end":290747,"line_start":6031,"line_end":6031,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291799,"byte_end":291805,"line_start":6062,"line_end":6062,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntryRef>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290898,"byte_end":290951,"line_start":6037,"line_end":6037,"column_start":5,"column_end":58}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":290956,"byte_end":290997,"line_start":6038,"line_end":6038,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291002,"byte_end":291005,"line_start":6039,"line_end":6039,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291010,"byte_end":291024,"line_start":6040,"line_end":6040,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291029,"byte_end":291032,"line_start":6041,"line_end":6041,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291037,"byte_end":291044,"line_start":6042,"line_end":6042,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291049,"byte_end":291076,"line_start":6043,"line_end":6043,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291081,"byte_end":291119,"line_start":6044,"line_end":6044,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291124,"byte_end":291127,"line_start":6045,"line_end":6045,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291132,"byte_end":291187,"line_start":6046,"line_end":6046,"column_start":5,"column_end":60}},{"value":"/ // The map is empty","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291192,"byte_end":291215,"line_start":6047,"line_end":6047,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291220,"byte_end":291271,"line_start":6048,"line_end":6048,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291276,"byte_end":291279,"line_start":6049,"line_end":6049,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291284,"byte_end":291329,"line_start":6050,"line_end":6050,"column_start":5,"column_end":50}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291334,"byte_end":291382,"line_start":6051,"line_end":6051,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291387,"byte_end":291390,"line_start":6052,"line_end":6052,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291395,"byte_end":291458,"line_start":6053,"line_end":6053,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291463,"byte_end":291498,"line_start":6054,"line_end":6054,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291503,"byte_end":291508,"line_start":6055,"line_end":6055,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291513,"byte_end":291516,"line_start":6056,"line_end":6056,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291521,"byte_end":291574,"line_start":6057,"line_end":6057,"column_start":5,"column_end":58}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291579,"byte_end":291649,"line_start":6058,"line_end":6058,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291654,"byte_end":291726,"line_start":6059,"line_end":6059,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291731,"byte_end":291738,"line_start":6060,"line_end":6060,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292943,"byte_end":292956,"line_start":6097,"line_end":6097,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntryRef>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V) where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291860,"byte_end":291952,"line_start":6066,"line_end":6066,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":291957,"byte_end":291995,"line_start":6067,"line_end":6067,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292000,"byte_end":292003,"line_start":6068,"line_end":6068,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292008,"byte_end":292020,"line_start":6069,"line_end":6069,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292025,"byte_end":292028,"line_start":6070,"line_end":6070,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`EntryRef::insert`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292033,"byte_end":292111,"line_start":6071,"line_end":6071,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292116,"byte_end":292119,"line_start":6072,"line_end":6072,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292124,"byte_end":292138,"line_start":6073,"line_end":6073,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292143,"byte_end":292146,"line_start":6074,"line_end":6074,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292151,"byte_end":292158,"line_start":6075,"line_end":6075,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292163,"byte_end":292212,"line_start":6076,"line_end":6076,"column_start":5,"column_end":54}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292217,"byte_end":292237,"line_start":6077,"line_end":6077,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292242,"byte_end":292245,"line_start":6078,"line_end":6078,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<str>, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292250,"byte_end":292306,"line_start":6079,"line_end":6079,"column_start":5,"column_end":61}},{"value":"/ let key: Rc<str> = Rc::from(\"Stringthing\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292311,"byte_end":292358,"line_start":6080,"line_end":6080,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292363,"byte_end":292366,"line_start":6081,"line_end":6081,"column_start":5,"column_end":8}},{"value":"/ map.insert(key.clone(), 15);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292371,"byte_end":292403,"line_start":6082,"line_end":6082,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(Rc::strong_count(&key), 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292408,"byte_end":292450,"line_start":6083,"line_end":6083,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292455,"byte_end":292458,"line_start":6084,"line_end":6084,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"Stringthing\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292463,"byte_end":292503,"line_start":6085,"line_end":6085,"column_start":5,"column_end":45}},{"value":"/     EntryRef::Occupied(entry) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292508,"byte_end":292546,"line_start":6086,"line_end":6086,"column_start":5,"column_end":43}},{"value":"/         let (old_key, old_value): (Rc<str>, u32) = entry.replace_entry(16);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292551,"byte_end":292630,"line_start":6087,"line_end":6087,"column_start":5,"column_end":84}},{"value":"/         assert!(Rc::ptr_eq(&key, &old_key) && old_value == 15);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292635,"byte_end":292702,"line_start":6088,"line_end":6088,"column_start":5,"column_end":72}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292707,"byte_end":292716,"line_start":6089,"line_end":6089,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292721,"byte_end":292761,"line_start":6090,"line_end":6090,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292766,"byte_end":292771,"line_start":6091,"line_end":6091,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292776,"byte_end":292779,"line_start":6092,"line_end":6092,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Rc::strong_count(&key), 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292784,"byte_end":292826,"line_start":6093,"line_end":6093,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map[\"Stringthing\"], 16);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292831,"byte_end":292870,"line_start":6094,"line_end":6094,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":292875,"byte_end":292882,"line_start":6095,"line_end":6095,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294736,"byte_end":294747,"line_start":6148,"line_end":6148,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntryRef>::replace_key","value":"pub fn replace_key(Self) -> K where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293257,"byte_end":293333,"line_start":6109,"line_end":6109,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293338,"byte_end":293341,"line_start":6110,"line_end":6110,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293346,"byte_end":293358,"line_start":6111,"line_end":6111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293363,"byte_end":293366,"line_start":6112,"line_end":6112,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293371,"byte_end":293446,"line_start":6113,"line_end":6113,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293451,"byte_end":293454,"line_start":6114,"line_end":6114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293459,"byte_end":293473,"line_start":6115,"line_end":6115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293478,"byte_end":293481,"line_start":6116,"line_end":6116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293486,"byte_end":293493,"line_start":6117,"line_end":6117,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293498,"byte_end":293547,"line_start":6118,"line_end":6118,"column_start":5,"column_end":54}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293552,"byte_end":293572,"line_start":6119,"line_end":6119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293577,"byte_end":293580,"line_start":6120,"line_end":6120,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<str>, usize> = HashMap::with_capacity(6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293585,"byte_end":293654,"line_start":6121,"line_end":6121,"column_start":5,"column_end":74}},{"value":"/ let mut keys: Vec<Rc<str>> = Vec::with_capacity(6);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293659,"byte_end":293714,"line_start":6122,"line_end":6122,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293719,"byte_end":293722,"line_start":6123,"line_end":6123,"column_start":5,"column_end":8}},{"value":"/ for (value, key) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().enumerate() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293727,"byte_end":293807,"line_start":6124,"line_end":6124,"column_start":5,"column_end":85}},{"value":"/     let rc_key: Rc<str> = Rc::from(key);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293812,"byte_end":293856,"line_start":6125,"line_end":6125,"column_start":5,"column_end":49}},{"value":"/     keys.push(rc_key.clone());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293861,"byte_end":293895,"line_start":6126,"line_end":6126,"column_start":5,"column_end":39}},{"value":"/     map.insert(rc_key.clone(), value);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293900,"byte_end":293942,"line_start":6127,"line_end":6127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293947,"byte_end":293952,"line_start":6128,"line_end":6128,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293957,"byte_end":293960,"line_start":6129,"line_end":6129,"column_start":5,"column_end":8}},{"value":"/ assert!(keys.iter().all(|key| Rc::strong_count(key) == 2));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":293965,"byte_end":294028,"line_start":6130,"line_end":6130,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294033,"byte_end":294036,"line_start":6131,"line_end":6131,"column_start":5,"column_end":8}},{"value":"/ // It doesn't matter that we kind of use a vector with the same keys,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294041,"byte_end":294114,"line_start":6132,"line_end":6132,"column_start":5,"column_end":78}},{"value":"/ // because all keys will be newly created from the references","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294119,"byte_end":294184,"line_start":6133,"line_end":6133,"column_start":5,"column_end":70}},{"value":"/ reclaim_memory(&mut map, &keys);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294189,"byte_end":294225,"line_start":6134,"line_end":6134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294230,"byte_end":294233,"line_start":6135,"line_end":6135,"column_start":5,"column_end":8}},{"value":"/ assert!(keys.iter().all(|key| Rc::strong_count(key) == 1));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294238,"byte_end":294301,"line_start":6136,"line_end":6136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294306,"byte_end":294309,"line_start":6137,"line_end":6137,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<str>, usize>, keys: &[Rc<str>]) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294314,"byte_end":294390,"line_start":6138,"line_end":6138,"column_start":5,"column_end":81}},{"value":"/     for key in keys {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294395,"byte_end":294420,"line_start":6139,"line_end":6139,"column_start":5,"column_end":30}},{"value":"/         if let EntryRef::Occupied(entry) = map.entry_ref(key.as_ref()) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294425,"byte_end":294501,"line_start":6140,"line_end":6140,"column_start":5,"column_end":81}},{"value":"/         /// Replaces the entry's key with our version of it in `keys`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294506,"byte_end":294580,"line_start":6141,"line_end":6141,"column_start":5,"column_end":79}},{"value":"/             entry.replace_key();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294585,"byte_end":294621,"line_start":6142,"line_end":6142,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294626,"byte_end":294639,"line_start":6143,"line_end":6143,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294644,"byte_end":294653,"line_start":6144,"line_end":6144,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294658,"byte_end":294663,"line_start":6145,"line_end":6145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294668,"byte_end":294675,"line_start":6146,"line_end":6146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296488,"byte_end":296506,"line_start":6205,"line_end":6205,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntryRef>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> EntryRef where F: FnOnce(&Q, V) ->\nOption<V>, K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":294928,"byte_end":294998,"line_start":6156,"line_end":6156,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295003,"byte_end":295064,"line_start":6157,"line_end":6157,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295069,"byte_end":295102,"line_start":6158,"line_end":6158,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295107,"byte_end":295110,"line_start":6159,"line_end":6159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295115,"byte_end":295129,"line_start":6160,"line_end":6160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295134,"byte_end":295137,"line_start":6161,"line_end":6161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295142,"byte_end":295149,"line_start":6162,"line_end":6162,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295154,"byte_end":295181,"line_start":6163,"line_end":6163,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295186,"byte_end":295224,"line_start":6164,"line_end":6164,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295229,"byte_end":295232,"line_start":6165,"line_end":6165,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295237,"byte_end":295292,"line_start":6166,"line_end":6166,"column_start":5,"column_end":60}},{"value":"/ map.insert(\"poneyland\".to_string(), 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295297,"byte_end":295341,"line_start":6167,"line_end":6167,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295346,"byte_end":295349,"line_start":6168,"line_end":6168,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295354,"byte_end":295404,"line_start":6169,"line_end":6169,"column_start":5,"column_end":55}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295409,"byte_end":295443,"line_start":6170,"line_end":6170,"column_start":5,"column_end":39}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295448,"byte_end":295489,"line_start":6171,"line_end":6171,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295494,"byte_end":295537,"line_start":6172,"line_end":6172,"column_start":5,"column_end":48}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295542,"byte_end":295576,"line_start":6173,"line_end":6173,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295581,"byte_end":295608,"line_start":6174,"line_end":6174,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295613,"byte_end":295627,"line_start":6175,"line_end":6175,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295632,"byte_end":295641,"line_start":6176,"line_end":6176,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295646,"byte_end":295686,"line_start":6177,"line_end":6177,"column_start":5,"column_end":45}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295691,"byte_end":295697,"line_start":6178,"line_end":6178,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295702,"byte_end":295705,"line_start":6179,"line_end":6179,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295710,"byte_end":295727,"line_start":6180,"line_end":6180,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295732,"byte_end":295766,"line_start":6181,"line_end":6181,"column_start":5,"column_end":39}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295771,"byte_end":295816,"line_start":6182,"line_end":6182,"column_start":5,"column_end":50}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295821,"byte_end":295858,"line_start":6183,"line_end":6183,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295863,"byte_end":295872,"line_start":6184,"line_end":6184,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295877,"byte_end":295917,"line_start":6185,"line_end":6185,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295922,"byte_end":295927,"line_start":6186,"line_end":6186,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295932,"byte_end":295935,"line_start":6187,"line_end":6187,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295940,"byte_end":295977,"line_start":6188,"line_end":6188,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295982,"byte_end":295985,"line_start":6189,"line_end":6189,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry_ref(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":295990,"byte_end":296040,"line_start":6190,"line_end":6190,"column_start":5,"column_end":55}},{"value":"/     EntryRef::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296045,"byte_end":296114,"line_start":6191,"line_end":6191,"column_start":5,"column_end":74}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296119,"byte_end":296159,"line_start":6192,"line_end":6192,"column_start":5,"column_end":45}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296164,"byte_end":296170,"line_start":6193,"line_end":6193,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296175,"byte_end":296178,"line_start":6194,"line_end":6194,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296183,"byte_end":296200,"line_start":6195,"line_end":6195,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296205,"byte_end":296237,"line_start":6196,"line_end":6196,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296242,"byte_end":296287,"line_start":6197,"line_end":6197,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296292,"byte_end":296301,"line_start":6198,"line_end":6198,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296306,"byte_end":296348,"line_start":6199,"line_end":6199,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296353,"byte_end":296358,"line_start":6200,"line_end":6200,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296363,"byte_end":296366,"line_start":6201,"line_end":6201,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296371,"byte_end":296415,"line_start":6202,"line_end":6202,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":296420,"byte_end":296427,"line_start":6203,"line_end":6203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297925,"byte_end":297928,"line_start":6251,"line_end":6251,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntryRef`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297498,"byte_end":297571,"line_start":6238,"line_end":6238,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntryRef`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297576,"byte_end":297609,"line_start":6239,"line_end":6239,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297614,"byte_end":297617,"line_start":6240,"line_end":6240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297622,"byte_end":297636,"line_start":6241,"line_end":6241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297641,"byte_end":297644,"line_start":6242,"line_end":6242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297649,"byte_end":297656,"line_start":6243,"line_end":6243,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297661,"byte_end":297688,"line_start":6244,"line_end":6244,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297693,"byte_end":297696,"line_start":6245,"line_end":6245,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297701,"byte_end":297756,"line_start":6246,"line_end":6246,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297761,"byte_end":297793,"line_start":6247,"line_end":6247,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.entry_ref(key).key(), \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297798,"byte_end":297852,"line_start":6248,"line_end":6248,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297857,"byte_end":297864,"line_start":6249,"line_end":6249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298511,"byte_end":298519,"line_start":6274,"line_end":6274,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntryRef>::into_key","value":"pub fn into_key(Self) -> K where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298017,"byte_end":298047,"line_start":6258,"line_end":6258,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298052,"byte_end":298055,"line_start":6259,"line_end":6259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298060,"byte_end":298074,"line_start":6260,"line_end":6260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298079,"byte_end":298082,"line_start":6261,"line_end":6261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298087,"byte_end":298094,"line_start":6262,"line_end":6262,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298099,"byte_end":298148,"line_start":6263,"line_end":6263,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298153,"byte_end":298156,"line_start":6264,"line_end":6264,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298161,"byte_end":298216,"line_start":6265,"line_end":6265,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298221,"byte_end":298253,"line_start":6266,"line_end":6266,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298258,"byte_end":298261,"line_start":6267,"line_end":6267,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298266,"byte_end":298296,"line_start":6268,"line_end":6268,"column_start":5,"column_end":35}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298301,"byte_end":298343,"line_start":6269,"line_end":6269,"column_start":5,"column_end":47}},{"value":"/     EntryRef::Vacant(v) => assert_eq!(v.into_key(), \"poneyland\".to_owned()),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298348,"byte_end":298428,"line_start":6270,"line_end":6270,"column_start":5,"column_end":85}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298433,"byte_end":298438,"line_start":6271,"line_end":6271,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298443,"byte_end":298450,"line_start":6272,"line_end":6272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":299165,"byte_end":299171,"line_start":6299,"line_end":6299,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntryRef>::insert","value":"pub fn insert(Self, V) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntryRef's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntryRef's key,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298612,"byte_end":298674,"line_start":6281,"line_end":6281,"column_start":5,"column_end":67}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298679,"byte_end":298721,"line_start":6282,"line_end":6282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298726,"byte_end":298729,"line_start":6283,"line_end":6283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298734,"byte_end":298748,"line_start":6284,"line_end":6284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298753,"byte_end":298756,"line_start":6285,"line_end":6285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298761,"byte_end":298768,"line_start":6286,"line_end":6286,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298773,"byte_end":298800,"line_start":6287,"line_end":6287,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298805,"byte_end":298843,"line_start":6288,"line_end":6288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298848,"byte_end":298851,"line_start":6289,"line_end":6289,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298856,"byte_end":298911,"line_start":6290,"line_end":6290,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298916,"byte_end":298948,"line_start":6291,"line_end":6291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298953,"byte_end":298956,"line_start":6292,"line_end":6292,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Vacant(o) = map.entry_ref(key) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":298961,"byte_end":299014,"line_start":6293,"line_end":6293,"column_start":5,"column_end":58}},{"value":"/     o.insert(37);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":299019,"byte_end":299040,"line_start":6294,"line_end":6294,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":299045,"byte_end":299050,"line_start":6295,"line_end":6295,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":299055,"byte_end":299092,"line_start":6296,"line_end":6296,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":299097,"byte_end":299104,"line_start":6297,"line_end":6297,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":364220,"byte_end":364227,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1727}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":360848,"byte_end":360914,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":360915,"byte_end":360918,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ As with the [`HashMap`] type, a `HashSet` requires that the elements","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":360919,"byte_end":360991,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ implement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":360992,"byte_end":361072,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361073,"byte_end":361149,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ it is important that the following property holds:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361150,"byte_end":361204,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361205,"byte_end":361208,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361209,"byte_end":361220,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361221,"byte_end":361257,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361258,"byte_end":361265,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361266,"byte_end":361269,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361270,"byte_end":361340,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361341,"byte_end":361344,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361345,"byte_end":361348,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361349,"byte_end":361422,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ item's hash, as determined by the [`Hash`] trait, or its equality, as","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361423,"byte_end":361496,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ determined by the [`Eq`] trait, changes while it is in the set. This is","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361497,"byte_end":361572,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361573,"byte_end":361652,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ unsafe code.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361653,"byte_end":361669,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361670,"byte_end":361673,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361674,"byte_end":361753,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361754,"byte_end":361832,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashSet` may become corrupted and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361833,"byte_end":361913,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361914,"byte_end":361959,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361960,"byte_end":361963,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361964,"byte_end":361978,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361979,"byte_end":361982,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361983,"byte_end":361990,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":361991,"byte_end":362018,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362019,"byte_end":362087,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ // would be `HashSet<String>` in this example).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362088,"byte_end":362139,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ let mut books = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362140,"byte_end":362175,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362176,"byte_end":362179,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362180,"byte_end":362202,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362203,"byte_end":362256,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/ books.insert(\"To Kill a Mockingbird\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362257,"byte_end":362311,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/ books.insert(\"The Odyssey\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362312,"byte_end":362356,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ books.insert(\"The Great Gatsby\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362357,"byte_end":362406,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362407,"byte_end":362410,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362411,"byte_end":362443,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362444,"byte_end":362491,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362492,"byte_end":362564,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362565,"byte_end":362595,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362596,"byte_end":362601,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362602,"byte_end":362605,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362606,"byte_end":362627,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362628,"byte_end":362660,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362661,"byte_end":362664,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362665,"byte_end":362696,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362697,"byte_end":362721,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362722,"byte_end":362751,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362752,"byte_end":362757,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362758,"byte_end":362765,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362766,"byte_end":362769,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashSet` with a custom type is to derive","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362770,"byte_end":362838,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/ [`Eq`] and [`Hash`]. We must also derive [`PartialEq`]. This will in the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362839,"byte_end":362915,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ future be implied by [`Eq`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362916,"byte_end":362948,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362949,"byte_end":362952,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362953,"byte_end":362960,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362961,"byte_end":362988,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":362989,"byte_end":363030,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363031,"byte_end":363050,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363051,"byte_end":363072,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     power: usize,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363073,"byte_end":363094,"line_start":83,"line_end":83,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363095,"byte_end":363100,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363101,"byte_end":363104,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ let mut vikings = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363105,"byte_end":363142,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363143,"byte_end":363146,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363147,"byte_end":363214,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363215,"byte_end":363282,"line_start":89,"line_end":89,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363283,"byte_end":363349,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ vikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363350,"byte_end":363418,"line_start":91,"line_end":91,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363419,"byte_end":363422,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the vikings.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363423,"byte_end":363478,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ for x in &vikings {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363479,"byte_end":363502,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", x);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363503,"byte_end":363531,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363532,"byte_end":363537,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363538,"byte_end":363545,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363546,"byte_end":363549,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ A `HashSet` with fixed list of elements can be initialized from an array:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363550,"byte_end":363627,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363628,"byte_end":363631,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363632,"byte_end":363639,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363640,"byte_end":363667,"line_start":102,"line_end":102,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363668,"byte_end":363671,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let viking_names: HashSet<&'static str> =","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363672,"byte_end":363717,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/     [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363718,"byte_end":363782,"line_start":105,"line_end":105,"column_start":1,"column_end":65}},{"value":"/ // use the values stored in the set","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363783,"byte_end":363822,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363823,"byte_end":363830,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363831,"byte_end":363834,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363835,"byte_end":363900,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363901,"byte_end":363960,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":363961,"byte_end":364025,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":364026,"byte_end":364062,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":364063,"byte_end":364136,"line_start":113,"line_end":113,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":364137,"byte_end":364208,"line_start":114,"line_end":114,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367308,"byte_end":367316,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S, A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold without reallocating.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":366982,"byte_end":367055,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367060,"byte_end":367063,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367068,"byte_end":367082,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367087,"byte_end":367090,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367095,"byte_end":367102,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367107,"byte_end":367134,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367139,"byte_end":367195,"line_start":218,"line_end":218,"column_start":5,"column_end":61}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367200,"byte_end":367235,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367240,"byte_end":367247,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367841,"byte_end":367845,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S, A>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"/ An iterator visiting all elements in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367374,"byte_end":367431,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"/ The iterator element type is `&'a T`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367436,"byte_end":367477,"line_start":227,"line_end":227,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367482,"byte_end":367485,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367490,"byte_end":367504,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367509,"byte_end":367512,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367517,"byte_end":367524,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367529,"byte_end":367556,"line_start":232,"line_end":232,"column_start":5,"column_end":32}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367561,"byte_end":367594,"line_start":233,"line_end":233,"column_start":5,"column_end":38}},{"value":"/ set.insert(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367599,"byte_end":367619,"line_start":234,"line_end":234,"column_start":5,"column_end":25}},{"value":"/ set.insert(\"b\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367624,"byte_end":367644,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367649,"byte_end":367652,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367657,"byte_end":367697,"line_start":237,"line_end":237,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367702,"byte_end":367727,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367732,"byte_end":367758,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367763,"byte_end":367768,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367773,"byte_end":367780,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368268,"byte_end":368271,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S, A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367941,"byte_end":367987,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":367992,"byte_end":367995,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368000,"byte_end":368014,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368019,"byte_end":368022,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368027,"byte_end":368034,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368039,"byte_end":368066,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368071,"byte_end":368074,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368079,"byte_end":368110,"line_start":256,"line_end":256,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368115,"byte_end":368142,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368147,"byte_end":368163,"line_start":258,"line_end":258,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368168,"byte_end":368195,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368200,"byte_end":368207,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368655,"byte_end":368663,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S, A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368324,"byte_end":368375,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368380,"byte_end":368383,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368388,"byte_end":368402,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368407,"byte_end":368410,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368415,"byte_end":368422,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368427,"byte_end":368454,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368459,"byte_end":368462,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368467,"byte_end":368498,"line_start":273,"line_end":273,"column_start":5,"column_end":36}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368503,"byte_end":368529,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368534,"byte_end":368550,"line_start":275,"line_end":275,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368555,"byte_end":368582,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368587,"byte_end":368594,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369211,"byte_end":369216,"line_start":301,"line_end":301,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S, A>>::drain","value":"pub fn drain(&mut Self) -> Drain<, T, A>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"/ Clears the set, returning all elements in an iterator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368720,"byte_end":368778,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368783,"byte_end":368786,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368791,"byte_end":368805,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368810,"byte_end":368813,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368818,"byte_end":368825,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368830,"byte_end":368857,"line_start":288,"line_end":288,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368862,"byte_end":368865,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368870,"byte_end":368936,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/ assert!(!set.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368941,"byte_end":368970,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368975,"byte_end":368978,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ // print 1, 2, 3 in an arbitrary order","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":368983,"byte_end":369025,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/ for i in set.drain() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369030,"byte_end":369056,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369061,"byte_end":369087,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369092,"byte_end":369097,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369102,"byte_end":369105,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369110,"byte_end":369138,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369143,"byte_end":369150,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369750,"byte_end":369756,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S, A>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369322,"byte_end":369379,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369384,"byte_end":369387,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369392,"byte_end":369470,"line_start":309,"line_end":309,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369475,"byte_end":369478,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369483,"byte_end":369497,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369502,"byte_end":369505,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369510,"byte_end":369517,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369522,"byte_end":369549,"line_start":314,"line_end":314,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369554,"byte_end":369557,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let xs = [1,2,3,4,5,6];","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369562,"byte_end":369589,"line_start":316,"line_end":316,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = xs.iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369594,"byte_end":369655,"line_start":317,"line_end":317,"column_start":5,"column_end":66}},{"value":"/ set.retain(|&k| k % 2 == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369660,"byte_end":369692,"line_start":318,"line_end":318,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369697,"byte_end":369726,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369731,"byte_end":369738,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370826,"byte_end":370838,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashSet<T, S, A>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, T, F, A> where\nF: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369876,"byte_end":369937,"line_start":328,"line_end":328,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369942,"byte_end":369993,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":369998,"byte_end":370001,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ In other words, move all elements `e` such that `f(&e)` returns `true` out","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370006,"byte_end":370084,"line_start":331,"line_end":331,"column_start":5,"column_end":83}},{"value":"/ into another iterator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370089,"byte_end":370115,"line_start":332,"line_end":332,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370120,"byte_end":370123,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370128,"byte_end":370211,"line_start":334,"line_end":334,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370216,"byte_end":370259,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370264,"byte_end":370267,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370272,"byte_end":370286,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370291,"byte_end":370294,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370299,"byte_end":370306,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370311,"byte_end":370338,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370343,"byte_end":370346,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<i32> = (0..8).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370351,"byte_end":370400,"line_start":342,"line_end":342,"column_start":5,"column_end":54}},{"value":"/ let drained: HashSet<i32> = set.drain_filter(|v| v % 2 == 0).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370405,"byte_end":370480,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370485,"byte_end":370488,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.into_iter().collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370493,"byte_end":370553,"line_start":345,"line_end":345,"column_start":5,"column_end":65}},{"value":"/ let mut odds = set.into_iter().collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370558,"byte_end":370613,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ evens.sort();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370618,"byte_end":370635,"line_start":347,"line_end":347,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370640,"byte_end":370656,"line_start":348,"line_end":348,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370661,"byte_end":370664,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370669,"byte_end":370709,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370714,"byte_end":370753,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":370758,"byte_end":370765,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371451,"byte_end":371456,"line_start":380,"line_end":380,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S, A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371144,"byte_end":371184,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371189,"byte_end":371192,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371197,"byte_end":371211,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371216,"byte_end":371219,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371224,"byte_end":371231,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371236,"byte_end":371263,"line_start":372,"line_end":372,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371268,"byte_end":371271,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371276,"byte_end":371307,"line_start":374,"line_end":374,"column_start":5,"column_end":36}},{"value":"/ v.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371312,"byte_end":371328,"line_start":375,"line_end":375,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371333,"byte_end":371347,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371352,"byte_end":371378,"line_start":377,"line_end":377,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371383,"byte_end":371390,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372562,"byte_end":372573,"line_start":413,"line_end":413,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashSet<T, S, Global>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371544,"byte_end":371616,"line_start":386,"line_end":386,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371621,"byte_end":371630,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371635,"byte_end":371638,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371643,"byte_end":371710,"line_start":389,"line_end":389,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371715,"byte_end":371718,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371723,"byte_end":371780,"line_start":391,"line_end":391,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371785,"byte_end":371852,"line_start":392,"line_end":392,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371857,"byte_end":371920,"line_start":393,"line_end":393,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371925,"byte_end":371989,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371994,"byte_end":371997,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372002,"byte_end":372078,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372083,"byte_end":372147,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372152,"byte_end":372155,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372160,"byte_end":372163,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372168,"byte_end":372182,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372187,"byte_end":372190,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372195,"byte_end":372202,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372207,"byte_end":372234,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372239,"byte_end":372287,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372292,"byte_end":372295,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372300,"byte_end":372342,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372347,"byte_end":372389,"line_start":407,"line_end":407,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372394,"byte_end":372412,"line_start":408,"line_end":408,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372417,"byte_end":372424,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372429,"byte_end":372432,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372437,"byte_end":372495,"line_start":411,"line_end":411,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373794,"byte_end":373818,"line_start":446,"line_end":446,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S, Global>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372678,"byte_end":372743,"line_start":419,"line_end":419,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372748,"byte_end":372778,"line_start":420,"line_end":420,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372783,"byte_end":372786,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372791,"byte_end":372865,"line_start":422,"line_end":422,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372870,"byte_end":372939,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372944,"byte_end":372947,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":372952,"byte_end":373009,"line_start":425,"line_end":425,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373014,"byte_end":373081,"line_start":426,"line_end":426,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373086,"byte_end":373149,"line_start":427,"line_end":427,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373154,"byte_end":373218,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373223,"byte_end":373226,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373231,"byte_end":373307,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373312,"byte_end":373376,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373381,"byte_end":373384,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373389,"byte_end":373403,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373408,"byte_end":373411,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373416,"byte_end":373423,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373428,"byte_end":373455,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373460,"byte_end":373508,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373513,"byte_end":373516,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373521,"byte_end":373563,"line_start":439,"line_end":439,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373568,"byte_end":373627,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373632,"byte_end":373650,"line_start":441,"line_end":441,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373655,"byte_end":373662,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373667,"byte_end":373670,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373675,"byte_end":373733,"line_start":444,"line_end":444,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374108,"byte_end":374117,"line_start":459,"line_end":459,"column_start":12,"column_end":21},"name":"allocator","qualname":"<HashSet<T, S, A>>::allocator","value":"pub fn allocator(&Self) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying allocator.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying allocator.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374030,"byte_end":374082,"line_start":457,"line_end":457,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374087,"byte_end":374096,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374948,"byte_end":374962,"line_start":484,"line_end":484,"column_start":12,"column_end":26},"name":"with_hasher_in","qualname":"<HashSet<T, S, A>>::with_hasher_in","value":"pub fn with_hasher_in(S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374173,"byte_end":374245,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374250,"byte_end":374259,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374264,"byte_end":374267,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374272,"byte_end":374339,"line_start":466,"line_end":466,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374344,"byte_end":374347,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374352,"byte_end":374409,"line_start":468,"line_end":468,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374414,"byte_end":374481,"line_start":469,"line_end":469,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374486,"byte_end":374549,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374554,"byte_end":374618,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374623,"byte_end":374626,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374631,"byte_end":374645,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374650,"byte_end":374653,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374658,"byte_end":374665,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374670,"byte_end":374697,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374702,"byte_end":374750,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374755,"byte_end":374758,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374763,"byte_end":374805,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374810,"byte_end":374852,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374857,"byte_end":374875,"line_start":481,"line_end":481,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":374880,"byte_end":374887,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375974,"byte_end":376001,"line_start":512,"line_end":512,"column_start":12,"column_end":39},"name":"with_capacity_and_hasher_in","qualname":"<HashSet<T, S, A>>::with_capacity_and_hasher_in","value":"pub fn with_capacity_and_hasher_in(usize, S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375087,"byte_end":375152,"line_start":490,"line_end":490,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375157,"byte_end":375187,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375192,"byte_end":375195,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375200,"byte_end":375274,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375279,"byte_end":375348,"line_start":494,"line_end":494,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375353,"byte_end":375356,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375361,"byte_end":375418,"line_start":496,"line_end":496,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375423,"byte_end":375490,"line_start":497,"line_end":497,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375495,"byte_end":375558,"line_start":498,"line_end":498,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375563,"byte_end":375627,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375632,"byte_end":375635,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375640,"byte_end":375654,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375659,"byte_end":375662,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375667,"byte_end":375674,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375679,"byte_end":375706,"line_start":504,"line_end":504,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375711,"byte_end":375759,"line_start":505,"line_end":505,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375764,"byte_end":375767,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375772,"byte_end":375814,"line_start":507,"line_end":507,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375819,"byte_end":375878,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375883,"byte_end":375901,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":375906,"byte_end":375913,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376693,"byte_end":376699,"line_start":533,"line_end":533,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S, A>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the set's [`BuildHasher`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376166,"byte_end":376219,"line_start":518,"line_end":518,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376224,"byte_end":376227,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376232,"byte_end":376310,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376315,"byte_end":376318,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376323,"byte_end":376337,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376342,"byte_end":376345,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376350,"byte_end":376357,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376362,"byte_end":376389,"line_start":525,"line_end":525,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376394,"byte_end":376442,"line_start":526,"line_end":526,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376447,"byte_end":376450,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376455,"byte_end":376502,"line_start":528,"line_end":528,"column_start":5,"column_end":52}},{"value":"/ let set: HashSet<i32> = HashSet::with_hasher(hasher);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376507,"byte_end":376564,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"/ let hasher: &DefaultHashBuilder = set.hasher();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376569,"byte_end":376620,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376625,"byte_end":376632,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377400,"byte_end":377407,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S, A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376857,"byte_end":376933,"line_start":544,"line_end":544,"column_start":5,"column_end":81}},{"value":"/ in the `HashSet`. The collection may reserve more space to avoid","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376938,"byte_end":377006,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377011,"byte_end":377038,"line_start":546,"line_end":546,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377043,"byte_end":377046,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377051,"byte_end":377063,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377068,"byte_end":377071,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377076,"byte_end":377132,"line_start":550,"line_end":550,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377137,"byte_end":377140,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377145,"byte_end":377159,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377164,"byte_end":377167,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377172,"byte_end":377179,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377184,"byte_end":377211,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377216,"byte_end":377263,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/ set.reserve(10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377268,"byte_end":377288,"line_start":557,"line_end":557,"column_start":5,"column_end":25}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377293,"byte_end":377327,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377332,"byte_end":377339,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378115,"byte_end":378126,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S, A>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377489,"byte_end":377573,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ in the given `HashSet<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377578,"byte_end":377657,"line_start":566,"line_end":566,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377662,"byte_end":377689,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377694,"byte_end":377697,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377702,"byte_end":377714,"line_start":569,"line_end":569,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377719,"byte_end":377722,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377727,"byte_end":377807,"line_start":571,"line_end":571,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377812,"byte_end":377828,"line_start":572,"line_end":572,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377833,"byte_end":377836,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377841,"byte_end":377855,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377860,"byte_end":377863,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377868,"byte_end":377875,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377880,"byte_end":377907,"line_start":577,"line_end":577,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377912,"byte_end":377959,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/ set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":377964,"byte_end":378042,"line_start":579,"line_end":579,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378047,"byte_end":378054,"line_start":580,"line_end":580,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378823,"byte_end":378836,"line_start":603,"line_end":603,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S, A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set as much as possible. It will drop","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378242,"byte_end":378311,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378316,"byte_end":378381,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378386,"byte_end":378459,"line_start":588,"line_end":588,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378464,"byte_end":378467,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378472,"byte_end":378486,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378491,"byte_end":378494,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378499,"byte_end":378506,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378511,"byte_end":378538,"line_start":593,"line_end":593,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378543,"byte_end":378546,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378551,"byte_end":378597,"line_start":595,"line_end":595,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378602,"byte_end":378620,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378625,"byte_end":378643,"line_start":597,"line_end":597,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378648,"byte_end":378683,"line_start":598,"line_end":598,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to_fit();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378688,"byte_end":378712,"line_start":599,"line_end":599,"column_start":5,"column_end":29}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378717,"byte_end":378750,"line_start":600,"line_end":600,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378755,"byte_end":378762,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379653,"byte_end":379662,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S, A>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set with a lower limit. It will drop","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378895,"byte_end":378963,"line_start":607,"line_end":607,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":378968,"byte_end":379046,"line_start":608,"line_end":608,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379051,"byte_end":379124,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379129,"byte_end":379132,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379137,"byte_end":379200,"line_start":611,"line_end":611,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379205,"byte_end":379226,"line_start":612,"line_end":612,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379231,"byte_end":379234,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379239,"byte_end":379253,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379258,"byte_end":379261,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379266,"byte_end":379273,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379278,"byte_end":379305,"line_start":617,"line_end":617,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379310,"byte_end":379313,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379318,"byte_end":379364,"line_start":619,"line_end":619,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379369,"byte_end":379387,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379392,"byte_end":379410,"line_start":621,"line_end":621,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379415,"byte_end":379450,"line_start":622,"line_end":622,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to(10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379455,"byte_end":379477,"line_start":623,"line_end":623,"column_start":5,"column_end":27}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379482,"byte_end":379516,"line_start":624,"line_end":624,"column_start":5,"column_end":39}},{"value":"/ set.shrink_to(0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379521,"byte_end":379542,"line_start":625,"line_end":625,"column_start":5,"column_end":26}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379547,"byte_end":379580,"line_start":626,"line_end":626,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379585,"byte_end":379592,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380605,"byte_end":380615,"line_start":657,"line_end":657,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S, A>>::difference","value":"pub fn difference<'a>(&'a Self, &'a Self) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379750,"byte_end":379800,"line_start":633,"line_end":633,"column_start":5,"column_end":55}},{"value":"/ i.e., the values that are in `self` but not in `other`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379805,"byte_end":379864,"line_start":634,"line_end":634,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379869,"byte_end":379872,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379877,"byte_end":379891,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379896,"byte_end":379899,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379904,"byte_end":379911,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379916,"byte_end":379943,"line_start":639,"line_end":639,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":379948,"byte_end":380008,"line_start":640,"line_end":640,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380013,"byte_end":380076,"line_start":641,"line_end":641,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380081,"byte_end":380084,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380089,"byte_end":380119,"line_start":643,"line_end":643,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380124,"byte_end":380155,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380160,"byte_end":380197,"line_start":645,"line_end":645,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380202,"byte_end":380207,"line_start":646,"line_end":646,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380212,"byte_end":380215,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ let diff: HashSet<_> = a.difference(&b).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380220,"byte_end":380274,"line_start":648,"line_end":648,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [1].iter().collect());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380279,"byte_end":380322,"line_start":649,"line_end":649,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380327,"byte_end":380330,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380335,"byte_end":380380,"line_start":651,"line_end":651,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380385,"byte_end":380425,"line_start":652,"line_end":652,"column_start":5,"column_end":45}},{"value":"/ let diff: HashSet<_> = b.difference(&a).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380430,"byte_end":380484,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [4].iter().collect());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380489,"byte_end":380532,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380537,"byte_end":380544,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381567,"byte_end":381587,"line_start":686,"line_end":686,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S, A>>::symmetric_difference","value":"pub fn symmetric_difference<'a>(&'a Self, &'a Self) -> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380768,"byte_end":380828,"line_start":664,"line_end":664,"column_start":5,"column_end":65}},{"value":"/ i.e., the values that are in `self` or in `other` but not in both.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380833,"byte_end":380903,"line_start":665,"line_end":665,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380908,"byte_end":380911,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380916,"byte_end":380930,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380935,"byte_end":380938,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380943,"byte_end":380950,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380955,"byte_end":380982,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":380987,"byte_end":381047,"line_start":671,"line_end":671,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381052,"byte_end":381115,"line_start":672,"line_end":672,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381120,"byte_end":381123,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381128,"byte_end":381165,"line_start":674,"line_end":674,"column_start":5,"column_end":42}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381170,"byte_end":381211,"line_start":675,"line_end":675,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381216,"byte_end":381242,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381247,"byte_end":381252,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381257,"byte_end":381260,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let diff1: HashSet<_> = a.symmetric_difference(&b).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381265,"byte_end":381330,"line_start":679,"line_end":679,"column_start":5,"column_end":70}},{"value":"/ let diff2: HashSet<_> = b.symmetric_difference(&a).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381335,"byte_end":381400,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381405,"byte_end":381408,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381413,"byte_end":381442,"line_start":682,"line_end":682,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381447,"byte_end":381494,"line_start":683,"line_end":683,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381499,"byte_end":381506,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382444,"byte_end":382456,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S, A>>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a Self) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381780,"byte_end":381832,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/ i.e., the values that are both in `self` and `other`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381837,"byte_end":381894,"line_start":693,"line_end":693,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381899,"byte_end":381902,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381907,"byte_end":381921,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381926,"byte_end":381929,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381934,"byte_end":381941,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381946,"byte_end":381973,"line_start":698,"line_end":698,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":381978,"byte_end":382038,"line_start":699,"line_end":699,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382043,"byte_end":382106,"line_start":700,"line_end":700,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382111,"byte_end":382114,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382119,"byte_end":382156,"line_start":702,"line_end":702,"column_start":5,"column_end":42}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382161,"byte_end":382194,"line_start":703,"line_end":703,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382199,"byte_end":382225,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382230,"byte_end":382235,"line_start":705,"line_end":705,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382240,"byte_end":382243,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let intersection: HashSet<_> = a.intersection(&b).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382248,"byte_end":382312,"line_start":707,"line_end":707,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382317,"byte_end":382371,"line_start":708,"line_end":708,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382376,"byte_end":382383,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383417,"byte_end":383422,"line_start":742,"line_end":742,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S, A>>::union","value":"pub fn union<'a>(&'a Self, &'a Self) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382767,"byte_end":382812,"line_start":723,"line_end":723,"column_start":5,"column_end":50}},{"value":"/ i.e., all the values in `self` or `other`, without duplicates.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382817,"byte_end":382883,"line_start":724,"line_end":724,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382888,"byte_end":382891,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382896,"byte_end":382910,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382915,"byte_end":382918,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382923,"byte_end":382930,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382935,"byte_end":382962,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":382967,"byte_end":383027,"line_start":730,"line_end":730,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383032,"byte_end":383095,"line_start":731,"line_end":731,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383100,"byte_end":383103,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383108,"byte_end":383151,"line_start":733,"line_end":733,"column_start":5,"column_end":48}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383156,"byte_end":383182,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383187,"byte_end":383213,"line_start":735,"line_end":735,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383218,"byte_end":383223,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383228,"byte_end":383231,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let union: HashSet<_> = a.union(&b).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383236,"byte_end":383286,"line_start":738,"line_end":738,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383291,"byte_end":383344,"line_start":739,"line_end":739,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383349,"byte_end":383356,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384580,"byte_end":384588,"line_start":774,"line_end":774,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S, A>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where T: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383900,"byte_end":383947,"line_start":755,"line_end":755,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383952,"byte_end":383955,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":383960,"byte_end":384027,"line_start":757,"line_end":757,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384032,"byte_end":384099,"line_start":758,"line_end":758,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384104,"byte_end":384123,"line_start":759,"line_end":759,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384128,"byte_end":384131,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384136,"byte_end":384150,"line_start":761,"line_end":761,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384155,"byte_end":384158,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384163,"byte_end":384170,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384175,"byte_end":384202,"line_start":764,"line_end":764,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384207,"byte_end":384210,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384215,"byte_end":384277,"line_start":766,"line_end":766,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384282,"byte_end":384321,"line_start":767,"line_end":767,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384326,"byte_end":384366,"line_start":768,"line_end":768,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384371,"byte_end":384378,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384383,"byte_end":384386,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384391,"byte_end":384450,"line_start":771,"line_end":771,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384455,"byte_end":384519,"line_start":772,"line_end":772,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385450,"byte_end":385453,"line_start":801,"line_end":801,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S, A>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384734,"byte_end":384824,"line_start":782,"line_end":782,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384829,"byte_end":384832,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384837,"byte_end":384904,"line_start":784,"line_end":784,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384909,"byte_end":384976,"line_start":785,"line_end":785,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":384981,"byte_end":385000,"line_start":786,"line_end":786,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385005,"byte_end":385008,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385013,"byte_end":385027,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385032,"byte_end":385035,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385040,"byte_end":385047,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385052,"byte_end":385079,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385084,"byte_end":385087,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385092,"byte_end":385154,"line_start":793,"line_end":793,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.get(&2), Some(&2));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385159,"byte_end":385197,"line_start":794,"line_end":794,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.get(&4), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385202,"byte_end":385236,"line_start":795,"line_end":795,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385241,"byte_end":385248,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385253,"byte_end":385256,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385261,"byte_end":385320,"line_start":798,"line_end":798,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385325,"byte_end":385389,"line_start":799,"line_end":799,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386282,"byte_end":386295,"line_start":828,"line_end":828,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S, A>>::get_or_insert","value":"pub fn get_or_insert(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts the given `value` into the set if it is not present, then","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385745,"byte_end":385814,"line_start":813,"line_end":813,"column_start":5,"column_end":74}},{"value":"/ returns a reference to the value in the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385819,"byte_end":385867,"line_start":814,"line_end":814,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385872,"byte_end":385875,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385880,"byte_end":385894,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385899,"byte_end":385902,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385907,"byte_end":385914,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385919,"byte_end":385946,"line_start":819,"line_end":819,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385951,"byte_end":385954,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":385959,"byte_end":386025,"line_start":821,"line_end":821,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386030,"byte_end":386059,"line_start":822,"line_end":822,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(set.get_or_insert(2), &2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386064,"byte_end":386105,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(set.get_or_insert(100), &100);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386110,"byte_end":386155,"line_start":824,"line_end":824,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.len(), 4); // 100 was inserted","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386160,"byte_end":386209,"line_start":825,"line_end":825,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386214,"byte_end":386221,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387286,"byte_end":387305,"line_start":857,"line_end":857,"column_start":12,"column_end":31},"name":"get_or_insert_owned","qualname":"<HashSet<T, S, A>>::get_or_insert_owned","value":"pub fn get_or_insert_owned<Q: ?Sized>(&mut Self, &Q) -> &T where T: Borrow<Q>,\nQ: Hash + Eq + ToOwned<Owned = T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an owned copy of the given `value` into the set if it is not\n present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts an owned copy of the given `value` into the set if it is not","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386650,"byte_end":386722,"line_start":838,"line_end":838,"column_start":5,"column_end":77}},{"value":"/ present, then returns a reference to the value in the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386727,"byte_end":386789,"line_start":839,"line_end":839,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386794,"byte_end":386797,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386802,"byte_end":386816,"line_start":841,"line_end":841,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386821,"byte_end":386824,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386829,"byte_end":386836,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386841,"byte_end":386868,"line_start":844,"line_end":844,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386873,"byte_end":386876,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386881,"byte_end":386939,"line_start":846,"line_end":846,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":386944,"byte_end":386997,"line_start":847,"line_end":847,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387002,"byte_end":387005,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387010,"byte_end":387039,"line_start":849,"line_end":849,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387044,"byte_end":387085,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_owned(pet);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387090,"byte_end":387139,"line_start":851,"line_end":851,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387144,"byte_end":387175,"line_start":852,"line_end":852,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387180,"byte_end":387185,"line_start":853,"line_end":853,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387190,"byte_end":387248,"line_start":854,"line_end":854,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387253,"byte_end":387260,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387265,"byte_end":387274,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388462,"byte_end":388480,"line_start":890,"line_end":890,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S, A>>::get_or_insert_with","value":"pub fn get_or_insert_with<Q: ?Sized, F>(&mut Self, &Q, F) -> &T where\nT: Borrow<Q>, Q: Hash + Eq, F: FnOnce(&Q) -> T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the set if the given `value` is","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387771,"byte_end":387845,"line_start":871,"line_end":871,"column_start":5,"column_end":79}},{"value":"/ not present, then returns a reference to the value in the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387850,"byte_end":387916,"line_start":872,"line_end":872,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387921,"byte_end":387924,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387929,"byte_end":387943,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387948,"byte_end":387951,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387956,"byte_end":387963,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":387968,"byte_end":387995,"line_start":877,"line_end":877,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388000,"byte_end":388003,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388008,"byte_end":388066,"line_start":879,"line_end":879,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388071,"byte_end":388124,"line_start":880,"line_end":880,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388129,"byte_end":388132,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388137,"byte_end":388166,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388171,"byte_end":388212,"line_start":883,"line_end":883,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_with(pet, str::to_owned);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388217,"byte_end":388280,"line_start":884,"line_end":884,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388285,"byte_end":388316,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388321,"byte_end":388326,"line_start":886,"line_end":886,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388331,"byte_end":388389,"line_start":887,"line_end":887,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388394,"byte_end":388401,"line_start":888,"line_end":888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390277,"byte_end":390282,"line_start":939,"line_end":939,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashSet<T, S, A>>::entry","value":"pub fn entry(&mut Self, T) -> Entry<, T, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given value's corresponding entry in the set for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given value's corresponding entry in the set for in-place manipulation.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":388954,"byte_end":389038,"line_start":905,"line_end":905,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389043,"byte_end":389046,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389051,"byte_end":389065,"line_start":907,"line_end":907,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389070,"byte_end":389073,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389078,"byte_end":389085,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389090,"byte_end":389117,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_set::Entry::*;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389122,"byte_end":389160,"line_start":911,"line_end":911,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389165,"byte_end":389168,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ let mut singles = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389173,"byte_end":389210,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/ let mut dupes = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389215,"byte_end":389250,"line_start":914,"line_end":914,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389255,"byte_end":389258,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389263,"byte_end":389314,"line_start":916,"line_end":916,"column_start":5,"column_end":56}},{"value":"/     if let Vacant(dupe_entry) = dupes.entry(ch) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389319,"byte_end":389372,"line_start":917,"line_end":917,"column_start":5,"column_end":58}},{"value":"/         // We haven't already seen a duplicate, so","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389377,"byte_end":389431,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/         // check if we've at least seen it once.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389436,"byte_end":389488,"line_start":919,"line_end":919,"column_start":5,"column_end":57}},{"value":"/         match singles.entry(ch) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389493,"byte_end":389530,"line_start":920,"line_end":920,"column_start":5,"column_end":42}},{"value":"/             Vacant(single_entry) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389535,"byte_end":389576,"line_start":921,"line_end":921,"column_start":5,"column_end":46}},{"value":"/                 // We found a new character for the first time.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389581,"byte_end":389648,"line_start":922,"line_end":922,"column_start":5,"column_end":72}},{"value":"/                 single_entry.insert()","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389653,"byte_end":389694,"line_start":923,"line_end":923,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389699,"byte_end":389716,"line_start":924,"line_end":924,"column_start":5,"column_end":22}},{"value":"/             Occupied(single_entry) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389721,"byte_end":389764,"line_start":925,"line_end":925,"column_start":5,"column_end":48}},{"value":"/                 // We've already seen this once, \"move\" it to dupes.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389769,"byte_end":389841,"line_start":926,"line_end":926,"column_start":5,"column_end":77}},{"value":"/                 single_entry.remove();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389846,"byte_end":389888,"line_start":927,"line_end":927,"column_start":5,"column_end":47}},{"value":"/                 dupe_entry.insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389893,"byte_end":389933,"line_start":928,"line_end":928,"column_start":5,"column_end":45}},{"value":"/             }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389938,"byte_end":389955,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389960,"byte_end":389973,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389978,"byte_end":389987,"line_start":931,"line_end":931,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":389992,"byte_end":389997,"line_start":932,"line_end":932,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390002,"byte_end":390005,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ assert!(!singles.contains(&'t') && dupes.contains(&'t'));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390010,"byte_end":390071,"line_start":934,"line_end":934,"column_start":5,"column_end":66}},{"value":"/ assert!(singles.contains(&'u') && !dupes.contains(&'u'));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390076,"byte_end":390137,"line_start":935,"line_end":935,"column_start":5,"column_end":66}},{"value":"/ assert!(!singles.contains(&'v') && !dupes.contains(&'v'));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390142,"byte_end":390204,"line_start":936,"line_end":936,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390209,"byte_end":390216,"line_start":937,"line_end":937,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391097,"byte_end":391108,"line_start":963,"line_end":963,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S, A>>::is_disjoint","value":"pub fn is_disjoint(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390565,"byte_end":390633,"line_start":946,"line_end":946,"column_start":5,"column_end":73}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390638,"byte_end":390699,"line_start":947,"line_end":947,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390704,"byte_end":390707,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390712,"byte_end":390726,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390731,"byte_end":390734,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390739,"byte_end":390746,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390751,"byte_end":390778,"line_start":952,"line_end":952,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390783,"byte_end":390786,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390791,"byte_end":390851,"line_start":954,"line_end":954,"column_start":5,"column_end":65}},{"value":"/ let mut b = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390856,"byte_end":390887,"line_start":955,"line_end":955,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390892,"byte_end":390895,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390900,"byte_end":390940,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390945,"byte_end":390961,"line_start":958,"line_end":958,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":390966,"byte_end":391006,"line_start":959,"line_end":959,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391011,"byte_end":391027,"line_start":960,"line_end":960,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391032,"byte_end":391073,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391078,"byte_end":391085,"line_start":962,"line_end":962,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391730,"byte_end":391739,"line_start":984,"line_end":984,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S, A>>::is_subset","value":"pub fn is_subset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391199,"byte_end":391252,"line_start":967,"line_end":967,"column_start":5,"column_end":58}},{"value":"/ i.e., `other` contains at least all the values in `self`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391257,"byte_end":391318,"line_start":968,"line_end":968,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391323,"byte_end":391326,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391331,"byte_end":391345,"line_start":970,"line_end":970,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391350,"byte_end":391353,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391358,"byte_end":391365,"line_start":972,"line_end":972,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391370,"byte_end":391397,"line_start":973,"line_end":973,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391402,"byte_end":391405,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ let sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391410,"byte_end":391472,"line_start":975,"line_end":975,"column_start":5,"column_end":67}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391477,"byte_end":391510,"line_start":976,"line_end":976,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391515,"byte_end":391518,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391523,"byte_end":391565,"line_start":978,"line_end":978,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391570,"byte_end":391588,"line_start":979,"line_end":979,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391593,"byte_end":391635,"line_start":980,"line_end":980,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391640,"byte_end":391658,"line_start":981,"line_end":981,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391663,"byte_end":391706,"line_start":982,"line_end":982,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391711,"byte_end":391718,"line_start":983,"line_end":983,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392483,"byte_end":392494,"line_start":1009,"line_end":1009,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S, A>>::is_superset","value":"pub fn is_superset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391858,"byte_end":391913,"line_start":988,"line_end":988,"column_start":5,"column_end":60}},{"value":"/ i.e., `self` contains at least all the values in `other`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391918,"byte_end":391979,"line_start":989,"line_end":989,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391984,"byte_end":391987,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":391992,"byte_end":392006,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392011,"byte_end":392014,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392019,"byte_end":392026,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392031,"byte_end":392058,"line_start":994,"line_end":994,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392063,"byte_end":392066,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ let sub: HashSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392071,"byte_end":392130,"line_start":996,"line_end":996,"column_start":5,"column_end":64}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392135,"byte_end":392168,"line_start":997,"line_end":997,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392173,"byte_end":392176,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392181,"byte_end":392226,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392231,"byte_end":392234,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392239,"byte_end":392257,"line_start":1001,"line_end":1001,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392262,"byte_end":392280,"line_start":1002,"line_end":1002,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392285,"byte_end":392330,"line_start":1003,"line_end":1003,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392335,"byte_end":392338,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392343,"byte_end":392361,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392366,"byte_end":392410,"line_start":1006,"line_end":1006,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392415,"byte_end":392422,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393075,"byte_end":393081,"line_start":1031,"line_end":1031,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S, A>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392567,"byte_end":392595,"line_start":1013,"line_end":1013,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392600,"byte_end":392603,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392608,"byte_end":392675,"line_start":1015,"line_end":1015,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392680,"byte_end":392683,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392688,"byte_end":392752,"line_start":1017,"line_end":1017,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392757,"byte_end":392760,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392765,"byte_end":392779,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392784,"byte_end":392787,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392792,"byte_end":392799,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392804,"byte_end":392831,"line_start":1022,"line_end":1022,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392836,"byte_end":392839,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392844,"byte_end":392877,"line_start":1024,"line_end":1024,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392882,"byte_end":392885,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392890,"byte_end":392926,"line_start":1026,"line_end":1026,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392931,"byte_end":392968,"line_start":1027,"line_end":1027,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":392973,"byte_end":393002,"line_start":1028,"line_end":1028,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393007,"byte_end":393014,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394121,"byte_end":394144,"line_start":1055,"line_end":1055,"column_start":12,"column_end":35},"name":"insert_unique_unchecked","qualname":"<HashSet<T, S, A>>::insert_unique_unchecked","value":"pub fn insert_unique_unchecked(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Insert a value the set without checking if the value already exists in the set.","sig":null,"attributes":[{"value":"/ Insert a value the set without checking if the value already exists in the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393169,"byte_end":393252,"line_start":1035,"line_end":1035,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393257,"byte_end":393260,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the value just inserted.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393265,"byte_end":393316,"line_start":1037,"line_end":1037,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393321,"byte_end":393324,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ This operation is safe if a value does not exist in the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393329,"byte_end":393393,"line_start":1039,"line_end":1039,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393398,"byte_end":393401,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ However, if a value exists in the set already, the behavior is unspecified:","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393406,"byte_end":393485,"line_start":1041,"line_end":1041,"column_start":5,"column_end":84}},{"value":"/ this operation may panic, loop forever, or any following operation with the set","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393490,"byte_end":393573,"line_start":1042,"line_end":1042,"column_start":5,"column_end":88}},{"value":"/ may panic, loop forever or return arbitrary result.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393578,"byte_end":393633,"line_start":1043,"line_end":1043,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393638,"byte_end":393641,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ That said, this operation (and following operations) are guaranteed to","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393646,"byte_end":393720,"line_start":1045,"line_end":1045,"column_start":5,"column_end":79}},{"value":"/ not violate memory safety.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393725,"byte_end":393755,"line_start":1046,"line_end":1046,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393760,"byte_end":393763,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ This operation is faster than regular insert, because it does not perform","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393768,"byte_end":393845,"line_start":1048,"line_end":1048,"column_start":5,"column_end":82}},{"value":"/ lookup before insertion.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393850,"byte_end":393878,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393883,"byte_end":393886,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ This operation is useful during initial population of the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393891,"byte_end":393957,"line_start":1051,"line_end":1051,"column_start":5,"column_end":71}},{"value":"/ For example, when constructing a set from another set, we know","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":393962,"byte_end":394028,"line_start":1052,"line_end":1052,"column_start":5,"column_end":71}},{"value":"/ that values are unique.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394033,"byte_end":394060,"line_start":1053,"line_end":1053,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394786,"byte_end":394793,"line_start":1075,"line_end":1075,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S, A>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394239,"byte_end":394332,"line_start":1059,"line_end":1059,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394337,"byte_end":394373,"line_start":1060,"line_end":1060,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394378,"byte_end":394381,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394386,"byte_end":394400,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394405,"byte_end":394408,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394413,"byte_end":394420,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394425,"byte_end":394452,"line_start":1065,"line_end":1065,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394457,"byte_end":394460,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394465,"byte_end":394498,"line_start":1067,"line_end":1067,"column_start":5,"column_end":38}},{"value":"/ set.insert(Vec::<i32>::new());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394503,"byte_end":394537,"line_start":1068,"line_end":1068,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394542,"byte_end":394545,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394550,"byte_end":394606,"line_start":1070,"line_end":1070,"column_start":5,"column_end":61}},{"value":"/ set.replace(Vec::with_capacity(10));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394611,"byte_end":394651,"line_start":1071,"line_end":1071,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 10);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394656,"byte_end":394713,"line_start":1072,"line_end":1072,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":394718,"byte_end":394725,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395801,"byte_end":395807,"line_start":1107,"line_end":1107,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S, A>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns whether the value was","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395079,"byte_end":395142,"line_start":1085,"line_end":1085,"column_start":5,"column_end":68}},{"value":"/ present in the set.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395147,"byte_end":395170,"line_start":1086,"line_end":1086,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395175,"byte_end":395178,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395183,"byte_end":395250,"line_start":1088,"line_end":1088,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395255,"byte_end":395322,"line_start":1089,"line_end":1089,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395327,"byte_end":395346,"line_start":1090,"line_end":1090,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395351,"byte_end":395354,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395359,"byte_end":395373,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395378,"byte_end":395381,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395386,"byte_end":395393,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395398,"byte_end":395425,"line_start":1095,"line_end":1095,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395430,"byte_end":395433,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395438,"byte_end":395471,"line_start":1097,"line_end":1097,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395476,"byte_end":395479,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395484,"byte_end":395502,"line_start":1099,"line_end":1099,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395507,"byte_end":395544,"line_start":1100,"line_end":1100,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395549,"byte_end":395587,"line_start":1101,"line_end":1101,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395592,"byte_end":395599,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395604,"byte_end":395607,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395612,"byte_end":395671,"line_start":1104,"line_end":1104,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395676,"byte_end":395740,"line_start":1105,"line_end":1105,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396677,"byte_end":396681,"line_start":1134,"line_end":1134,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S, A>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where T: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":395961,"byte_end":396046,"line_start":1115,"line_end":1115,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396051,"byte_end":396054,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396059,"byte_end":396126,"line_start":1117,"line_end":1117,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396131,"byte_end":396198,"line_start":1118,"line_end":1118,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396203,"byte_end":396222,"line_start":1119,"line_end":1119,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396227,"byte_end":396230,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396235,"byte_end":396249,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396254,"byte_end":396257,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396262,"byte_end":396269,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396274,"byte_end":396301,"line_start":1124,"line_end":1124,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396306,"byte_end":396309,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396314,"byte_end":396380,"line_start":1126,"line_end":1126,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.take(&2), Some(2));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396385,"byte_end":396423,"line_start":1127,"line_end":1127,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.take(&2), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396428,"byte_end":396463,"line_start":1128,"line_end":1128,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396468,"byte_end":396475,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396480,"byte_end":396483,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396488,"byte_end":396547,"line_start":1131,"line_end":1131,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":396552,"byte_end":396616,"line_start":1132,"line_end":1132,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403824,"byte_end":403828,"line_start":1423,"line_end":1423,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1873}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `HashSet`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403571,"byte_end":403617,"line_start":1416,"line_end":1416,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403618,"byte_end":403621,"line_start":1417,"line_end":1417,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashSet`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403622,"byte_end":403689,"line_start":1418,"line_end":1418,"column_start":1,"column_end":68}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403690,"byte_end":403725,"line_start":1419,"line_end":1419,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403726,"byte_end":403729,"line_start":1420,"line_end":1420,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403730,"byte_end":403766,"line_start":1421,"line_end":1421,"column_start":1,"column_end":37}},{"value":"/ [`iter`]: struct.HashSet.html#method.iter","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403767,"byte_end":403812,"line_start":1422,"line_end":1422,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1874},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404182,"byte_end":404190,"line_start":1434,"line_end":1434,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1877}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `HashSet`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403868,"byte_end":403921,"line_start":1427,"line_end":1427,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403922,"byte_end":403925,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashSet`]","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403926,"byte_end":403997,"line_start":1429,"line_end":1429,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":403998,"byte_end":404073,"line_start":1430,"line_end":1430,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404074,"byte_end":404077,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404078,"byte_end":404114,"line_start":1432,"line_end":1432,"column_start":1,"column_end":37}},{"value":"/ [`into_iter`]: struct.HashSet.html#method.into_iter","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404115,"byte_end":404170,"line_start":1433,"line_end":1433,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404529,"byte_end":404534,"line_start":1445,"line_end":1445,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1882}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `HashSet`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404265,"byte_end":404319,"line_start":1438,"line_end":1438,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404320,"byte_end":404323,"line_start":1439,"line_end":1439,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashSet`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404324,"byte_end":404392,"line_start":1440,"line_end":1440,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404393,"byte_end":404428,"line_start":1441,"line_end":1441,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404429,"byte_end":404432,"line_start":1442,"line_end":1442,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404433,"byte_end":404469,"line_start":1443,"line_end":1443,"column_start":1,"column_end":37}},{"value":"/ [`drain`]: struct.HashSet.html#method.drain","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404470,"byte_end":404517,"line_start":1444,"line_end":1444,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404935,"byte_end":404946,"line_start":1456,"line_end":1456,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::set::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":1888},{"krate":0,"index":1889}],"decl_id":null,"docs":" A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404614,"byte_end":404704,"line_start":1449,"line_end":1449,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404705,"byte_end":404708,"line_start":1450,"line_end":1450,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashSet`]. See its","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404709,"byte_end":404792,"line_start":1451,"line_end":1451,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404793,"byte_end":404820,"line_start":1452,"line_end":1452,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404821,"byte_end":404824,"line_start":1453,"line_end":1453,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashSet.html#method.drain_filter","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404825,"byte_end":404886,"line_start":1454,"line_end":1454,"column_start":1,"column_end":62}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":404887,"byte_end":404923,"line_start":1455,"line_end":1455,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405382,"byte_end":405394,"line_start":1471,"line_end":1471,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `HashSet`s.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405078,"byte_end":405151,"line_start":1464,"line_end":1464,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405152,"byte_end":405155,"line_start":1465,"line_end":1465,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`HashSet`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405156,"byte_end":405231,"line_start":1466,"line_end":1466,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405232,"byte_end":405267,"line_start":1467,"line_end":1467,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405268,"byte_end":405271,"line_start":1468,"line_end":1468,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405272,"byte_end":405308,"line_start":1469,"line_end":1469,"column_start":1,"column_end":37}},{"value":"/ [`intersection`]: struct.HashSet.html#method.intersection","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405309,"byte_end":405370,"line_start":1470,"line_end":1470,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405848,"byte_end":405858,"line_start":1485,"line_end":1485,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `HashSet`s.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405552,"byte_end":405623,"line_start":1478,"line_end":1478,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405624,"byte_end":405627,"line_start":1479,"line_end":1479,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`HashSet`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405628,"byte_end":405701,"line_start":1480,"line_end":1480,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405702,"byte_end":405737,"line_start":1481,"line_end":1481,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405738,"byte_end":405741,"line_start":1482,"line_end":1482,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405742,"byte_end":405778,"line_start":1483,"line_end":1483,"column_start":1,"column_end":37}},{"value":"/ [`difference`]: struct.HashSet.html#method.difference","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":405779,"byte_end":405836,"line_start":1484,"line_end":1484,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406352,"byte_end":406371,"line_start":1499,"line_end":1499,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1909}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `HashSet`s.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406016,"byte_end":406097,"line_start":1492,"line_end":1492,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406098,"byte_end":406101,"line_start":1493,"line_end":1493,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406102,"byte_end":406172,"line_start":1494,"line_end":1494,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`]. See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406173,"byte_end":406221,"line_start":1495,"line_end":1495,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406222,"byte_end":406225,"line_start":1496,"line_end":1496,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406226,"byte_end":406262,"line_start":1497,"line_end":1497,"column_start":1,"column_end":37}},{"value":"/ [`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406263,"byte_end":406340,"line_start":1498,"line_end":1498,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406761,"byte_end":406766,"line_start":1510,"line_end":1510,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1915}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `HashSet`s.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406485,"byte_end":406551,"line_start":1503,"line_end":1503,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406552,"byte_end":406555,"line_start":1504,"line_end":1504,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`HashSet`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406556,"byte_end":406624,"line_start":1505,"line_end":1505,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406625,"byte_end":406660,"line_start":1506,"line_end":1506,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406661,"byte_end":406664,"line_start":1507,"line_end":1507,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406665,"byte_end":406701,"line_start":1508,"line_end":1508,"column_start":1,"column_end":37}},{"value":"/ [`union`]: struct.HashSet.html#method.union","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":406702,"byte_end":406749,"line_start":1509,"line_end":1509,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417868,"byte_end":417876,"line_start":1943,"line_end":1943,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::set::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" An occupied entry.","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417543,"byte_end":417565,"line_start":1930,"line_end":1930,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417570,"byte_end":417573,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417578,"byte_end":417592,"line_start":1932,"line_end":1932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417597,"byte_end":417600,"line_start":1933,"line_end":1933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417605,"byte_end":417612,"line_start":1934,"line_end":1934,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417617,"byte_end":417663,"line_start":1935,"line_end":1935,"column_start":5,"column_end":51}},{"value":"/ let mut set: HashSet<_> = [\"a\", \"b\"].into();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417668,"byte_end":417716,"line_start":1936,"line_end":1936,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417721,"byte_end":417724,"line_start":1937,"line_end":1937,"column_start":5,"column_end":8}},{"value":"/ match set.entry(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417729,"byte_end":417755,"line_start":1938,"line_end":1938,"column_start":5,"column_end":31}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417760,"byte_end":417803,"line_start":1939,"line_end":1939,"column_start":5,"column_end":48}},{"value":"/     Entry::Occupied(_) => { }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417808,"byte_end":417841,"line_start":1940,"line_end":1940,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417846,"byte_end":417851,"line_start":1941,"line_end":1941,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417856,"byte_end":417863,"line_start":1942,"line_end":1942,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418233,"byte_end":418239,"line_start":1958,"line_end":1958,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::set::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" A vacant entry.","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417911,"byte_end":417930,"line_start":1945,"line_end":1945,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417935,"byte_end":417938,"line_start":1946,"line_end":1946,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417943,"byte_end":417957,"line_start":1947,"line_end":1947,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417962,"byte_end":417965,"line_start":1948,"line_end":1948,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417970,"byte_end":417977,"line_start":1949,"line_end":1949,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417982,"byte_end":418028,"line_start":1950,"line_end":1950,"column_start":5,"column_end":51}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418033,"byte_end":418081,"line_start":1951,"line_end":1951,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418086,"byte_end":418089,"line_start":1952,"line_end":1952,"column_start":5,"column_end":8}},{"value":"/ match set.entry(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418094,"byte_end":418120,"line_start":1953,"line_end":1953,"column_start":5,"column_end":31}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418125,"byte_end":418170,"line_start":1954,"line_end":1954,"column_start":5,"column_end":50}},{"value":"/     Entry::Vacant(_) => { }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418175,"byte_end":418206,"line_start":1955,"line_end":1955,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418211,"byte_end":418216,"line_start":1956,"line_end":1956,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418221,"byte_end":418228,"line_start":1957,"line_end":1957,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417477,"byte_end":417482,"line_start":1926,"line_end":1926,"column_start":10,"column_end":15},"name":"Entry","qualname":"::set::Entry","value":"pub enum Entry<'a, T, S, A = Global> where A: Allocator + Clone {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2099}],"decl_id":null,"docs":" A view into a single entry in a set, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a set, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416341,"byte_end":416421,"line_start":1890,"line_end":1890,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416422,"byte_end":416425,"line_start":1891,"line_end":1891,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashSet`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416426,"byte_end":416498,"line_start":1892,"line_end":1892,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416499,"byte_end":416502,"line_start":1893,"line_end":1893,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416503,"byte_end":416539,"line_start":1894,"line_end":1894,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashSet.html#method.entry","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416540,"byte_end":416587,"line_start":1895,"line_end":1895,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416588,"byte_end":416591,"line_start":1896,"line_end":1896,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416592,"byte_end":416606,"line_start":1897,"line_end":1897,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416607,"byte_end":416610,"line_start":1898,"line_end":1898,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416611,"byte_end":416618,"line_start":1899,"line_end":1899,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet, OccupiedEntry};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416619,"byte_end":416680,"line_start":1900,"line_end":1900,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416681,"byte_end":416684,"line_start":1901,"line_end":1901,"column_start":1,"column_end":4}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416685,"byte_end":416718,"line_start":1902,"line_end":1902,"column_start":1,"column_end":34}},{"value":"/ set.extend([\"a\", \"b\", \"c\"]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416719,"byte_end":416751,"line_start":1903,"line_end":1903,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416752,"byte_end":416781,"line_start":1904,"line_end":1904,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416782,"byte_end":416785,"line_start":1905,"line_end":1905,"column_start":1,"column_end":4}},{"value":"/ // Existing value (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416786,"byte_end":416816,"line_start":1906,"line_end":1906,"column_start":1,"column_end":31}},{"value":"/ let entry: Entry<_, _> = set.entry(\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416817,"byte_end":416861,"line_start":1907,"line_end":1907,"column_start":1,"column_end":45}},{"value":"/ let _raw_o: OccupiedEntry<_, _> = entry.insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416862,"byte_end":416915,"line_start":1908,"line_end":1908,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416916,"byte_end":416945,"line_start":1909,"line_end":1909,"column_start":1,"column_end":30}},{"value":"/ // Nonexistent value (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416946,"byte_end":416979,"line_start":1910,"line_end":1910,"column_start":1,"column_end":34}},{"value":"/ set.entry(\"d\").insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":416980,"byte_end":417008,"line_start":1911,"line_end":1911,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417009,"byte_end":417012,"line_start":1912,"line_end":1912,"column_start":1,"column_end":4}},{"value":"/ // Existing value (or_insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417013,"byte_end":417046,"line_start":1913,"line_end":1913,"column_start":1,"column_end":34}},{"value":"/ set.entry(\"b\").or_insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417047,"byte_end":417078,"line_start":1914,"line_end":1914,"column_start":1,"column_end":32}},{"value":"/ // Nonexistent value (or_insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417079,"byte_end":417115,"line_start":1915,"line_end":1915,"column_start":1,"column_end":37}},{"value":"/ set.entry(\"e\").or_insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417116,"byte_end":417147,"line_start":1916,"line_end":1916,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417148,"byte_end":417151,"line_start":1917,"line_end":1917,"column_start":1,"column_end":4}},{"value":"/ println!(\"Our HashSet: {:?}\", set);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417152,"byte_end":417191,"line_start":1918,"line_end":1918,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417192,"byte_end":417195,"line_start":1919,"line_end":1919,"column_start":1,"column_end":4}},{"value":"/ let mut vec: Vec<_> = set.iter().copied().collect();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417196,"byte_end":417252,"line_start":1920,"line_end":1920,"column_start":1,"column_end":57}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417253,"byte_end":417321,"line_start":1921,"line_end":1921,"column_start":1,"column_end":69}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417322,"byte_end":417386,"line_start":1922,"line_end":1922,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417387,"byte_end":417411,"line_start":1923,"line_end":1923,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [\"a\", \"b\", \"c\", \"d\", \"e\"]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417412,"byte_end":417459,"line_start":1924,"line_end":1924,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":417460,"byte_end":417467,"line_start":1925,"line_end":1925,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419504,"byte_end":419517,"line_start":2006,"line_end":2006,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::set::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":2112}],"decl_id":null,"docs":" A view into an occupied entry in a `HashSet`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashSet`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418613,"byte_end":418662,"line_start":1970,"line_end":1970,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418663,"byte_end":418700,"line_start":1971,"line_end":1971,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418701,"byte_end":418704,"line_start":1972,"line_end":1972,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418705,"byte_end":418735,"line_start":1973,"line_end":1973,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418736,"byte_end":418739,"line_start":1974,"line_end":1974,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418740,"byte_end":418754,"line_start":1975,"line_end":1975,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418755,"byte_end":418758,"line_start":1976,"line_end":1976,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418759,"byte_end":418766,"line_start":1977,"line_end":1977,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet, OccupiedEntry};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418767,"byte_end":418828,"line_start":1978,"line_end":1978,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418829,"byte_end":418832,"line_start":1979,"line_end":1979,"column_start":1,"column_end":4}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418833,"byte_end":418866,"line_start":1980,"line_end":1980,"column_start":1,"column_end":34}},{"value":"/ set.extend([\"a\", \"b\", \"c\"]);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418867,"byte_end":418899,"line_start":1981,"line_end":1981,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418900,"byte_end":418903,"line_start":1982,"line_end":1982,"column_start":1,"column_end":4}},{"value":"/ let _entry_o: OccupiedEntry<_, _> = set.entry(\"a\").insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418904,"byte_end":418968,"line_start":1983,"line_end":1983,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418969,"byte_end":418998,"line_start":1984,"line_end":1984,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418999,"byte_end":419002,"line_start":1985,"line_end":1985,"column_start":1,"column_end":4}},{"value":"/ // Existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419003,"byte_end":419022,"line_start":1986,"line_end":1986,"column_start":1,"column_end":20}},{"value":"/ match set.entry(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419023,"byte_end":419049,"line_start":1987,"line_end":1987,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419050,"byte_end":419093,"line_start":1988,"line_end":1988,"column_start":1,"column_end":44}},{"value":"/     Entry::Occupied(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419094,"byte_end":419128,"line_start":1989,"line_end":1989,"column_start":1,"column_end":35}},{"value":"/         assert_eq!(view.get(), &\"a\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419129,"byte_end":419170,"line_start":1990,"line_end":1990,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419171,"byte_end":419180,"line_start":1991,"line_end":1991,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419181,"byte_end":419186,"line_start":1992,"line_end":1992,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419187,"byte_end":419190,"line_start":1993,"line_end":1993,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419191,"byte_end":419220,"line_start":1994,"line_end":1994,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419221,"byte_end":419224,"line_start":1995,"line_end":1995,"column_start":1,"column_end":4}},{"value":"/ // Existing key (take)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419225,"byte_end":419251,"line_start":1996,"line_end":1996,"column_start":1,"column_end":27}},{"value":"/ match set.entry(\"c\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419252,"byte_end":419278,"line_start":1997,"line_end":1997,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419279,"byte_end":419322,"line_start":1998,"line_end":1998,"column_start":1,"column_end":44}},{"value":"/     Entry::Occupied(view) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419323,"byte_end":419357,"line_start":1999,"line_end":1999,"column_start":1,"column_end":35}},{"value":"/         assert_eq!(view.remove(), \"c\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419358,"byte_end":419401,"line_start":2000,"line_end":2000,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419402,"byte_end":419411,"line_start":2001,"line_end":2001,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419412,"byte_end":419417,"line_start":2002,"line_end":2002,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(set.get(&\"c\"), None);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419418,"byte_end":419454,"line_start":2003,"line_end":2003,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(set.len(), 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419455,"byte_end":419484,"line_start":2004,"line_end":2004,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419485,"byte_end":419492,"line_start":2005,"line_end":2005,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2118},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420588,"byte_end":420599,"line_start":2044,"line_end":2044,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::set::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":2123}],"decl_id":null,"docs":" A view into a vacant entry in a `HashSet`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashSet`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419875,"byte_end":419921,"line_start":2018,"line_end":2018,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419922,"byte_end":419959,"line_start":2019,"line_end":2019,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419960,"byte_end":419963,"line_start":2020,"line_end":2020,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419964,"byte_end":419994,"line_start":2021,"line_end":2021,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419995,"byte_end":419998,"line_start":2022,"line_end":2022,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419999,"byte_end":420013,"line_start":2023,"line_end":2023,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420014,"byte_end":420017,"line_start":2024,"line_end":2024,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420018,"byte_end":420025,"line_start":2025,"line_end":2025,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet, VacantEntry};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420026,"byte_end":420085,"line_start":2026,"line_end":2026,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420086,"byte_end":420089,"line_start":2027,"line_end":2027,"column_start":1,"column_end":4}},{"value":"/ let mut set = HashSet::<&str>::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420090,"byte_end":420131,"line_start":2028,"line_end":2028,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420132,"byte_end":420135,"line_start":2029,"line_end":2029,"column_start":1,"column_end":4}},{"value":"/ let entry_v: VacantEntry<_, _> = match set.entry(\"a\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420136,"byte_end":420195,"line_start":2030,"line_end":2030,"column_start":1,"column_end":60}},{"value":"/     Entry::Vacant(view) => view,","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420196,"byte_end":420232,"line_start":2031,"line_end":2031,"column_start":1,"column_end":37}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420233,"byte_end":420278,"line_start":2032,"line_end":2032,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420279,"byte_end":420285,"line_start":2033,"line_end":2033,"column_start":1,"column_end":7}},{"value":"/ entry_v.insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420286,"byte_end":420307,"line_start":2034,"line_end":2034,"column_start":1,"column_end":22}},{"value":"/ assert!(set.contains(\"a\") && set.len() == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420308,"byte_end":420357,"line_start":2035,"line_end":2035,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420358,"byte_end":420361,"line_start":2036,"line_end":2036,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert)","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420362,"byte_end":420393,"line_start":2037,"line_end":2037,"column_start":1,"column_end":32}},{"value":"/ match set.entry(\"b\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420394,"byte_end":420420,"line_start":2038,"line_end":2038,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(view) => view.insert(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420421,"byte_end":420466,"line_start":2039,"line_end":2039,"column_start":1,"column_end":46}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420467,"byte_end":420512,"line_start":2040,"line_end":2040,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420513,"byte_end":420518,"line_start":2041,"line_end":2041,"column_start":1,"column_end":6}},{"value":"/ assert!(set.contains(\"b\") && set.len() == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420519,"byte_end":420568,"line_start":2042,"line_end":2042,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420569,"byte_end":420576,"line_start":2043,"line_end":2043,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421362,"byte_end":421368,"line_start":2068,"line_end":2068,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"pub fn insert(Self) -> OccupiedEntry where T: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420977,"byte_end":421039,"line_start":2055,"line_end":2055,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421044,"byte_end":421047,"line_start":2056,"line_end":2056,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421052,"byte_end":421066,"line_start":2057,"line_end":2057,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421071,"byte_end":421074,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421079,"byte_end":421086,"line_start":2059,"line_end":2059,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421091,"byte_end":421118,"line_start":2060,"line_end":2060,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421123,"byte_end":421126,"line_start":2061,"line_end":2061,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421131,"byte_end":421179,"line_start":2062,"line_end":2062,"column_start":5,"column_end":53}},{"value":"/ let entry = set.entry(\"horseyland\").insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421184,"byte_end":421233,"line_start":2063,"line_end":2063,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421238,"byte_end":421241,"line_start":2064,"line_end":2064,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.get(), &\"horseyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421246,"byte_end":421289,"line_start":2065,"line_end":2065,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421294,"byte_end":421301,"line_start":2066,"line_end":2066,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422163,"byte_end":422172,"line_start":2098,"line_end":2098,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self) where T: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting if it was vacant.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting if it was vacant.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421607,"byte_end":421673,"line_start":2079,"line_end":2079,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421678,"byte_end":421681,"line_start":2080,"line_end":2080,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421686,"byte_end":421700,"line_start":2081,"line_end":2081,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421705,"byte_end":421708,"line_start":2082,"line_end":2082,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421713,"byte_end":421720,"line_start":2083,"line_end":2083,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421725,"byte_end":421752,"line_start":2084,"line_end":2084,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421757,"byte_end":421760,"line_start":2085,"line_end":2085,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421765,"byte_end":421813,"line_start":2086,"line_end":2086,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421818,"byte_end":421821,"line_start":2087,"line_end":2087,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421826,"byte_end":421848,"line_start":2088,"line_end":2088,"column_start":5,"column_end":27}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421853,"byte_end":421892,"line_start":2089,"line_end":2089,"column_start":5,"column_end":44}},{"value":"/ assert!(set.contains(\"poneyland\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421897,"byte_end":421936,"line_start":2090,"line_end":2090,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421941,"byte_end":421944,"line_start":2091,"line_end":2091,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421949,"byte_end":421968,"line_start":2092,"line_end":2092,"column_start":5,"column_end":24}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":421973,"byte_end":422012,"line_start":2093,"line_end":2093,"column_start":5,"column_end":44}},{"value":"/ assert!(set.contains(\"poneyland\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422017,"byte_end":422056,"line_start":2094,"line_end":2094,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422061,"byte_end":422090,"line_start":2095,"line_end":2095,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422095,"byte_end":422102,"line_start":2096,"line_end":2096,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422812,"byte_end":422815,"line_start":2123,"line_end":2123,"column_start":12,"column_end":15},"name":"get","qualname":"<Entry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's value.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422330,"byte_end":422376,"line_start":2108,"line_end":2108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422381,"byte_end":422384,"line_start":2109,"line_end":2109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422389,"byte_end":422403,"line_start":2110,"line_end":2110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422408,"byte_end":422411,"line_start":2111,"line_end":2111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422416,"byte_end":422423,"line_start":2112,"line_end":2112,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422428,"byte_end":422455,"line_start":2113,"line_end":2113,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422460,"byte_end":422463,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422468,"byte_end":422516,"line_start":2115,"line_end":2115,"column_start":5,"column_end":53}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422521,"byte_end":422560,"line_start":2116,"line_end":2116,"column_start":5,"column_end":44}},{"value":"/ // existing key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422565,"byte_end":422584,"line_start":2117,"line_end":2117,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(set.entry(\"poneyland\").get(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422589,"byte_end":422648,"line_start":2118,"line_end":2118,"column_start":5,"column_end":64}},{"value":"/ // nonexistent key","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422653,"byte_end":422675,"line_start":2119,"line_end":2119,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(set.entry(\"horseland\").get(), &\"horseland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422680,"byte_end":422739,"line_start":2120,"line_end":2120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":422744,"byte_end":422751,"line_start":2121,"line_end":2121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423545,"byte_end":423548,"line_start":2148,"line_end":2148,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423046,"byte_end":423093,"line_start":2132,"line_end":2132,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423098,"byte_end":423101,"line_start":2133,"line_end":2133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423106,"byte_end":423120,"line_start":2134,"line_end":2134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423125,"byte_end":423128,"line_start":2135,"line_end":2135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423133,"byte_end":423140,"line_start":2136,"line_end":2136,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423145,"byte_end":423191,"line_start":2137,"line_end":2137,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423196,"byte_end":423199,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423204,"byte_end":423252,"line_start":2139,"line_end":2139,"column_start":5,"column_end":53}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423257,"byte_end":423296,"line_start":2140,"line_end":2140,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423301,"byte_end":423304,"line_start":2141,"line_end":2141,"column_start":5,"column_end":8}},{"value":"/ match set.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423309,"byte_end":423343,"line_start":2142,"line_end":2142,"column_start":5,"column_end":39}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423348,"byte_end":423385,"line_start":2143,"line_end":2143,"column_start":5,"column_end":42}},{"value":"/     Entry::Occupied(entry) => assert_eq!(entry.get(), &\"poneyland\"),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423390,"byte_end":423462,"line_start":2144,"line_end":2144,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423467,"byte_end":423472,"line_start":2145,"line_end":2145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423477,"byte_end":423484,"line_start":2146,"line_end":2146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424483,"byte_end":424489,"line_start":2177,"line_end":2177,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423600,"byte_end":423653,"line_start":2152,"line_end":2152,"column_start":5,"column_end":58}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423658,"byte_end":423699,"line_start":2153,"line_end":2153,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423704,"byte_end":423707,"line_start":2154,"line_end":2154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423712,"byte_end":423726,"line_start":2155,"line_end":2155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423731,"byte_end":423734,"line_start":2156,"line_end":2156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423739,"byte_end":423746,"line_start":2157,"line_end":2157,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423751,"byte_end":423778,"line_start":2158,"line_end":2158,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_set::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423783,"byte_end":423818,"line_start":2159,"line_end":2159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423823,"byte_end":423826,"line_start":2160,"line_end":2160,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423831,"byte_end":423879,"line_start":2161,"line_end":2161,"column_start":5,"column_end":53}},{"value":"/ // The set is empty","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423884,"byte_end":423907,"line_start":2162,"line_end":2162,"column_start":5,"column_end":28}},{"value":"/ assert!(set.is_empty() && set.capacity() == 0);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423912,"byte_end":423963,"line_start":2163,"line_end":2163,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423968,"byte_end":423971,"line_start":2164,"line_end":2164,"column_start":5,"column_end":8}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423976,"byte_end":424015,"line_start":2165,"line_end":2165,"column_start":5,"column_end":44}},{"value":"/ let capacity_before_remove = set.capacity();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424020,"byte_end":424068,"line_start":2166,"line_end":2166,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424073,"byte_end":424076,"line_start":2167,"line_end":2167,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = set.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424081,"byte_end":424137,"line_start":2168,"line_end":2168,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), \"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424142,"byte_end":424186,"line_start":2169,"line_end":2169,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424191,"byte_end":424196,"line_start":2170,"line_end":2170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424201,"byte_end":424204,"line_start":2171,"line_end":2171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.contains(\"poneyland\"), false);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424209,"byte_end":424258,"line_start":2172,"line_end":2172,"column_start":5,"column_end":54}},{"value":"/ // Now set hold none elements but capacity is equal to the old one","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424263,"byte_end":424333,"line_start":2173,"line_end":2173,"column_start":5,"column_end":75}},{"value":"/ assert!(set.len() == 0 && set.capacity() == capacity_before_remove);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424338,"byte_end":424410,"line_start":2174,"line_end":2174,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424415,"byte_end":424422,"line_start":2175,"line_end":2175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425743,"byte_end":425750,"line_start":2213,"line_end":2213,"column_start":12,"column_end":19},"name":"replace","qualname":"<OccupiedEntry>::replace","value":"pub fn replace(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old value. The new value in the hash map will be\n the value used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old value. The new value in the hash map will be","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424550,"byte_end":424636,"line_start":2181,"line_end":2181,"column_start":5,"column_end":91}},{"value":"/ the value used to create this entry.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424641,"byte_end":424681,"line_start":2182,"line_end":2182,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424686,"byte_end":424689,"line_start":2183,"line_end":2183,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424694,"byte_end":424706,"line_start":2184,"line_end":2184,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424711,"byte_end":424714,"line_start":2185,"line_end":2185,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424719,"byte_end":424794,"line_start":2186,"line_end":2186,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424799,"byte_end":424802,"line_start":2187,"line_end":2187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424807,"byte_end":424821,"line_start":2188,"line_end":2188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424826,"byte_end":424829,"line_start":2189,"line_end":2189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424834,"byte_end":424841,"line_start":2190,"line_end":2190,"column_start":5,"column_end":12}},{"value":"/  use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424846,"byte_end":424893,"line_start":2191,"line_end":2191,"column_start":5,"column_end":52}},{"value":"/  use std::rc::Rc;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424898,"byte_end":424919,"line_start":2192,"line_end":2192,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424924,"byte_end":424927,"line_start":2193,"line_end":2193,"column_start":5,"column_end":8}},{"value":"/  let mut set: HashSet<Rc<String>> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424932,"byte_end":424987,"line_start":2194,"line_end":2194,"column_start":5,"column_end":60}},{"value":"/  let key_one = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":424992,"byte_end":425046,"line_start":2195,"line_end":2195,"column_start":5,"column_end":59}},{"value":"/  let key_two = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425051,"byte_end":425105,"line_start":2196,"line_end":2196,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425110,"byte_end":425113,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/  set.insert(key_one.clone());","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425118,"byte_end":425151,"line_start":2198,"line_end":2198,"column_start":5,"column_end":38}},{"value":"/  assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425156,"byte_end":425237,"line_start":2199,"line_end":2199,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425242,"byte_end":425245,"line_start":2200,"line_end":2200,"column_start":5,"column_end":8}},{"value":"/  match set.entry(key_two.clone()) {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425250,"byte_end":425289,"line_start":2201,"line_end":2201,"column_start":5,"column_end":44}},{"value":"/      Entry::Occupied(entry) => {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425294,"byte_end":425330,"line_start":2202,"line_end":2202,"column_start":5,"column_end":41}},{"value":"/          let old_key: Rc<String> = entry.replace();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425335,"byte_end":425390,"line_start":2203,"line_end":2203,"column_start":5,"column_end":60}},{"value":"/          assert!(Rc::ptr_eq(&key_one, &old_key));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425395,"byte_end":425448,"line_start":2204,"line_end":2204,"column_start":5,"column_end":58}},{"value":"/      }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425453,"byte_end":425463,"line_start":2205,"line_end":2205,"column_start":5,"column_end":15}},{"value":"/      Entry::Vacant(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425468,"byte_end":425506,"line_start":2206,"line_end":2206,"column_start":5,"column_end":43}},{"value":"/  }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425511,"byte_end":425517,"line_start":2207,"line_end":2207,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425522,"byte_end":425525,"line_start":2208,"line_end":2208,"column_start":5,"column_end":8}},{"value":"/  assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425530,"byte_end":425611,"line_start":2209,"line_end":2209,"column_start":5,"column_end":86}},{"value":"/  assert!(set.contains(&\"Stringthing\".to_owned()));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425616,"byte_end":425670,"line_start":2210,"line_end":2210,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425675,"byte_end":425682,"line_start":2211,"line_end":2211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426253,"byte_end":426256,"line_start":2231,"line_end":2231,"column_start":12,"column_end":15},"name":"get","qualname":"<VacantEntry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value that would be used when inserting\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the value that would be used when inserting","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425874,"byte_end":425941,"line_start":2219,"line_end":2219,"column_start":5,"column_end":72}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425946,"byte_end":425976,"line_start":2220,"line_end":2220,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425981,"byte_end":425984,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425989,"byte_end":426003,"line_start":2222,"line_end":2222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426008,"byte_end":426011,"line_start":2223,"line_end":2223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426016,"byte_end":426023,"line_start":2224,"line_end":2224,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426028,"byte_end":426055,"line_start":2225,"line_end":2225,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426060,"byte_end":426063,"line_start":2226,"line_end":2226,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426068,"byte_end":426116,"line_start":2227,"line_end":2227,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(set.entry(\"poneyland\").get(), &\"poneyland\");","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426121,"byte_end":426180,"line_start":2228,"line_end":2228,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426185,"byte_end":426192,"line_start":2229,"line_end":2229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426746,"byte_end":426756,"line_start":2250,"line_end":2250,"column_start":12,"column_end":22},"name":"into_value","qualname":"<VacantEntry>::into_value","value":"pub fn into_value(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the value.","sig":null,"attributes":[{"value":"/ Take ownership of the value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426308,"byte_end":426340,"line_start":2235,"line_end":2235,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426345,"byte_end":426348,"line_start":2236,"line_end":2236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426353,"byte_end":426367,"line_start":2237,"line_end":2237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426372,"byte_end":426375,"line_start":2238,"line_end":2238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426380,"byte_end":426387,"line_start":2239,"line_end":2239,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426392,"byte_end":426438,"line_start":2240,"line_end":2240,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426443,"byte_end":426446,"line_start":2241,"line_end":2241,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426451,"byte_end":426499,"line_start":2242,"line_end":2242,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426504,"byte_end":426507,"line_start":2243,"line_end":2243,"column_start":5,"column_end":8}},{"value":"/ match set.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426512,"byte_end":426546,"line_start":2244,"line_end":2244,"column_start":5,"column_end":39}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426551,"byte_end":426590,"line_start":2245,"line_end":2245,"column_start":5,"column_end":44}},{"value":"/     Entry::Vacant(v) => assert_eq!(v.into_value(), \"poneyland\"),","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426595,"byte_end":426663,"line_start":2246,"line_end":2246,"column_start":5,"column_end":73}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426668,"byte_end":426673,"line_start":2247,"line_end":2247,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426678,"byte_end":426685,"line_start":2248,"line_end":2248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":427270,"byte_end":427276,"line_start":2270,"line_end":2270,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self) where T: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's value.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426811,"byte_end":426872,"line_start":2254,"line_end":2254,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426877,"byte_end":426880,"line_start":2255,"line_end":2255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426885,"byte_end":426899,"line_start":2256,"line_end":2256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426904,"byte_end":426907,"line_start":2257,"line_end":2257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426912,"byte_end":426919,"line_start":2258,"line_end":2258,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426924,"byte_end":426951,"line_start":2259,"line_end":2259,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_set::Entry;","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426956,"byte_end":426991,"line_start":2260,"line_end":2260,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":426996,"byte_end":426999,"line_start":2261,"line_end":2261,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":427004,"byte_end":427052,"line_start":2262,"line_end":2262,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":427057,"byte_end":427060,"line_start":2263,"line_end":2263,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = set.entry(\"poneyland\") {","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":427065,"byte_end":427119,"line_start":2264,"line_end":2264,"column_start":5,"column_end":59}},{"value":"/     o.insert();","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":427124,"byte_end":427143,"line_start":2265,"line_end":2265,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":427148,"byte_end":427153,"line_start":2266,"line_end":2266,"column_start":5,"column_end":10}},{"value":"/ assert!(set.contains(\"poneyland\"));","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":427158,"byte_end":427197,"line_start":2267,"line_end":2267,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":427202,"byte_end":427209,"line_start":2268,"line_end":2268,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":2251,"byte_end":2259,"line_start":85,"line_end":85,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2182}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":2266,"byte_end":2332,"line_start":86,"line_end":86,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":2806,"byte_end":2814,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2184}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":2821,"byte_end":2887,"line_start":103,"line_end":103,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3566,"byte_end":3582,"line_start":125,"line_end":125,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::TryReserveError::CapacityOverflow","value":"TryReserveError::CapacityOverflow","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[{"value":"/ Error due to the computed capacity exceeding the collection's maximum","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3450,"byte_end":3523,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ (usually `isize::MAX` bytes).","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3528,"byte_end":3561,"line_start":124,"line_end":124,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3636,"byte_end":3646,"line_start":128,"line_end":128,"column_start":5,"column_end":15},"name":"AllocError","qualname":"::TryReserveError::AllocError","value":"TryReserveError::AllocError { layout }","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" The memory allocator returned an error\n","sig":null,"attributes":[{"value":"/ The memory allocator returned an error","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3589,"byte_end":3631,"line_start":127,"line_end":127,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3428,"byte_end":3443,"line_start":122,"line_end":122,"column_start":10,"column_end":25},"name":"TryReserveError","qualname":"::TryReserveError","value":"pub enum TryReserveError {\n    CapacityOverflow,\n    AllocError {\n            layout: alloc::alloc::Layout,\n        },\n}","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2265}],"decl_id":null,"docs":" The error type for `try_reserve` methods.\n","sig":null,"attributes":[{"value":"/ The error type for `try_reserve` methods.","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\lib.rs","byte_start":3334,"byte_end":3379,"line_start":120,"line_end":120,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\sse2.rs","byte_start":11220775,"byte_end":11220780,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":95062,"byte_end":95068,"line_start":44,"line_end":44,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":95402,"byte_end":95408,"line_start":54,"line_end":54,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\bitmask.rs","byte_start":96784,"byte_end":96791,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\bitmask.rs","byte_start":99405,"byte_end":99412,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\bitmask.rs","byte_start":99699,"byte_end":99710,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":8654,"byte_end":8665,"line_start":84,"line_end":84,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":11359,"byte_end":11367,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":13860,"byte_end":13871,"line_start":231,"line_end":231,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15776,"byte_end":15782,"line_start":283,"line_end":283,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15808,"byte_end":15814,"line_start":285,"line_end":285,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15912,"byte_end":15918,"line_start":292,"line_end":292,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":18710,"byte_end":18718,"line_start":387,"line_end":387,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19804,"byte_end":19812,"line_start":415,"line_end":415,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":257},{"krate":0,"index":262},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":42323,"byte_end":42331,"line_start":1028,"line_end":1028,"column_start":47,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":42420,"byte_end":42428,"line_start":1034,"line_end":1034,"column_start":47,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":42480,"byte_end":42493,"line_start":1041,"line_end":1041,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":42879,"byte_end":42892,"line_start":1055,"line_end":1055,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":63535,"byte_end":63543,"line_start":1599,"line_end":1599,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":66181,"byte_end":66189,"line_start":1668,"line_end":1668,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":67087,"byte_end":67095,"line_start":1693,"line_end":1693,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":70643,"byte_end":70651,"line_start":1782,"line_end":1782,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":71176,"byte_end":71184,"line_start":1802,"line_end":1802,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":71489,"byte_end":71497,"line_start":1814,"line_end":1814,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":72348,"byte_end":72360,"line_start":1845,"line_end":1845,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":76396,"byte_end":76408,"line_start":1940,"line_end":1940,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":76439,"byte_end":76451,"line_start":1941,"line_end":1941,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":76477,"byte_end":76489,"line_start":1943,"line_end":1943,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":76779,"byte_end":76791,"line_start":1955,"line_end":1955,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77521,"byte_end":77533,"line_start":1980,"line_end":1980,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78428,"byte_end":78435,"line_start":1999,"line_end":1999,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":84562,"byte_end":84569,"line_start":2125,"line_end":2125,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":84777,"byte_end":84784,"line_start":2135,"line_end":2135,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85490,"byte_end":85497,"line_start":2164,"line_end":2164,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85530,"byte_end":85537,"line_start":2165,"line_end":2165,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85806,"byte_end":85817,"line_start":2175,"line_end":2175,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85995,"byte_end":86006,"line_start":2182,"line_end":2182,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":86095,"byte_end":86106,"line_start":2188,"line_end":2188,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":86677,"byte_end":86688,"line_start":2211,"line_end":2211,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":87088,"byte_end":87099,"line_start":2226,"line_end":2226,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":87429,"byte_end":87440,"line_start":2240,"line_end":2240,"column_start":53,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":87498,"byte_end":87509,"line_start":2241,"line_end":2241,"column_start":49,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88114,"byte_end":88122,"line_start":2258,"line_end":2258,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88303,"byte_end":88311,"line_start":2265,"line_end":2265,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88403,"byte_end":88411,"line_start":2271,"line_end":2271,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88498,"byte_end":88506,"line_start":2278,"line_end":2278,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89111,"byte_end":89119,"line_start":2297,"line_end":2297,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89502,"byte_end":89510,"line_start":2314,"line_end":2314,"column_start":53,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89572,"byte_end":89580,"line_start":2315,"line_end":2315,"column_start":49,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":90376,"byte_end":90387,"line_start":2342,"line_end":2342,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":90703,"byte_end":90719,"line_start":2352,"line_end":2352,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":91335,"byte_end":91346,"line_start":2373,"line_end":2373,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":91664,"byte_end":91680,"line_start":2386,"line_end":2386,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":107015,"byte_end":107022,"line_start":193,"line_end":193,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":111832,"byte_end":111839,"line_start":351,"line_end":351,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114620,"byte_end":114627,"line_start":427,"line_end":427,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131864,"byte_end":131871,"line_start":983,"line_end":983,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":683},{"krate":0,"index":690},{"krate":0,"index":697},{"krate":0,"index":704},{"krate":0,"index":710},{"krate":0,"index":716},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160565,"byte_end":160572,"line_start":1864,"line_end":1864,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169225,"byte_end":169232,"line_start":2078,"line_end":2078,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169585,"byte_end":169592,"line_start":2095,"line_end":2095,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169718,"byte_end":169725,"line_start":2104,"line_end":2104,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169953,"byte_end":169960,"line_start":2115,"line_end":2115,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":170834,"byte_end":170841,"line_start":2141,"line_end":2141,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173184,"byte_end":173188,"line_start":2227,"line_end":2227,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173426,"byte_end":173430,"line_start":2237,"line_end":2237,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174836,"byte_end":174843,"line_start":2279,"line_end":2279,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174869,"byte_end":174876,"line_start":2281,"line_end":2281,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176378,"byte_end":176386,"line_start":2326,"line_end":2326,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177740,"byte_end":177748,"line_start":2370,"line_end":2370,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178041,"byte_end":178049,"line_start":2383,"line_end":2383,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178189,"byte_end":178197,"line_start":2390,"line_end":2390,"column_start":52,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178273,"byte_end":178281,"line_start":2392,"line_end":2392,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179569,"byte_end":179579,"line_start":2432,"line_end":2432,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179872,"byte_end":179882,"line_start":2445,"line_end":2445,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180022,"byte_end":180032,"line_start":2452,"line_end":2452,"column_start":52,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180101,"byte_end":180111,"line_start":2454,"line_end":2454,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181285,"byte_end":181289,"line_start":2495,"line_end":2495,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181487,"byte_end":181491,"line_start":2504,"line_end":2504,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182655,"byte_end":182661,"line_start":2543,"line_end":2543,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182861,"byte_end":182867,"line_start":2552,"line_end":2552,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184070,"byte_end":184075,"line_start":2590,"line_end":2590,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185623,"byte_end":185634,"line_start":2640,"line_end":2640,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":186057,"byte_end":186073,"line_start":2657,"line_end":2657,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":186227,"byte_end":186238,"line_start":2664,"line_end":2664,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":186638,"byte_end":186649,"line_start":2682,"line_end":2682,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":186943,"byte_end":186959,"line_start":2690,"line_end":2690,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196327,"byte_end":196346,"line_start":2979,"line_end":2979,"column_start":34,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196478,"byte_end":196497,"line_start":2987,"line_end":2987,"column_start":34,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199669,"byte_end":199687,"line_start":3087,"line_end":3087,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201598,"byte_end":201616,"line_start":3146,"line_end":3146,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203415,"byte_end":203430,"line_start":3197,"line_end":3197,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206479,"byte_end":206490,"line_start":3292,"line_end":3292,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212363,"byte_end":212382,"line_start":3486,"line_end":3486,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225316,"byte_end":225333,"line_start":3885,"line_end":3885,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":229938,"byte_end":229956,"line_start":4031,"line_end":4031,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":230158,"byte_end":230169,"line_start":4037,"line_end":4037,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":230528,"byte_end":230547,"line_start":4046,"line_end":4046,"column_start":61,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":230830,"byte_end":230847,"line_start":4055,"line_end":4055,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231037,"byte_end":231052,"line_start":4061,"line_end":4061,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233552,"byte_end":233557,"line_start":4145,"line_end":4145,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235126,"byte_end":235139,"line_start":4201,"line_end":4201,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235271,"byte_end":235284,"line_start":4209,"line_end":4209,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235444,"byte_end":235457,"line_start":4218,"line_end":4218,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236696,"byte_end":236707,"line_start":4263,"line_end":4263,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239741,"byte_end":239749,"line_start":4357,"line_end":4357,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240144,"byte_end":240152,"line_start":4372,"line_end":4372,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240419,"byte_end":240427,"line_start":4384,"line_end":4384,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242056,"byte_end":242072,"line_start":4441,"line_end":4441,"column_start":45,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242244,"byte_end":242260,"line_start":4450,"line_end":4450,"column_start":45,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242476,"byte_end":242492,"line_start":4461,"line_end":4461,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243846,"byte_end":243860,"line_start":4508,"line_end":4508,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":245199,"byte_end":245212,"line_start":4546,"line_end":4546,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":245579,"byte_end":245592,"line_start":4557,"line_end":4557,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":248248,"byte_end":248255,"line_start":4639,"line_end":4639,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":249229,"byte_end":249233,"line_start":4669,"line_end":4669,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":249804,"byte_end":249808,"line_start":4688,"line_end":4688,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":249962,"byte_end":249966,"line_start":4695,"line_end":4695,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":250009,"byte_end":250016,"line_start":4697,"line_end":4697,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":250599,"byte_end":250606,"line_start":4716,"line_end":4716,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":250759,"byte_end":250766,"line_start":4722,"line_end":4722,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":250807,"byte_end":250814,"line_start":4724,"line_end":4724,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251042,"byte_end":251050,"line_start":4734,"line_end":4734,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251406,"byte_end":251414,"line_start":4746,"line_end":4746,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251588,"byte_end":251596,"line_start":4752,"line_end":4752,"column_start":52,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251672,"byte_end":251680,"line_start":4754,"line_end":4754,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251845,"byte_end":251849,"line_start":4760,"line_end":4760,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":252321,"byte_end":252325,"line_start":4776,"line_end":4776,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":252478,"byte_end":252482,"line_start":4782,"line_end":4782,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":252525,"byte_end":252531,"line_start":4784,"line_end":4784,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253003,"byte_end":253009,"line_start":4800,"line_end":4800,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253162,"byte_end":253168,"line_start":4806,"line_end":4806,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253211,"byte_end":253220,"line_start":4808,"line_end":4808,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253700,"byte_end":253709,"line_start":4824,"line_end":4824,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253862,"byte_end":253871,"line_start":4830,"line_end":4830,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253919,"byte_end":253928,"line_start":4832,"line_end":4832,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":254168,"byte_end":254173,"line_start":4840,"line_end":4840,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":254533,"byte_end":254538,"line_start":4852,"line_end":4852,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":254716,"byte_end":254721,"line_start":4858,"line_end":4858,"column_start":52,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":254768,"byte_end":254773,"line_start":4860,"line_end":4860,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255024,"byte_end":255029,"line_start":4871,"line_end":4871,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262404,"byte_end":262409,"line_start":5118,"line_end":5118,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263371,"byte_end":263384,"line_start":5151,"line_end":5151,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":274849,"byte_end":274860,"line_start":5508,"line_end":5508,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277212,"byte_end":277220,"line_start":5595,"line_end":5595,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284915,"byte_end":284923,"line_start":5846,"line_end":5846,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285949,"byte_end":285965,"line_start":5879,"line_end":5879,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297454,"byte_end":297468,"line_start":6237,"line_end":6237,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":300101,"byte_end":300108,"line_start":6333,"line_end":6333,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":300752,"byte_end":300759,"line_start":6353,"line_end":6353,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":303715,"byte_end":303722,"line_start":6436,"line_end":6436,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":306047,"byte_end":306054,"line_start":6501,"line_end":6501,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\scopeguard.rs","byte_start":359779,"byte_end":359789,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\scopeguard.rs","byte_start":359942,"byte_end":359952,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\scopeguard.rs","byte_start":360096,"byte_end":360106,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":364390,"byte_end":364397,"line_start":119,"line_end":119,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":366959,"byte_end":366966,"line_start":211,"line_end":211,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371516,"byte_end":371523,"line_start":385,"line_end":385,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373975,"byte_end":373982,"line_start":453,"line_end":453,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376764,"byte_end":376771,"line_start":538,"line_end":538,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397001,"byte_end":397008,"line_start":1147,"line_end":1147,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397288,"byte_end":397295,"line_start":1162,"line_end":1162,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397409,"byte_end":397416,"line_start":1170,"line_end":1170,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397648,"byte_end":397655,"line_start":1180,"line_end":1180,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397812,"byte_end":397819,"line_start":1189,"line_end":1189,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":398731,"byte_end":398738,"line_start":1224,"line_end":1224,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":399336,"byte_end":399343,"line_start":1248,"line_end":1248,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":399940,"byte_end":399947,"line_start":1272,"line_end":1272,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":407170,"byte_end":407177,"line_start":1524,"line_end":1524,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408061,"byte_end":408065,"line_start":1556,"line_end":1556,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408249,"byte_end":408253,"line_start":1564,"line_end":1564,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408582,"byte_end":408586,"line_start":1576,"line_end":1576,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408732,"byte_end":408736,"line_start":1582,"line_end":1582,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408783,"byte_end":408787,"line_start":1584,"line_end":1584,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408966,"byte_end":408974,"line_start":1590,"line_end":1590,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":409451,"byte_end":409459,"line_start":1606,"line_end":1606,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":409626,"byte_end":409634,"line_start":1612,"line_end":1612,"column_start":49,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":409702,"byte_end":409710,"line_start":1614,"line_end":1614,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":409949,"byte_end":409954,"line_start":1621,"line_end":1621,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":410435,"byte_end":410440,"line_start":1637,"line_end":1637,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":410611,"byte_end":410616,"line_start":1643,"line_end":1643,"column_start":49,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":410688,"byte_end":410693,"line_start":1645,"line_end":1645,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":410939,"byte_end":410950,"line_start":1652,"line_end":1652,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":411286,"byte_end":411297,"line_start":1666,"line_end":1666,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":411739,"byte_end":411750,"line_start":1685,"line_end":1685,"column_start":52,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":411843,"byte_end":411855,"line_start":1690,"line_end":1690,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":412080,"byte_end":412092,"line_start":1700,"line_end":1700,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":412662,"byte_end":412674,"line_start":1725,"line_end":1725,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":412931,"byte_end":412943,"line_start":1736,"line_end":1736,"column_start":33,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":413075,"byte_end":413085,"line_start":1744,"line_end":1744,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":413308,"byte_end":413318,"line_start":1754,"line_end":1754,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":413892,"byte_end":413902,"line_start":1779,"line_end":1779,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":414020,"byte_end":414030,"line_start":1787,"line_end":1787,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":414298,"byte_end":414317,"line_start":1798,"line_end":1798,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":414529,"byte_end":414548,"line_start":1807,"line_end":1807,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":414952,"byte_end":414971,"line_start":1825,"line_end":1825,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415089,"byte_end":415108,"line_start":1833,"line_end":1833,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415376,"byte_end":415381,"line_start":1844,"line_end":1844,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415580,"byte_end":415585,"line_start":1853,"line_end":1853,"column_start":33,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415703,"byte_end":415708,"line_start":1861,"line_end":1861,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415964,"byte_end":415969,"line_start":1872,"line_end":1872,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418330,"byte_end":418335,"line_start":1961,"line_end":1961,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419672,"byte_end":419685,"line_start":2010,"line_end":2010,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420752,"byte_end":420763,"line_start":2048,"line_end":2048,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420952,"byte_end":420957,"line_start":2054,"line_end":2054,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423013,"byte_end":423026,"line_start":2131,"line_end":2131,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425843,"byte_end":425854,"line_start":2218,"line_end":2218,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\sse2.rs","byte_start":11220775,"byte_end":11220780,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":95062,"byte_end":95068,"line_start":44,"line_end":44,"column_start":31,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2235},"to":{"krate":0,"index":73}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\alloc.rs","byte_start":95402,"byte_end":95408,"line_start":54,"line_end":54,"column_start":22,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2235},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\bitmask.rs","byte_start":96784,"byte_end":96791,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\bitmask.rs","byte_start":99405,"byte_end":99412,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2240},"to":{"krate":1,"index":7790}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\bitmask.rs","byte_start":99699,"byte_end":99710,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":117},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":8654,"byte_end":8665,"line_start":84,"line_end":84,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":11359,"byte_end":11367,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":13860,"byte_end":13871,"line_start":231,"line_end":231,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15776,"byte_end":15782,"line_start":283,"line_end":283,"column_start":25,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15808,"byte_end":15814,"line_start":285,"line_end":285,"column_start":19,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":15912,"byte_end":15918,"line_start":292,"line_end":292,"column_start":9,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":18710,"byte_end":18718,"line_start":387,"line_end":387,"column_start":9,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":19804,"byte_end":19812,"line_start":415,"line_end":415,"column_start":31,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":42323,"byte_end":42331,"line_start":1028,"line_end":1028,"column_start":47,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":183},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":42420,"byte_end":42428,"line_start":1034,"line_end":1034,"column_start":47,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":183},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":42480,"byte_end":42493,"line_start":1041,"line_end":1041,"column_start":9,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":42879,"byte_end":42892,"line_start":1055,"line_end":1055,"column_start":28,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":63535,"byte_end":63543,"line_start":1599,"line_end":1599,"column_start":48,"column_end":56},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":183},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":66181,"byte_end":66189,"line_start":1668,"line_end":1668,"column_start":56,"column_end":64},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":183},"to":{"krate":0,"index":331}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":67087,"byte_end":67095,"line_start":1693,"line_end":1693,"column_start":38,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":70643,"byte_end":70651,"line_start":1782,"line_end":1782,"column_start":53,"column_end":61},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":183},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":71176,"byte_end":71184,"line_start":1802,"line_end":1802,"column_start":40,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":183},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":71489,"byte_end":71497,"line_start":1814,"line_end":1814,"column_start":48,"column_end":56},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":183},"to":{"krate":1,"index":7790}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":72348,"byte_end":72360,"line_start":1845,"line_end":1845,"column_start":9,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":76396,"byte_end":76408,"line_start":1940,"line_end":1940,"column_start":25,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":360},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":76439,"byte_end":76451,"line_start":1941,"line_end":1941,"column_start":25,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":360},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":76477,"byte_end":76489,"line_start":1943,"line_end":1943,"column_start":19,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":360},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":76779,"byte_end":76791,"line_start":1955,"line_end":1955,"column_start":22,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":360},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":77521,"byte_end":77533,"line_start":1980,"line_end":1980,"column_start":27,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":360},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":78428,"byte_end":78435,"line_start":1999,"line_end":1999,"column_start":9,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":84562,"byte_end":84569,"line_start":2125,"line_end":2125,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":386},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":84777,"byte_end":84784,"line_start":2135,"line_end":2135,"column_start":22,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":386},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85490,"byte_end":85497,"line_start":2164,"line_end":2164,"column_start":31,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":386},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85530,"byte_end":85537,"line_start":2165,"line_end":2165,"column_start":27,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":386},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85806,"byte_end":85817,"line_start":2175,"line_end":2175,"column_start":31,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":85995,"byte_end":86006,"line_start":2182,"line_end":2182,"column_start":47,"column_end":58},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":86095,"byte_end":86106,"line_start":2188,"line_end":2188,"column_start":47,"column_end":58},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":86677,"byte_end":86688,"line_start":2211,"line_end":2211,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":87088,"byte_end":87099,"line_start":2226,"line_end":2226,"column_start":44,"column_end":55},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":87429,"byte_end":87440,"line_start":2240,"line_end":2240,"column_start":53,"column_end":64},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":87498,"byte_end":87509,"line_start":2241,"line_end":2241,"column_start":49,"column_end":60},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88114,"byte_end":88122,"line_start":2258,"line_end":2258,"column_start":31,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88303,"byte_end":88311,"line_start":2265,"line_end":2265,"column_start":46,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":442},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88403,"byte_end":88411,"line_start":2271,"line_end":2271,"column_start":46,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":442},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":88498,"byte_end":88506,"line_start":2278,"line_end":2278,"column_start":40,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":442},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89111,"byte_end":89119,"line_start":2297,"line_end":2297,"column_start":44,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":442},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89502,"byte_end":89510,"line_start":2314,"line_end":2314,"column_start":53,"column_end":61},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":442},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":89572,"byte_end":89580,"line_start":2315,"line_end":2315,"column_start":49,"column_end":57},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":442},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":90376,"byte_end":90387,"line_start":2342,"line_end":2342,"column_start":35,"column_end":46},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":90703,"byte_end":90719,"line_start":2352,"line_end":2352,"column_start":32,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":91335,"byte_end":91346,"line_start":2373,"line_end":2373,"column_start":48,"column_end":59},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":476},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\raw\\mod.rs","byte_start":91664,"byte_end":91680,"line_start":2386,"line_end":2386,"column_start":45,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":482},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":107015,"byte_end":107022,"line_start":193,"line_end":193,"column_start":68,"column_end":75},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":111832,"byte_end":111839,"line_start":351,"line_end":351,"column_start":15,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":114620,"byte_end":114627,"line_start":427,"line_end":427,"column_start":37,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":131864,"byte_end":131871,"line_start":983,"line_end":983,"column_start":18,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":160565,"byte_end":160572,"line_start":1864,"line_end":1864,"column_start":37,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169225,"byte_end":169232,"line_start":2078,"line_end":2078,"column_start":32,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169585,"byte_end":169592,"line_start":2095,"line_end":2095,"column_start":25,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169718,"byte_end":169725,"line_start":2104,"line_end":2104,"column_start":28,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":169953,"byte_end":169960,"line_start":2115,"line_end":2115,"column_start":30,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":170834,"byte_end":170841,"line_start":2141,"line_end":2141,"column_start":43,"column_end":50},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":3361}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173184,"byte_end":173188,"line_start":2227,"line_end":2227,"column_start":22,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":173426,"byte_end":173430,"line_start":2237,"line_end":2237,"column_start":41,"column_end":45},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174836,"byte_end":174843,"line_start":2279,"line_end":2279,"column_start":40,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":174869,"byte_end":174876,"line_start":2281,"line_end":2281,"column_start":12,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":176378,"byte_end":176386,"line_start":2326,"line_end":2326,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":177740,"byte_end":177748,"line_start":2370,"line_end":2370,"column_start":47,"column_end":55},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":807},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178041,"byte_end":178049,"line_start":2383,"line_end":2383,"column_start":56,"column_end":64},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":807},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178189,"byte_end":178197,"line_start":2390,"line_end":2390,"column_start":52,"column_end":60},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":807},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":178273,"byte_end":178281,"line_start":2392,"line_end":2392,"column_start":63,"column_end":71},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":807},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179569,"byte_end":179579,"line_start":2432,"line_end":2432,"column_start":47,"column_end":57},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":835},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":179872,"byte_end":179882,"line_start":2445,"line_end":2445,"column_start":56,"column_end":66},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":835},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180022,"byte_end":180032,"line_start":2452,"line_end":2452,"column_start":52,"column_end":62},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":835},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":180101,"byte_end":180111,"line_start":2454,"line_end":2454,"column_start":56,"column_end":66},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":835},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181285,"byte_end":181289,"line_start":2495,"line_end":2495,"column_start":22,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":181487,"byte_end":181491,"line_start":2504,"line_end":2504,"column_start":34,"column_end":38},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182655,"byte_end":182661,"line_start":2543,"line_end":2543,"column_start":22,"column_end":28},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":182861,"byte_end":182867,"line_start":2552,"line_end":2552,"column_start":34,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":184070,"byte_end":184075,"line_start":2590,"line_end":2590,"column_start":34,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":185623,"byte_end":185634,"line_start":2640,"line_end":2640,"column_start":31,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":186057,"byte_end":186073,"line_start":2657,"line_end":2657,"column_start":28,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":915},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":186227,"byte_end":186238,"line_start":2664,"line_end":2664,"column_start":31,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":186638,"byte_end":186649,"line_start":2682,"line_end":2682,"column_start":33,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":186943,"byte_end":186959,"line_start":2690,"line_end":2690,"column_start":34,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196327,"byte_end":196346,"line_start":2979,"line_end":2979,"column_start":34,"column_end":53},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":972},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":196478,"byte_end":196497,"line_start":2987,"line_end":2987,"column_start":34,"column_end":53},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":972},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":199669,"byte_end":199687,"line_start":3087,"line_end":3087,"column_start":41,"column_end":59},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":201598,"byte_end":201616,"line_start":3146,"line_end":3146,"column_start":41,"column_end":59},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":203415,"byte_end":203430,"line_start":3197,"line_end":3197,"column_start":41,"column_end":56},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":206479,"byte_end":206490,"line_start":3292,"line_end":3292,"column_start":41,"column_end":52},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":212363,"byte_end":212382,"line_start":3486,"line_end":3486,"column_start":41,"column_end":60},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":225316,"byte_end":225333,"line_start":3885,"line_end":3885,"column_start":41,"column_end":58},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":229938,"byte_end":229956,"line_start":4031,"line_end":4031,"column_start":47,"column_end":65},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":953},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":230158,"byte_end":230169,"line_start":4037,"line_end":4037,"column_start":61,"column_end":72},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":960},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":230528,"byte_end":230547,"line_start":4046,"line_end":4046,"column_start":61,"column_end":80},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":972},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":230830,"byte_end":230847,"line_start":4055,"line_end":4055,"column_start":47,"column_end":64},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":991},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":231037,"byte_end":231052,"line_start":4061,"line_end":4061,"column_start":47,"column_end":62},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":999},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":233552,"byte_end":233557,"line_start":4145,"line_end":4145,"column_start":61,"column_end":66},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1123},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235126,"byte_end":235139,"line_start":4201,"line_end":4201,"column_start":34,"column_end":47},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1141},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235271,"byte_end":235284,"line_start":4209,"line_end":4209,"column_start":34,"column_end":47},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1141},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":235444,"byte_end":235457,"line_start":4218,"line_end":4218,"column_start":61,"column_end":74},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1141},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":236696,"byte_end":236707,"line_start":4263,"line_end":4263,"column_start":54,"column_end":65},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1167},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":239741,"byte_end":239749,"line_start":4357,"line_end":4357,"column_start":9,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1182},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240144,"byte_end":240152,"line_start":4372,"line_end":4372,"column_start":24,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":240419,"byte_end":240427,"line_start":4384,"line_end":4384,"column_start":48,"column_end":56},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1203},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242056,"byte_end":242072,"line_start":4441,"line_end":4441,"column_start":45,"column_end":61},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":3057}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242244,"byte_end":242260,"line_start":4450,"line_end":4450,"column_start":45,"column_end":61},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":3069}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":242476,"byte_end":242492,"line_start":4461,"line_end":4461,"column_start":9,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":243846,"byte_end":243860,"line_start":4508,"line_end":4508,"column_start":9,"column_end":23},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1258},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":245199,"byte_end":245212,"line_start":4546,"line_end":4546,"column_start":61,"column_end":74},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1276},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":245579,"byte_end":245592,"line_start":4557,"line_end":4557,"column_start":9,"column_end":22},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1276},"to":{"krate":1,"index":9692}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":248248,"byte_end":248255,"line_start":4639,"line_end":4639,"column_start":54,"column_end":61},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":7790}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":249229,"byte_end":249233,"line_start":4669,"line_end":4669,"column_start":29,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":249804,"byte_end":249808,"line_start":4688,"line_end":4688,"column_start":34,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":249962,"byte_end":249966,"line_start":4695,"line_end":4695,"column_start":30,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":250009,"byte_end":250016,"line_start":4697,"line_end":4697,"column_start":29,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":250599,"byte_end":250606,"line_start":4716,"line_end":4716,"column_start":34,"column_end":41},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":250759,"byte_end":250766,"line_start":4722,"line_end":4722,"column_start":30,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":250807,"byte_end":250814,"line_start":4724,"line_end":4724,"column_start":27,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251042,"byte_end":251050,"line_start":4734,"line_end":4734,"column_start":47,"column_end":55},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251406,"byte_end":251414,"line_start":4746,"line_end":4746,"column_start":56,"column_end":64},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251588,"byte_end":251596,"line_start":4752,"line_end":4752,"column_start":52,"column_end":60},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251672,"byte_end":251680,"line_start":4754,"line_end":4754,"column_start":63,"column_end":71},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":251845,"byte_end":251849,"line_start":4760,"line_end":4760,"column_start":29,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":252321,"byte_end":252325,"line_start":4776,"line_end":4776,"column_start":34,"column_end":38},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":252478,"byte_end":252482,"line_start":4782,"line_end":4782,"column_start":30,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":252525,"byte_end":252531,"line_start":4784,"line_end":4784,"column_start":29,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253003,"byte_end":253009,"line_start":4800,"line_end":4800,"column_start":34,"column_end":40},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253162,"byte_end":253168,"line_start":4806,"line_end":4806,"column_start":30,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253211,"byte_end":253220,"line_start":4808,"line_end":4808,"column_start":29,"column_end":38},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":948},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253700,"byte_end":253709,"line_start":4824,"line_end":4824,"column_start":34,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":948},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253862,"byte_end":253871,"line_start":4830,"line_end":4830,"column_start":30,"column_end":39},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":948},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":253919,"byte_end":253928,"line_start":4832,"line_end":4832,"column_start":34,"column_end":43},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":948},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":254168,"byte_end":254173,"line_start":4840,"line_end":4840,"column_start":51,"column_end":56},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":254533,"byte_end":254538,"line_start":4852,"line_end":4852,"column_start":56,"column_end":61},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":254716,"byte_end":254721,"line_start":4858,"line_end":4858,"column_start":52,"column_end":57},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":254768,"byte_end":254773,"line_start":4860,"line_end":4860,"column_start":30,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":255024,"byte_end":255029,"line_start":4871,"line_end":4871,"column_start":41,"column_end":46},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":262404,"byte_end":262409,"line_start":5118,"line_end":5118,"column_start":50,"column_end":55},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":263371,"byte_end":263384,"line_start":5151,"line_end":5151,"column_start":41,"column_end":54},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":274849,"byte_end":274860,"line_start":5508,"line_end":5508,"column_start":41,"column_end":52},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":277212,"byte_end":277220,"line_start":5595,"line_end":5595,"column_start":56,"column_end":64},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":284915,"byte_end":284923,"line_start":5846,"line_end":5846,"column_start":65,"column_end":73},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":285949,"byte_end":285965,"line_start":5879,"line_end":5879,"column_start":56,"column_end":72},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":297454,"byte_end":297468,"line_start":6237,"line_end":6237,"column_start":56,"column_end":70},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":300101,"byte_end":300108,"line_start":6333,"line_end":6333,"column_start":43,"column_end":50},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":7786}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":300752,"byte_end":300759,"line_start":6353,"line_end":6353,"column_start":37,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":7799}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":303715,"byte_end":303722,"line_start":6436,"line_end":6436,"column_start":49,"column_end":56},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":7799}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\map.rs","byte_start":306047,"byte_end":306054,"line_start":6501,"line_end":6501,"column_start":45,"column_end":52},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":7799}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\scopeguard.rs","byte_start":359779,"byte_end":359789,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1630},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\scopeguard.rs","byte_start":359942,"byte_end":359952,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1630},"to":{"krate":1,"index":3289}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\scopeguard.rs","byte_start":360096,"byte_end":360106,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1630},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":364390,"byte_end":364397,"line_start":119,"line_end":119,"column_start":58,"column_end":65},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":366959,"byte_end":366966,"line_start":211,"line_end":211,"column_start":34,"column_end":41},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":371516,"byte_end":371523,"line_start":385,"line_end":385,"column_start":12,"column_end":19},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":373975,"byte_end":373982,"line_start":453,"line_end":453,"column_start":15,"column_end":22},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":376764,"byte_end":376771,"line_start":538,"line_end":538,"column_start":15,"column_end":22},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397001,"byte_end":397008,"line_start":1147,"line_end":1147,"column_start":29,"column_end":36},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":2709}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397288,"byte_end":397295,"line_start":1162,"line_end":1162,"column_start":22,"column_end":29},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397409,"byte_end":397416,"line_start":1170,"line_end":1170,"column_start":30,"column_end":37},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397648,"byte_end":397655,"line_start":1180,"line_end":1180,"column_start":46,"column_end":53},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":397812,"byte_end":397819,"line_start":1189,"line_end":1189,"column_start":35,"column_end":42},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":7786}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":398731,"byte_end":398738,"line_start":1224,"line_end":1224,"column_start":29,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":7799}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":399336,"byte_end":399343,"line_start":1248,"line_end":1248,"column_start":37,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":7799}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":399940,"byte_end":399947,"line_start":1272,"line_end":1272,"column_start":27,"column_end":34},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":3035}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":407170,"byte_end":407177,"line_start":1524,"line_end":1524,"column_start":51,"column_end":58},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1723},"to":{"krate":1,"index":7790}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408061,"byte_end":408065,"line_start":1556,"line_end":1556,"column_start":19,"column_end":23},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1870},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408249,"byte_end":408253,"line_start":1564,"line_end":1564,"column_start":26,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1870},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408582,"byte_end":408586,"line_start":1576,"line_end":1576,"column_start":35,"column_end":39},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1870},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408732,"byte_end":408736,"line_start":1582,"line_end":1582,"column_start":27,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1870},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408783,"byte_end":408787,"line_start":1584,"line_end":1584,"column_start":36,"column_end":40},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1870},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":408966,"byte_end":408974,"line_start":1590,"line_end":1590,"column_start":44,"column_end":52},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1874},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":409451,"byte_end":409459,"line_start":1606,"line_end":1606,"column_start":53,"column_end":61},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1874},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":409626,"byte_end":409634,"line_start":1612,"line_end":1612,"column_start":49,"column_end":57},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1874},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":409702,"byte_end":409710,"line_start":1614,"line_end":1614,"column_start":58,"column_end":66},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1874},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":409949,"byte_end":409954,"line_start":1621,"line_end":1621,"column_start":44,"column_end":49},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1878},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":410435,"byte_end":410440,"line_start":1637,"line_end":1637,"column_start":53,"column_end":58},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1878},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":410611,"byte_end":410616,"line_start":1643,"line_end":1643,"column_start":49,"column_end":54},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1878},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":410688,"byte_end":410693,"line_start":1645,"line_end":1645,"column_start":58,"column_end":63},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1878},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":410939,"byte_end":410950,"line_start":1652,"line_end":1652,"column_start":47,"column_end":58},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1883},"to":{"krate":1,"index":3300}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":411286,"byte_end":411297,"line_start":1666,"line_end":1666,"column_start":47,"column_end":58},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1883},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":411739,"byte_end":411750,"line_start":1685,"line_end":1685,"column_start":52,"column_end":63},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1883},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":411843,"byte_end":411855,"line_start":1690,"line_end":1690,"column_start":44,"column_end":56},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1890},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":412080,"byte_end":412092,"line_start":1700,"line_end":1700,"column_start":32,"column_end":44},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1890},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":412662,"byte_end":412674,"line_start":1725,"line_end":1725,"column_start":30,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1890},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":412931,"byte_end":412943,"line_start":1736,"line_end":1736,"column_start":33,"column_end":45},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1890},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":413075,"byte_end":413085,"line_start":1744,"line_end":1744,"column_start":44,"column_end":54},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":413308,"byte_end":413318,"line_start":1754,"line_end":1754,"column_start":32,"column_end":42},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":413892,"byte_end":413902,"line_start":1779,"line_end":1779,"column_start":33,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":414020,"byte_end":414030,"line_start":1787,"line_end":1787,"column_start":30,"column_end":40},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":414298,"byte_end":414317,"line_start":1798,"line_end":1798,"column_start":44,"column_end":63},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1904},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":414529,"byte_end":414548,"line_start":1807,"line_end":1807,"column_start":32,"column_end":51},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1904},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":414952,"byte_end":414971,"line_start":1825,"line_end":1825,"column_start":33,"column_end":52},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1904},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415089,"byte_end":415108,"line_start":1833,"line_end":1833,"column_start":30,"column_end":49},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1904},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415376,"byte_end":415381,"line_start":1844,"line_end":1844,"column_start":44,"column_end":49},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1910},"to":{"krate":1,"index":2679}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415580,"byte_end":415585,"line_start":1853,"line_end":1853,"column_start":33,"column_end":38},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1910},"to":{"krate":1,"index":8260}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415703,"byte_end":415708,"line_start":1861,"line_end":1861,"column_start":30,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1910},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":415964,"byte_end":415969,"line_start":1872,"line_end":1872,"column_start":32,"column_end":37},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1910},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":418330,"byte_end":418335,"line_start":1961,"line_end":1961,"column_start":61,"column_end":66},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2091},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":419672,"byte_end":419685,"line_start":2010,"line_end":2010,"column_start":61,"column_end":74},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2107},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420752,"byte_end":420763,"line_start":2048,"line_end":2048,"column_start":61,"column_end":72},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2118},"to":{"krate":1,"index":9685}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":420952,"byte_end":420957,"line_start":2054,"line_end":2054,"column_start":38,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":423013,"byte_end":423026,"line_start":2131,"line_end":2131,"column_start":34,"column_end":47},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\e8Perri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.12.2\\src\\set.rs","byte_start":425843,"byte_end":425854,"line_start":2218,"line_end":2218,"column_start":38,"column_end":49},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2118},"to":{"krate":4294967295,"index":4294967295}}]}